Scanning PHP classes and analyzing dependencies...
Scanning PHP class definitions...
Analyzing DI container registrations...
Analyzing class usage patterns...
Performing cross-reference analysis...
{
    "scan_info": {
        "timestamp": "2025-06-17 18:14:09",
        "script_version": "1.0.0",
        "plugin": "MemberPress AI Assistant"
    },
    "statistics": {
        "total_classes": 82,
        "registered_classes": 0,
        "unused_classes": 36,
        "abstract_classes": 5,
        "interfaces": 7,
        "concrete_implementations": 70,
        "di_registrations": 20,
        "usage_patterns": 558,
        "risk_breakdown": {
            "low": 0,
            "medium": 9,
            "high": 27
        },
        "by_type": {
            "class": 75,
            "interface": 7
        },
        "by_namespace": {
            "MemberpressAiAssistant\\Tools": 3,
            "MemberpressAiAssistant\\Llm\\Providers": 3,
            "MemberpressAiAssistant\\Llm\\Services": 4,
            "MemberpressAiAssistant\\Llm\\Interfaces": 1,
            "MemberpressAiAssistant\\Llm\\ValueObjects": 3,
            "MemberpressAiAssistant\\DI": 3,
            "MemberpressAiAssistant\\DI\\Providers": 8,
            "MemberpressAiAssistant\\Cache": 2,
            "MemberpressAiAssistant": 1,
            "MemberpressAiAssistant\\Tests": 4,
            "MemberpressAiAssistant\\Admin": 4,
            "MemberpressAiAssistant\\Agents": 4,
            "MemberpressAiAssistant\\Utilities": 2,
            "MemberpressAiAssistant\\Abstracts": 3,
            "MemberpressAiAssistant\\Batch": 2,
            "MemberpressAiAssistant\\Examples": 1,
            "MemberpressAiAssistant\\Orchestration": 3,
            "MemberpressAiAssistant\\Registry": 2,
            "MemberpressAiAssistant\\Factory": 1,
            "MemberpressAiAssistant\\Services": 7,
            "MemberpressAiAssistant\\Services\\Settings": 3,
            "MemberpressAiAssistant\\Services\\Adapters": 5,
            "MemberpressAiAssistant\\Services\\Transformers": 5,
            "MemberpressAiAssistant\\Validation": 2,
            "MemberpressAiAssistant\\Interfaces": 6
        }
    },
    "classes": [
        {
            "name": "WordPressTool",
            "full_name": "MemberpressAiAssistant\\Tools\\WordPressTool",
            "namespace": "MemberpressAiAssistant\\Tools",
            "type": "class",
            "file": "Tools/WordPressTool.php",
            "line": 15,
            "extends": "AbstractTool",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getToolDefinition",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validateParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "executeInternal",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "create_post",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_post",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "update_post",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "delete_post",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "list_posts",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "create_user",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_user",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "update_user",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "list_users",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "create_term",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_term",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "update_term",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "delete_term",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "list_terms",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_option",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "update_option",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "list_plugins",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "list_pages",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "memberpress_list_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "memberpress_list_membership_levels",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "memberpress_create_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "memberpress_get_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "memberpress_update_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "memberpress_delete_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getMemberPressTool",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstracttool",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractTool"
                },
                {
                    "name": "post_type=\"post\".'",
                    "type": "post_type=\"post\".'"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ContentTool",
            "full_name": "MemberpressAiAssistant\\Tools\\ContentTool",
            "namespace": "MemberpressAiAssistant\\Tools",
            "type": "class",
            "file": "Tools/ContentTool.php",
            "line": 15,
            "extends": "AbstractTool",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "executeInternal",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "format_content",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "organize_content",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "manage_media",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "optimize_seo",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "manage_revisions",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstracttool",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractTool"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MemberPressTool",
            "full_name": "MemberpressAiAssistant\\Tools\\MemberPressTool",
            "namespace": "MemberpressAiAssistant\\Tools",
            "type": "class",
            "file": "Tools/MemberPressTool.php",
            "line": 16,
            "extends": "AbstractTool",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setBatchProcessor",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateSingleOperation",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "executeInternal",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "create_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "update_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "delete_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "list_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "create_access_rule",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "update_access_rule",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "delete_access_rule",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "manage_pricing",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "associate_user_with_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "disassociate_user_from_membership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_user_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "update_user_role",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_user_permissions",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_get_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_update_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_delete_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_create_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_create_access_rules",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_update_access_rules",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_delete_access_rules",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_associate_users",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_disassociate_users",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_get_user_memberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_update_user_roles",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batch_get_user_permissions",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "listMemberships",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstracttool",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractTool"
                },
                {
                    "name": "memberpressservice",
                    "type": "MemberpressAiAssistant\\Services\\MemberPressService"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "OpenAiClient",
            "full_name": "MemberpressAiAssistant\\Llm\\Providers\\OpenAiClient",
            "namespace": "MemberpressAiAssistant\\Llm\\Providers",
            "type": "class",
            "file": "Llm/Providers/OpenAiClient.php",
            "line": 17,
            "extends": "AbstractLlmClient",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "sendMessage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "formatToolsForOpenAi",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "parseResponse",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmrequest",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                },
                {
                    "name": "llmresponse",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                },
                {
                    "name": "llmproviderconfig",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AbstractLlmClient",
            "full_name": "MemberpressAiAssistant\\Llm\\Providers\\AbstractLlmClient",
            "namespace": "MemberpressAiAssistant\\Llm\\Providers",
            "type": "class",
            "file": "Llm/Providers/AbstractLlmClient.php",
            "line": 18,
            "extends": null,
            "implements": [
                "LlmClientInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProviderName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAvailableModels",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "sendMessage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testConnection",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "buildHeaders",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "makeHttpRequest",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getModelForRequest",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTemperatureForRequest",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getMaxTokensForRequest",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmclientinterface",
                    "type": "MemberpressAiAssistant\\Llm\\Interfaces\\LlmClientInterface"
                },
                {
                    "name": "llmproviderconfig",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig"
                },
                {
                    "name": "llmrequest",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                },
                {
                    "name": "llmresponse",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                },
                {
                    "name": "for a request\n     *\n     * @param llmrequest $request the request\n     * @return string the model to use\n     */\n    protected function getmodelforrequest(llmrequest $request): string {\n        $model = $request->getoption('model', $this->config->getdefaultmodel())",
                    "type": "for a request\n     *\n     * @param LlmRequest $request The request\n     * @return string The model to use\n     */\n    protected function getModelForRequest(LlmRequest $request): string {\n        $model = $request->getOption('model', $this->config->getDefaultModel())"
                },
                {
                    "name": "the default model\n        if (!$this->config->ismodelavailable($model)) {\n            $model = $this->config->getdefaultmodel()",
                    "type": "the default model\n        if (!$this->config->isModelAvailable($model)) {\n            $model = $this->config->getDefaultModel()"
                },
                {
                    "name": "for a request\n     *\n     * @param llmrequest $request the request\n     * @return float the temperature to use\n     */\n    protected function gettemperatureforrequest(llmrequest $request): float {\n        return $request->getoption('temperature', $this->config->getdefaulttemperature())",
                    "type": "for a request\n     *\n     * @param LlmRequest $request The request\n     * @return float The temperature to use\n     */\n    protected function getTemperatureForRequest(LlmRequest $request): float {\n        return $request->getOption('temperature', $this->config->getDefaultTemperature())"
                },
                {
                    "name": "for a request\n     *\n     * @param llmrequest $request the request\n     * @return int|null the max tokens to use\n     */\n    protected function getmaxtokensforrequest(llmrequest $request): ?int {\n        return $request->getoption('max_tokens', $this->config->getdefaultmaxtokens())",
                    "type": "for a request\n     *\n     * @param LlmRequest $request The request\n     * @return int|null The max tokens to use\n     */\n    protected function getMaxTokensForRequest(LlmRequest $request): ?int {\n        return $request->getOption('max_tokens', $this->config->getDefaultMaxTokens())"
                }
            ],
            "is_abstract": true,
            "is_final": false
        },
        {
            "name": "AnthropicClient",
            "full_name": "MemberpressAiAssistant\\Llm\\Providers\\AnthropicClient",
            "namespace": "MemberpressAiAssistant\\Llm\\Providers",
            "type": "class",
            "file": "Llm/Providers/AnthropicClient.php",
            "line": 17,
            "extends": "AbstractLlmClient",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "sendMessage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "buildHeaders",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "convertMessagesToAnthropicFormat",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatToolsForAnthropic",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "parseResponse",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmrequest",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                },
                {
                    "name": "llmresponse",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                },
                {
                    "name": "llmproviderconfig",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmChatAdapter",
            "full_name": "MemberpressAiAssistant\\Llm\\Services\\LlmChatAdapter",
            "namespace": "MemberpressAiAssistant\\Llm\\Services",
            "type": "class",
            "file": "Llm/Services/LlmChatAdapter.php",
            "line": 20,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "initializeWpTools",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "processToolCalls",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "processWordPressToolOperation",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "processMemberPressToolOperation",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "convertHistoryToMessages",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "storeConversation",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "prepareToolsForLlm",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "prepareWordPressToolOperations",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "prepareMemberPressToolOperations",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "generateConversationId",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmrequest",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                },
                {
                    "name": "llmresponse",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                },
                {
                    "name": "toolregistry",
                    "type": "MemberpressAiAssistant\\Registry\\ToolRegistry"
                },
                {
                    "name": "contextmanager",
                    "type": "MemberpressAiAssistant\\Orchestration\\ContextManager"
                },
                {
                    "name": "messageprotocol",
                    "type": "MemberpressAiAssistant\\Orchestration\\MessageProtocol"
                },
                {
                    "name": "tableformatter",
                    "type": "MemberpressAiAssistant\\Utilities\\TableFormatter"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmProviderFactory",
            "full_name": "MemberpressAiAssistant\\Llm\\Services\\LlmProviderFactory",
            "namespace": "MemberpressAiAssistant\\Llm\\Services",
            "type": "class",
            "file": "Llm/Services/LlmProviderFactory.php",
            "line": 19,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerProvider",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createProvider",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProviderConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setProviderConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProviders",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasProvider",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmclientinterface",
                    "type": "MemberpressAiAssistant\\Llm\\Interfaces\\LlmClientInterface"
                },
                {
                    "name": "anthropicclient",
                    "type": "MemberpressAiAssistant\\Llm\\Providers\\AnthropicClient"
                },
                {
                    "name": "openaiclient",
                    "type": "MemberpressAiAssistant\\Llm\\Providers\\OpenAiClient"
                },
                {
                    "name": "llmproviderconfig",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmCacheAdapter",
            "full_name": "MemberpressAiAssistant\\Llm\\Services\\LlmCacheAdapter",
            "namespace": "MemberpressAiAssistant\\Llm\\Services",
            "type": "class",
            "file": "Llm/Services/LlmCacheAdapter.php",
            "line": 18,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getCachedResponse",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "cacheResponse",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "generateCacheKey",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "shouldCache",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getTtl",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "clearCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "deletePatternFromCache",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getConfigOption",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmrequest",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                },
                {
                    "name": "llmresponse",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "configurationservice",
                    "type": "MemberpressAiAssistant\\Services\\ConfigurationService"
                },
                {
                    "name": "they might have side effects\n        if (!empty($request->gettools())) {\n            return false",
                    "type": "they might have side effects\n        if (!empty($request->getTools())) {\n            return false"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmOrchestrator",
            "full_name": "MemberpressAiAssistant\\Llm\\Services\\LlmOrchestrator",
            "namespace": "MemberpressAiAssistant\\Llm\\Services",
            "type": "class",
            "file": "Llm/Services/LlmOrchestrator.php",
            "line": 17,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "executeRequest",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "handleFallback",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "logFallback",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "withProvider",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withFallback",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getPrimaryProvider",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getFallbackProvider",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "shouldUseOpenAiForTools",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmrequest",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                },
                {
                    "name": "llmresponse",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                },
                {
                    "name": "llmclientinterface",
                    "type": "MemberpressAiAssistant\\Llm\\Interfaces\\LlmClientInterface"
                },
                {
                    "name": "openai\n     *\n     * @var array\n     */\n    private $openaitooloperations = [\n        'list_plugins',\n        'list_posts',\n        'list_users',\n        'list_terms',\n        // add other structured data operations here\n    ]",
                    "type": "OpenAI\n     *\n     * @var array\n     */\n    private $openaiToolOperations = [\n        'list_plugins',\n        'list_posts',\n        'list_users',\n        'list_terms',\n        // Add other structured data operations here\n    ]"
                },
                {
                    "name": "openai\n        $providername = $request->getoption('provider', $this->primaryprovider)",
                    "type": "OpenAI\n        $providerName = $request->getOption('provider', $this->primaryProvider)"
                },
                {
                    "name": "openai for tools\n     *\n     * @param array $tools the tools in the request\n     * @return bool whether to use openai\n     */\n    private function shoulduseopenaifortools(array $tools): bool {\n        foreach ($tools as $tool) {\n            $toolname = $tool['name'] ?? ''",
                    "type": "OpenAI for tools\n     *\n     * @param array $tools The tools in the request\n     * @return bool Whether to use OpenAI\n     */\n    private function shouldUseOpenAiForTools(array $tools): bool {\n        foreach ($tools as $tool) {\n            $toolName = $tool['name'] ?? ''"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmClientInterface",
            "full_name": "MemberpressAiAssistant\\Llm\\Interfaces\\LlmClientInterface",
            "namespace": "MemberpressAiAssistant\\Llm\\Interfaces",
            "type": "interface",
            "file": "Llm/Interfaces/LlmClientInterface.php",
            "line": 16,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "sendMessage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testConnection",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProviderName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAvailableModels",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "llmrequest",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                },
                {
                    "name": "llmresponse",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmRequest",
            "full_name": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "namespace": "MemberpressAiAssistant\\Llm\\ValueObjects",
            "type": "class",
            "file": "Llm/ValueObjects/LlmRequest.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMessages",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTools",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getOptions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getOption",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withOption",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withOptions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withTools",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withMessage",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "* @return self a new instance with the tools\n     */\n    public function withtools(array $tools): self {\n        return new self($this->messages, $tools, $this->options)",
                    "type": "* @return self A new instance with the tools\n     */\n    public function withTools(array $tools): self {\n        return new self($this->messages, $tools, $this->options)"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmResponse",
            "full_name": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "namespace": "MemberpressAiAssistant\\Llm\\ValueObjects",
            "type": "class",
            "file": "Llm/ValueObjects/LlmResponse.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasToolCalls",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolCalls",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProvider",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getModel",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getUsage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getRawResponse",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "fromError",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "isError",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getErrorMessage",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmProviderConfig",
            "full_name": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "namespace": "MemberpressAiAssistant\\Llm\\ValueObjects",
            "type": "class",
            "file": "Llm/ValueObjects/LlmProviderConfig.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDefaultModel",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withDefaultModel",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAvailableModels",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isModelAvailable",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDefaultTemperature",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDefaultMaxTokens",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getOption",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getOptions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withOption",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "withOptions",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "*\n     * @var string\n     */\n    private $defaultmodel",
                    "type": "*\n     * @var string\n     */\n    private $defaultModel"
                },
                {
                    "name": "* @param array    $availablemodels    available models for this provider\n     * @param float    $defaulttemperature default temperature setting\n     * @param int|null $defaultmaxtokens   default max tokens setting\n     * @param array    $options            additional configuration options\n     */\n    public function __construct(\n        string $name,\n        string $defaultmodel,\n        array $availablemodels = [],\n        float $defaulttemperature = 0.7,\n        ?int $defaultmaxtokens = null,\n        array $options = []\n    ) {\n        $this->name = $name",
                    "type": "* @param array    $availableModels    Available models for this provider\n     * @param float    $defaultTemperature Default temperature setting\n     * @param int|null $defaultMaxTokens   Default max tokens setting\n     * @param array    $options            Additional configuration options\n     */\n    public function __construct(\n        string $name,\n        string $defaultModel,\n        array $availableModels = [],\n        float $defaultTemperature = 0.7,\n        ?int $defaultMaxTokens = null,\n        array $options = []\n    ) {\n        $this->name = $name"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "Container",
            "full_name": "MemberpressAiAssistant\\DI\\Container",
            "namespace": "MemberpressAiAssistant\\DI",
            "type": "class",
            "file": "DI/Container.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "bind",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "singleton",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "make",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "build",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "resolveDependencies",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "bound",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getBinding",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getBindings",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getInstances",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "the abstract type\n        if (is_null($concrete)) {\n            $concrete = $abstract",
                    "type": "the abstract type\n        if (is_null($concrete)) {\n            $concrete = $abstract"
                },
                {
                    "name": "it\n            if (array_key_exists($dependency->name, $parameters)) {\n                $results[] = $parameters[$dependency->name]",
                    "type": "it\n            if (array_key_exists($dependency->name, $parameters)) {\n                $results[] = $parameters[$dependency->name]"
                },
                {
                    "name": "it\n            if ($dependency->isdefaultvalueavailable()) {\n                $results[] = $dependency->getdefaultvalue()",
                    "type": "it\n            if ($dependency->isDefaultValueAvailable()) {\n                $results[] = $dependency->getDefaultValue()"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "CacheServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\CacheServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/CacheServiceProvider.php",
            "line": 20,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "cachedtoolwrapper",
                    "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                },
                {
                    "name": "advancedcachestrategy",
                    "type": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy"
                },
                {
                    "name": "cachewarmer",
                    "type": "MemberpressAiAssistant\\Cache\\CacheWarmer"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                },
                {
                    "name": "($locator) {\n            $cacheservice = $locator->get('cache')",
                    "type": "($locator) {\n            $cacheService = $locator->get('cache')"
                },
                {
                    "name": "($locator) {\n            $cacheservice = $locator->get('cache')",
                    "type": "($locator) {\n            $cacheService = $locator->get('cache')"
                },
                {
                    "name": "($locator) {\n            $cacheservice = $locator->get('cache')",
                    "type": "($locator) {\n            $cacheService = $locator->get('cache')"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ToolRegistryProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\ToolRegistryProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/ToolRegistryProvider.php",
            "line": 20,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerBuiltInTools",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "toolregistry",
                    "type": "MemberpressAiAssistant\\Registry\\ToolRegistry"
                },
                {
                    "name": "wordpresstool",
                    "type": "MemberpressAiAssistant\\Tools\\WordPressTool"
                },
                {
                    "name": "memberpresstool",
                    "type": "MemberpressAiAssistant\\Tools\\MemberPressTool"
                },
                {
                    "name": "contenttool",
                    "type": "MemberpressAiAssistant\\Tools\\ContentTool"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LlmServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\LlmServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/LlmServiceProvider.php",
            "line": 23,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerProviderConfigurations",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerSettings",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "anthropicclient",
                    "type": "MemberpressAiAssistant\\Llm\\Providers\\AnthropicClient"
                },
                {
                    "name": "openaiclient",
                    "type": "MemberpressAiAssistant\\Llm\\Providers\\OpenAiClient"
                },
                {
                    "name": "llmcacheadapter",
                    "type": "MemberpressAiAssistant\\Llm\\Services\\LlmCacheAdapter"
                },
                {
                    "name": "llmchatadapter",
                    "type": "MemberpressAiAssistant\\Llm\\Services\\LlmChatAdapter"
                },
                {
                    "name": "llmorchestrator",
                    "type": "MemberpressAiAssistant\\Llm\\Services\\LlmOrchestrator"
                },
                {
                    "name": "llmproviderfactory",
                    "type": "MemberpressAiAssistant\\Llm\\Services\\LlmProviderFactory"
                },
                {
                    "name": "llmproviderconfig",
                    "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "CoreServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\CoreServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/CoreServiceProvider.php",
            "line": 17,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "configurationservice",
                    "type": "MemberpressAiAssistant\\Services\\ConfigurationService"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->get('logger')",
                    "type": "($locator) {\n            $logger = $locator->get('logger')"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "IntegrationServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\IntegrationServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/IntegrationServiceProvider.php",
            "line": 17,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerAdapters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "registerTransformers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "memberpressservice",
                    "type": "MemberpressAiAssistant\\Services\\MemberPressService"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "OrchestrationServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\OrchestrationServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/OrchestrationServiceProvider.php",
            "line": 23,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "orchestratorservice",
                    "type": "MemberpressAiAssistant\\Services\\OrchestratorService"
                },
                {
                    "name": "chatinterfaceservice",
                    "type": "MemberpressAiAssistant\\Services\\ChatInterfaceService"
                },
                {
                    "name": "agentorchestrator",
                    "type": "MemberpressAiAssistant\\Orchestration\\AgentOrchestrator"
                },
                {
                    "name": "contextmanager",
                    "type": "MemberpressAiAssistant\\Orchestration\\ContextManager"
                },
                {
                    "name": "agentfactory",
                    "type": "MemberpressAiAssistant\\Factory\\AgentFactory"
                },
                {
                    "name": "agentregistry",
                    "type": "MemberpressAiAssistant\\Registry\\AgentRegistry"
                },
                {
                    "name": "toolregistry",
                    "type": "MemberpressAiAssistant\\Registry\\ToolRegistry"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                },
                {
                    "name": "($locator) {\n            $agentregistry = $locator->get('agent_registry')",
                    "type": "($locator) {\n            $agentRegistry = $locator->get('agent_registry')"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                },
                {
                    "name": "($locator) {\n            $agentregistry = $locator->get('agent_registry')",
                    "type": "($locator) {\n            $agentRegistry = $locator->get('agent_registry')"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SettingsServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\SettingsServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/SettingsServiceProvider.php",
            "line": 19,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "settingsmodelservice",
                    "type": "MemberpressAiAssistant\\Services\\Settings\\SettingsModelService"
                },
                {
                    "name": "settingsviewservice",
                    "type": "MemberpressAiAssistant\\Services\\Settings\\SettingsViewService"
                },
                {
                    "name": "settingscontrollerservice",
                    "type": "MemberpressAiAssistant\\Services\\Settings\\SettingsControllerService"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->get('logger')",
                    "type": "($locator) {\n            $logger = $locator->get('logger')"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->get('logger')",
                    "type": "($locator) {\n            $logger = $locator->get('logger')"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->get('logger')",
                    "type": "($locator) {\n            $logger = $locator->get('logger')"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AdminServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\Providers\\AdminServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI\\Providers",
            "type": "class",
            "file": "DI/Providers/AdminServiceProvider.php",
            "line": 19,
            "extends": "ServiceProvider",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "serviceprovider",
                    "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "mpaiadminmenu",
                    "type": "MemberpressAiAssistant\\Admin\\MPAIAdminMenu"
                },
                {
                    "name": "mpaiajaxhandler",
                    "type": "MemberpressAiAssistant\\Admin\\MPAIAjaxHandler"
                },
                {
                    "name": "mpaikeymanager",
                    "type": "MemberpressAiAssistant\\Admin\\MPAIKeyManager"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                },
                {
                    "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                    "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ServiceLocator",
            "full_name": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "namespace": "MemberpressAiAssistant\\DI",
            "type": "class",
            "file": "DI/ServiceLocator.php",
            "line": 14,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "has",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDefinitions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getInstances",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "singleton",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "transient",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ServiceProvider",
            "full_name": "MemberpressAiAssistant\\DI\\ServiceProvider",
            "namespace": "MemberpressAiAssistant\\DI",
            "type": "class",
            "file": "DI/ServiceProvider.php",
            "line": 14,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "provides",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerSingleton",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "registerTransient",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "hasService",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getService",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": true,
            "is_final": false
        },
        {
            "name": "CacheWarmer",
            "full_name": "MemberpressAiAssistant\\Cache\\CacheWarmer",
            "namespace": "MemberpressAiAssistant\\Cache",
            "type": "class",
            "file": "Cache/CacheWarmer.php",
            "line": 22,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "initializeMetrics",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "registerCronEvents",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "runScheduledWarming",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmCacheOnActivation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmCacheByPriority",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmHighPriorityCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmMemberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "warmMembers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "warmTransactions",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "warmPosts",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "warmMembershipCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmMemberCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmTransactionCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "warmPostCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSortedOperations",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setWarmingConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getWarmingConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setWarmingOperations",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addWarmingOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getWarmingOperations",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMetrics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "resetMetrics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setEnabled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isEnabled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "log",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "cachedtoolwrapper",
                    "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                },
                {
                    "name": "a generic approach\n                default:\n                    // for now, just simulate warming by generating a cache key\n                    $cachekey = 'tool_execution_' . $tooltype . '_' . $operationname . '_' . md5(json_encode($params))",
                    "type": "a generic approach\n                default:\n                    // For now, just simulate warming by generating a cache key\n                    $cacheKey = 'tool_execution_' . $toolType . '_' . $operationName . '_' . md5(json_encode($params))"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AdvancedCacheStrategy",
            "full_name": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy",
            "namespace": "MemberpressAiAssistant\\Cache",
            "type": "class",
            "file": "Cache/AdvancedCacheStrategy.php",
            "line": 21,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "determineStrategy",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getOperationCharacteristics",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "selectStrategyFromCharacteristics",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "applyTtlAdjustments",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setOperationCharacteristics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setStrategyTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getPerformanceMetrics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "trackCacheHit",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "trackCacheMiss",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getStrategies",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getFallbackTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "log",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "longer cache\n            return 'long_lived'",
                    "type": "longer cache\n            return 'long_lived'"
                },
                {
                    "name": "at least medium-lived cache\n            return $volatility === 'low' ? 'long_lived' : 'medium_lived'",
                    "type": "at least medium-lived cache\n            return $volatility === 'low' ? 'long_lived' : 'medium_lived'"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ChatInterface",
            "full_name": "MemberpressAiAssistant\\ChatInterface",
            "namespace": "MemberpressAiAssistant",
            "type": "class",
            "file": "ChatInterface.php",
            "line": 19,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "getInstance",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "__construct",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "addModuleTypeToScripts",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerAssets",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerAdminAssets",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "renderChatInterface",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "renderAdminChatInterface",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "renderChatContainerHTML",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "registerRestRoutes",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "processChatRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "checkChatPermissions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "shouldLoadChatInterface",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "shouldLoadAdminChatInterface",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getChatConfig",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getUserConversationId",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "saveUserConversationId",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "clearUserConversationHistory",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatPluginListAsTable",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatPostListAsTable",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatPageListAsTable",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatCommentListAsTable",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatMembershipListAsTable",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatUserListAsTable",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "formatMembershipLevelListAsTable",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "enhanceBlogPostPrompt",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                },
                {
                    "name": "the agent orchestrator directly\n            $useagentorchestrator = false",
                    "type": "the agent orchestrator directly\n            $useAgentOrchestrator = false"
                },
                {
                    "name": "llm services first for non-membership requests\n                $useagentorchestrator = false",
                    "type": "LLM services first for non-membership requests\n                $useAgentOrchestrator = false"
                },
                {
                    "name": "the llm services first\n            if ($mpai_service_locator->has('llm.chat_adapter') && !$useagentorchestrator) {\n                try {\n                    // get the llm chat adapter\n                    $chatadapter = $mpai_service_locator->get('llm.chat_adapter')",
                    "type": "the LLM services first\n            if ($mpai_service_locator->has('llm.chat_adapter') && !$useAgentOrchestrator) {\n                try {\n                    // Get the LLM chat adapter\n                    $chatAdapter = $mpai_service_locator->get('llm.chat_adapter')"
                },
                {
                    "name": "the existing one\n                    $conversation_id = $response['conversation_id'] ?? $conversation_id",
                    "type": "the existing one\n                    $conversation_id = $response['conversation_id'] ?? $conversation_id"
                },
                {
                    "name": "the existing one\n                $conversation_id = $response['conversation_id'] ?? $conversation_id",
                    "type": "the existing one\n                $conversation_id = $response['conversation_id'] ?? $conversation_id"
                },
                {
                    "name": "wp_error(\n                'mpai_not_logged_in',\n                __('you must be logged in to use the chat.', 'memberpress-copilot'),\n                ['status' => 401]\n            )",
                    "type": "the chat\n     *\n     * @param \\WP_REST_Request $request The REST request\n     * @return bool|WP_Error True if the user has permission, WP_Error otherwise\n     */\n    public function checkChatPermissions($request) {\n        // Check if user is logged in\n        if (!is_user_logged_in()) {\n            return new \\WP_Error(\n                'mpai_not_logged_in',\n                __('You must be logged in to use the chat.', 'memberpress-copilot'),\n                ['status' => 401]\n            )"
                },
                {
                    "name": "the chat.', 'memberpress-copilot'),\n                ['status' => 403]\n            )",
                    "type": "the chat.', 'memberpress-copilot'),\n                ['status' => 403]\n            )"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "CachedToolWrapperTest",
            "full_name": "MemberpressAiAssistant\\Tests\\CachedToolWrapperTest",
            "namespace": "MemberpressAiAssistant\\Tests",
            "type": "class",
            "file": "Tests/CachedToolWrapperTest.php",
            "line": 18,
            "extends": "TestCase",
            "implements": [],
            "methods": [
                {
                    "name": "setUp",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "testExecuteWithCaching",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testExecuteWithCacheHit",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testExecuteNonCacheableOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testTtlConfiguration",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testInvalidateToolCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testInvalidateOperationCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testInvalidateAllToolCaches",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "cachedtoolwrapper",
                    "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "toolinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                },
                {
                    "name": "testcase",
                    "type": "PHPUnit\\Framework\\TestCase"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MockTool",
            "full_name": "MemberpressAiAssistant\\Tests\\MockTool",
            "namespace": "MemberpressAiAssistant\\Tests",
            "type": "class",
            "file": "Tests/CachedToolWrapperManualTest.php",
            "line": 20,
            "extends": null,
            "implements": [
                "ToolInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolDefinition",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "execute",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "wasExecuteCalled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "resetExecuteCalled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setGetValue",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "set",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "deletePattern",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getCallCount",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "resetCalls",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "cachedtoolwrapper",
                    "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "toolinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MockCacheService",
            "full_name": "MemberpressAiAssistant\\Tests\\MockCacheService",
            "namespace": "MemberpressAiAssistant\\Tests",
            "type": "class",
            "file": "Tests/CachedToolWrapperManualTest.php",
            "line": 125,
            "extends": "CacheService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setGetValue",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "set",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "deletePattern",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getCallCount",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "resetCalls",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "cachedtoolwrapper",
                    "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "toolinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "CachedToolWrapperIntegrationTest",
            "full_name": "MemberpressAiAssistant\\Tests\\CachedToolWrapperIntegrationTest",
            "namespace": "MemberpressAiAssistant\\Tests",
            "type": "class",
            "file": "Tests/CachedToolWrapperIntegrationTest.php",
            "line": 26,
            "extends": "TestCase",
            "implements": [],
            "methods": [
                {
                    "name": "setUp",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "testCachedToolWrapperUsesAdvancedCacheStrategy",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testCachedToolWrapperRegistersOperationsWithCacheWarmer",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testCachedToolWrapperUsesConfigurationService",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testEndToEndCachingFlow",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testCacheInvalidationWithCacheWarmer",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "testDebugModeBypasses",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "cachedtoolwrapper",
                    "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "configurationservice",
                    "type": "MemberpressAiAssistant\\Services\\ConfigurationService"
                },
                {
                    "name": "advancedcachestrategy",
                    "type": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy"
                },
                {
                    "name": "cachewarmer",
                    "type": "MemberpressAiAssistant\\Cache\\CacheWarmer"
                },
                {
                    "name": "toolinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                },
                {
                    "name": "testcase",
                    "type": "PHPUnit\\Framework\\TestCase"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MPAIAdminMenu",
            "full_name": "MemberpressAiAssistant\\Admin\\MPAIAdminMenu",
            "namespace": "MemberpressAiAssistant\\Admin",
            "type": "class",
            "file": "Admin/MPAIAdminMenu.php",
            "line": 19,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "set_settings_controller",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "register_admin_menu",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register_memberpress_submenu",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "register_top_level_menu",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "render_settings_page",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_fallback_settings_page",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "ensure_chat_assets_enqueued",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "render_welcome_page",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "highlight_parent_menu",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "highlight_submenu",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "log",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "logWithLevel",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "settingscontrollerservice",
                    "type": "MemberpressAiAssistant\\Services\\Settings\\SettingsControllerService"
                },
                {
                    "name": "in closures\n        $self = $this",
                    "type": "in closures\n        $self = $this"
                },
                {
                    "name": "($self) {\n            return $self",
                    "type": "($self) {\n            return $self"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MPAIAjaxHandler",
            "full_name": "MemberpressAiAssistant\\Admin\\MPAIAjaxHandler",
            "namespace": "MemberpressAiAssistant\\Admin",
            "type": "class",
            "file": "Admin/MPAIAjaxHandler.php",
            "line": 15,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handle_get_chat_interface",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getChatConfigForAjax",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getChatInterfaceAssets",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "handle_process_chat",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "handle_chat_request",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "handle_test_api_connection",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "the chat.', 'memberpress-copilot')])",
                    "type": "the chat.', 'memberpress-copilot')])"
                },
                {
                    "name": "($message) {\n            if ($param === 'message') {\n                return $message",
                    "type": "($message) {\n            if ($param === 'message') {\n                return $message"
                },
                {
                    "name": "the chat.', 'memberpress-copilot')])",
                    "type": "the chat.', 'memberpress-copilot')])"
                },
                {
                    "name": "($data) {\n            return isset($data[$param]) ? $data[$param] : null",
                    "type": "($data) {\n            return isset($data[$param]) ? $data[$param] : null"
                },
                {
                    "name": "($api_key) {\n            return $api_key",
                    "type": "($api_key) {\n            return $api_key"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MPAIKeyManager",
            "full_name": "MemberpressAiAssistant\\Admin\\MPAIKeyManager",
            "namespace": "MemberpressAiAssistant\\Admin",
            "type": "class",
            "file": "Admin/MPAIKeyManager.php",
            "line": 26,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_api_key",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "verify_security_context",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "verify_request_origin",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "verify_plugin_integrity",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "check_rate_limit",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "get_current_service_type",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "test_api_connection",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "test_openai_connection",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "test_anthropic_connection",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "log_error",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "validate_key_format",
                    "visibility": "private",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                },
                {
                    "name": "debug_log(\"mpai debug - using override key from addon for service: {$service_type}\")",
                    "type": "it\n        if ($override_key !== null) {\n            \\MemberpressAiAssistant\\Utilities\\debug_log(\"MPAI Debug - Using override key from addon for service: {$service_type}\")"
                },
                {
                    "name": "($current_time) {\n                return $current_time - $timestamp < 60",
                    "type": "($current_time) {\n                return $current_time - $timestamp < 60"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MPAIPostHandler",
            "full_name": "MemberpressAiAssistant\\Admin\\MPAIPostHandler",
            "namespace": "MemberpressAiAssistant\\Admin",
            "type": "class",
            "file": "Admin/MPAIPostHandler.php",
            "line": 17,
            "extends": null,
            "implements": [
                "\\MemberpressAiAssistant\\Interfaces\\ServiceInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getServiceName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDependencies",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "handleCreatePost",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "handleCreatePostNoPriv",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SystemAgent",
            "full_name": "MemberpressAiAssistant\\Agents\\SystemAgent",
            "namespace": "MemberpressAiAssistant\\Agents",
            "type": "class",
            "file": "Agents/SystemAgent.php",
            "line": 15,
            "extends": "AbstractAgent",
            "implements": [],
            "methods": [
                {
                    "name": "getAgentName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAgentDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSystemPrompt",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerCapabilities",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSystemInfo",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "runDiagnostics",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "updateSystemConfig",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getSystemConfig",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "listPlugins",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "activatePlugin",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "deactivatePlugin",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "updatePlugin",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getPluginInfo",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "monitorPerformance",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "optimizeSystem",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "clearCache",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGeneralIntent",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGreeting",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateIntentMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateEntityRelevanceScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateCapabilityMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateContextContinuityScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyScoreMultipliers",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractagent",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ValidationAgent",
            "full_name": "MemberpressAiAssistant\\Agents\\ValidationAgent",
            "namespace": "MemberpressAiAssistant\\Agents",
            "type": "class",
            "file": "Agents/ValidationAgent.php",
            "line": 15,
            "extends": "AbstractAgent",
            "implements": [],
            "methods": [
                {
                    "name": "getAgentName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAgentDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSystemPrompt",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerCapabilities",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validateInput",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "sanitizeInput",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "verifyPermission",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "checkAccess",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "enforcePolicy",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateForm",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "checkCsrfToken",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateRequest",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "scanForVulnerabilities",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "generateSecureToken",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateIntentMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateEntityRelevanceScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateCapabilityMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateContextContinuityScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyScoreMultipliers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGeneralIntent",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGreeting",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractagent",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ContentAgent",
            "full_name": "MemberpressAiAssistant\\Agents\\ContentAgent",
            "namespace": "MemberpressAiAssistant\\Agents",
            "type": "class",
            "file": "Agents/ContentAgent.php",
            "line": 15,
            "extends": "AbstractAgent",
            "implements": [],
            "methods": [
                {
                    "name": "getAgentName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAgentDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSystemPrompt",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerCapabilities",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createPost",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "updatePost",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "deletePost",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getPost",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "listPosts",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "uploadMedia",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getMedia",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "deleteMedia",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "listMedia",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "organizeContent",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "formatContent",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateIntentMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateEntityRelevanceScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateCapabilityMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateContextContinuityScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyScoreMultipliers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGeneralIntent",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGreeting",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractagent",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MemberPressAgent",
            "full_name": "MemberpressAiAssistant\\Agents\\MemberPressAgent",
            "namespace": "MemberpressAiAssistant\\Agents",
            "type": "class",
            "file": "Agents/MemberPressAgent.php",
            "line": 15,
            "extends": "AbstractAgent",
            "implements": [],
            "methods": [
                {
                    "name": "getAgentName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAgentDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSystemPrompt",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerCapabilities",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setMemberPressService",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createMembership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "updateMembership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "deleteMembership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getMembership",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "listMemberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "createAccessRule",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "updateAccessRule",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "deleteAccessRule",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "managePricing",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateIntentMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateEntityRelevanceScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateCapabilityMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateContextContinuityScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyScoreMultipliers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGeneralIntent",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleGreeting",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractagent",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "LoggingUtility",
            "full_name": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "namespace": "MemberpressAiAssistant\\Utilities",
            "type": "class",
            "file": "Utilities/LoggingUtility.php",
            "line": 17,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "init",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "getLogLevel",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "log",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "error",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "warning",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "info",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "debug",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "trace",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "shouldSuppressDebugLogs",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "shouldLog",
                    "visibility": "private",
                    "is_static": true
                },
                {
                    "name": "formatMessage",
                    "visibility": "private",
                    "is_static": true
                }
            ],
            "dependencies": [
                {
                    "name": "* @param bool $detailedlogging whether to enable detailed logging\n     * @return void\n     */\n    public static function init($loglevel = self::level_info, $detailedlogging = false) {\n        // check if already initialized\n        if (self::$initialized) {\n            // only update the log level if it's different\n            if (self::$loglevel !== $loglevel) {\n                self::$loglevel = $loglevel",
                    "type": "* @param bool $detailedLogging Whether to enable detailed logging\n     * @return void\n     */\n    public static function init($logLevel = self::LEVEL_INFO, $detailedLogging = false) {\n        // Check if already initialized\n        if (self::$initialized) {\n            // Only update the log level if it's different\n            if (self::$logLevel !== $logLevel) {\n                self::$logLevel = $logLevel"
                },
                {
                    "name": "the in-memory array to prevent duplicates in the same request\n            $backtrace = debug_backtrace(debug_backtrace_ignore_args, 3)",
                    "type": "the in-memory array to prevent duplicates in the same request\n            $backtrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS, 3)"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "TableFormatter",
            "full_name": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "namespace": "MemberpressAiAssistant\\Utilities",
            "type": "class",
            "file": "Utilities/TableFormatter.php",
            "line": 4,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "formatTable",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "formatPluginList",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "formatPostList",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "formatPageList",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "formatCommentList",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "formatMembershipList",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "formatMembershipLevelList",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "formatAsMarkdown",
                    "visibility": "protected",
                    "is_static": true
                },
                {
                    "name": "formatAsHtml",
                    "visibility": "protected",
                    "is_static": true
                },
                {
                    "name": "formatAsPlain",
                    "visibility": "protected",
                    "is_static": true
                },
                {
                    "name": "formatUserList",
                    "visibility": "public",
                    "is_static": true
                }
            ],
            "dependencies": [
                {
                    "name": "(optional)\n     *        - summary: summary information (optional)\n     *        - title: table title (optional)\n     * @return string formatted table\n     */\n    public static function formattable(array $data, array $options = []): string {\n        // default options\n        $options = array_merge([\n            'format' => self::format_markdown,\n            'headers' => [],\n            'summary' => [],\n            'title' => '',\n        ], $options)",
                    "type": "(optional)\n     *        - summary: Summary information (optional)\n     *        - title: Table title (optional)\n     * @return string Formatted table\n     */\n    public static function formatTable(array $data, array $options = []): string {\n        // Default options\n        $options = array_merge([\n            'format' => self::FORMAT_MARKDOWN,\n            'headers' => [],\n            'summary' => [],\n            'title' => '',\n        ], $options)"
                },
                {
                    "name": "the standard table format\n                $headers = $options['headers'] ?? []",
                    "type": "the standard table format\n                $headers = $options['headers'] ?? []"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AbstractAgent",
            "full_name": "MemberpressAiAssistant\\Abstracts\\AbstractAgent",
            "namespace": "MemberpressAiAssistant\\Abstracts",
            "type": "class",
            "file": "Abstracts/AbstractAgent.php",
            "line": 15,
            "extends": null,
            "implements": [
                "AgentInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSpecializationScore",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "calculateIntentMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateEntityRelevanceScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateCapabilityMatchScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "calculateContextContinuityScore",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyScoreMultipliers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getCapabilities",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerCapabilities",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "addCapability",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "removeCapability",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "hasCapability",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCapabilityMetadata",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "updateContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "remember",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "recall",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "forget",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "rememberLongTerm",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadLongTermMemory",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "saveLongTermMemory",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "clearShortTermMemory",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getShortTermMemory",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getLongTermMemory",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "agentinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\AgentInterface"
                }
            ],
            "is_abstract": true,
            "is_final": false
        },
        {
            "name": "AbstractService",
            "full_name": "MemberpressAiAssistant\\Abstracts\\AbstractService",
            "namespace": "MemberpressAiAssistant\\Abstracts",
            "type": "class",
            "file": "Abstracts/AbstractService.php",
            "line": 15,
            "extends": null,
            "implements": [
                "ServiceInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getServiceName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDependencies",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "log",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setServiceLocator",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getServiceLocator",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "serviceinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ServiceInterface"
                }
            ],
            "is_abstract": true,
            "is_final": false
        },
        {
            "name": "AbstractTool",
            "full_name": "MemberpressAiAssistant\\Abstracts\\AbstractTool",
            "namespace": "MemberpressAiAssistant\\Abstracts",
            "type": "class",
            "file": "Abstracts/AbstractTool.php",
            "line": 18,
            "extends": null,
            "implements": [
                "ToolInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolDefinition",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "execute",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "executeInternal",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getParameterSchema",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateParametersWithSchema",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "generateValidationCacheKey",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setUseValidationCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "clearValidationCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "normalizeParameters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "logExecution",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "toolinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                },
                {
                    "name": "validationresult",
                    "type": "MemberpressAiAssistant\\Validation\\ValidationResult"
                },
                {
                    "name": "parametervalidator",
                    "type": "MemberpressAiAssistant\\Validation\\ParameterValidator"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "validation caching\n     *\n     * @var bool\n     */\n    protected $usevalidationcache = true",
                    "type": "validation caching\n     *\n     * @var bool\n     */\n    protected $useValidationCache = true"
                },
                {
                    "name": "cached validation result\n        if ($this->usevalidationcache) {\n            $cachekey = $this->generatevalidationcachekey($parameters)",
                    "type": "cached validation result\n        if ($this->useValidationCache) {\n            $cacheKey = $this->generateValidationCacheKey($parameters)"
                },
                {
                    "name": "validation caching\n     * @return self\n     */\n    public function setusevalidationcache(bool $usecache): self {\n        $this->usevalidationcache = $usecache",
                    "type": "validation caching\n     * @return self\n     */\n    public function setUseValidationCache(bool $useCache): self {\n        $this->useValidationCache = $useCache"
                }
            ],
            "is_abstract": true,
            "is_final": false
        },
        {
            "name": "BatchResult",
            "full_name": "MemberpressAiAssistant\\Batch\\BatchResult",
            "namespace": "MemberpressAiAssistant\\Batch",
            "type": "class",
            "file": "Batch/BatchResult.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "calculateCounts",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "addResult",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setStatus",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setMessage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getStatus",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMessage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getResults",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSuccessCount",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getFailureCount",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTotalCount",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isAllSuccess",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasSuccess",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasFailures",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "toArray",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "BatchProcessor",
            "full_name": "MemberpressAiAssistant\\Batch\\BatchProcessor",
            "namespace": "MemberpressAiAssistant\\Batch",
            "type": "class",
            "file": "Batch/BatchProcessor.php",
            "line": 16,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultBatchSizeConfig",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setBatchSize",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultBatchSize",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getBatchSize",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "processBatch",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "groupParametersByType",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "processOperationChunk",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "callServiceMethod",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batchGetMemberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batchListMemberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batchGetUserMemberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "batchGetUserPermissions",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getBatchResultMessage",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "log",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "memberpressservice",
                    "type": "MemberpressAiAssistant\\Services\\MemberPressService"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "CachedToolExample",
            "full_name": "MemberpressAiAssistant\\Examples\\CachedToolExample",
            "namespace": "MemberpressAiAssistant\\Examples",
            "type": "class",
            "file": "Examples/CachedToolExample.php",
            "line": 19,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "run",
                    "visibility": "public",
                    "is_static": true
                }
            ],
            "dependencies": [
                {
                    "name": "examples",
                    "type": "the CachedToolWrapper to cache tool execution results.\n *\n * @package MemberpressAiAssistant\n */\n\nnamespace MemberpressAiAssistant\\Examples"
                },
                {
                    "name": "cachedtoolwrapper",
                    "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                },
                {
                    "name": "toolregistry",
                    "type": "MemberpressAiAssistant\\Registry\\ToolRegistry"
                },
                {
                    "name": "container",
                    "type": "MemberpressAiAssistant\\DI\\Container"
                },
                {
                    "name": "the cachedtoolwrapper\n */\nclass cachedtoolexample {\n    /**\n     * run the example\n     *\n     * @return void\n     */\n    public static function run(): void {\n        // get the container\n        global $mpai_container",
                    "type": "the CachedToolWrapper\n */\nclass CachedToolExample {\n    /**\n     * Run the example\n     *\n     * @return void\n     */\n    public static function run(): void {\n        // Get the container\n        global $mpai_container"
                },
                {
                    "name": "($cachedtoolwrapper) {\n            return $cachedtoolwrapper",
                    "type": "($cachedToolWrapper) {\n            return $cachedToolWrapper"
                },
                {
                    "name": "the cached result\n            $cachedresult = $cachedtoolwrapper->execute($contenttool, $parameters)",
                    "type": "the cached result\n            $cachedResult = $cachedToolWrapper->execute($contentTool, $parameters)"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MessageProtocol",
            "full_name": "MemberpressAiAssistant\\Orchestration\\MessageProtocol",
            "namespace": "MemberpressAiAssistant\\Orchestration",
            "type": "class",
            "file": "Orchestration/MessageProtocol.php",
            "line": 19,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "generateId",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "createRequest",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "createResponse",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "createDelegation",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "createBroadcast",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "createError",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "validate",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "toArray",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "toJson",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "fromArray",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "fromJson",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "getId",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getType",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSender",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getRecipient",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTimestamp",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMetadata",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMetadataValue",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getReferences",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isResponseTo",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isBroadcast",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setMetadata",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addReference",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ContextManager",
            "full_name": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "namespace": "MemberpressAiAssistant\\Orchestration",
            "type": "class",
            "file": "Orchestration/ContextManager.php",
            "line": 20,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addMessageToHistory",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getConversationHistory",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "trackEntity",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getEntity",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getEntitiesByType",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getEntitiesByConversation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "extractContextFromMessage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "pruneExpiredContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "optimizeContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "persistContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "loadContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "clearAllContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "clearConversationContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "clearRequestContext",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContextStats",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AgentOrchestrator",
            "full_name": "MemberpressAiAssistant\\Orchestration\\AgentOrchestrator",
            "namespace": "MemberpressAiAssistant\\Orchestration",
            "type": "class",
            "file": "Orchestration/AgentOrchestrator.php",
            "line": 24,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setCacheService",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultCacheTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "processUserRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validateRequest",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "enrichRequestWithContext",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "selectAgentsForRequest",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "tryFastPathSelection",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "extractRequestPattern",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "cachePatternSelection",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyProgressiveScoring",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "checkForClearWinner",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyContextMultipliers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getContextMultipliers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "applyHistoryWeights",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getHistoryWeights",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "routeRequestToAgents",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleDelegation",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "aggregateResults",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "updateContextFromResponse",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "generateConversationId",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "generateRequestId",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "extractIntentAndEntities",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getConversationId",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContextManager",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setConversationId",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAgentSelectionHistory",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "clearConversation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createNewConversation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getStatistics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getPerformanceMetrics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "resetPerformanceMetrics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setConfidenceThreshold",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "generateCacheKey",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCachedResponse",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "cacheResponse",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "invalidateConversationCache",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "extractIntentAndEntitiesV2",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "agentfactory",
                    "type": "MemberpressAiAssistant\\Factory\\AgentFactory"
                },
                {
                    "name": "agentinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\AgentInterface"
                },
                {
                    "name": "agentregistry",
                    "type": "MemberpressAiAssistant\\Registry\\AgentRegistry"
                },
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "nlp/nlu services or libraries\n        // for now, we'll use a simple keyword-based approach\n        \n        $message = $request['message'] ?? ''",
                    "type": "NLP/NLU services or libraries\n        // For now, we'll use a simple keyword-based approach\n        \n        $message = $request['message'] ?? ''"
                },
                {
                    "name": "create_membership\n            if (stripos($message, 'membership') !== false) {\n                $intent = 'create_membership'",
                    "type": "create_membership\n            if (stripos($message, 'membership') !== false) {\n                $intent = 'create_membership'"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AgentRegistry",
            "full_name": "MemberpressAiAssistant\\Registry\\AgentRegistry",
            "namespace": "MemberpressAiAssistant\\Registry",
            "type": "class",
            "file": "Registry/AgentRegistry.php",
            "line": 15,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getInstance",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "__clone",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "__wakeup",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerAgent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "unregisterAgent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasAgent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAgent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAllAgents",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "discoverAgents",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerCoreAgents",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getCoreAgentClasses",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "discoverPluginAgents",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "scanDirectoryForAgents",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getClassNameFromFile",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "findBestAgentForRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "findAgentsByCapability",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "findAgentsBySpecialization",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "agentinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\AgentInterface"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ToolRegistry",
            "full_name": "MemberpressAiAssistant\\Registry\\ToolRegistry",
            "namespace": "MemberpressAiAssistant\\Registry",
            "type": "class",
            "file": "Registry/ToolRegistry.php",
            "line": 15,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getInstance",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "__clone",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "__wakeup",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerTool",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "unregisterTool",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasTool",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTool",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAllTools",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "discoverTools",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerCoreTools",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getCoreToolClasses",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "discoverPluginTools",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "scanDirectoryForTools",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "getClassNameFromFile",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "findToolsByCapability",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "findToolsByParameter",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "findBestToolForTask",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "toolinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                },
                {
                    "name": "w+/', strtolower($task))",
                    "type": "more sophisticated matching logic\n        // possibly involving AI to determine the best tool for a given task\n        \n        // For now, we'll just return the first tool that has a description containing keywords from the task\n        $taskWords = preg_split('/\\W+/', strtolower($task))"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AgentFactory",
            "full_name": "MemberpressAiAssistant\\Factory\\AgentFactory",
            "namespace": "MemberpressAiAssistant\\Factory",
            "type": "class",
            "file": "Factory/AgentFactory.php",
            "line": 17,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createAgent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createAgentByType",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createAndRegisterAgent",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAvailableAgentTypes",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validateAgentClass",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "agentinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\AgentInterface"
                },
                {
                    "name": "agentregistry",
                    "type": "MemberpressAiAssistant\\Registry\\AgentRegistry"
                },
                {
                    "name": "a wordpress filter to allow plugins to register agent types\n        $agenttypes = apply_filters('mpai_agent_types', [])",
                    "type": "a WordPress filter to allow plugins to register agent types\n        $agentTypes = apply_filters('mpai_agent_types', [])"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "OrchestratorService",
            "full_name": "MemberpressAiAssistant\\Services\\OrchestratorService",
            "namespace": "MemberpressAiAssistant\\Services",
            "type": "class",
            "file": "Services/OrchestratorService.php",
            "line": 20,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "clearCacheOnUpdate",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultCacheTTL",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "agentorchestrator",
                    "type": "MemberpressAiAssistant\\Orchestration\\AgentOrchestrator"
                },
                {
                    "name": "contextmanager",
                    "type": "MemberpressAiAssistant\\Orchestration\\ContextManager"
                },
                {
                    "name": "agentfactory",
                    "type": "MemberpressAiAssistant\\Factory\\AgentFactory"
                },
                {
                    "name": "agentregistry",
                    "type": "MemberpressAiAssistant\\Registry\\AgentRegistry"
                },
                {
                    "name": "in closures\n        $self = $this",
                    "type": "in closures\n        $self = $this"
                },
                {
                    "name": "($servicelocator, $self) {\n            // get required dependencies\n            $logger = $servicelocator->get('logger')",
                    "type": "($serviceLocator, $self) {\n            // Get required dependencies\n            $logger = $serviceLocator->get('logger')"
                },
                {
                    "name": "($servicelocator) {\n                $agentregistry = agentregistry::getinstance($servicelocator->get('logger'))",
                    "type": "($serviceLocator) {\n                $agentRegistry = AgentRegistry::getInstance($serviceLocator->get('logger'))"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ConfigurationService",
            "full_name": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "namespace": "MemberpressAiAssistant\\Services",
            "type": "class",
            "file": "Services/ConfigurationService.php",
            "line": 23,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadDefaultConfigurations",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadConfigurationsFromOptions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "saveConfigurationsToOptions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "loadDefaultTtlConfig",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadDefaultNonCacheableOperations",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadDefaultStrategies",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadDefaultOperationCharacteristics",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadDefaultWarmingConfig",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "loadDefaultWarmingOperations",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getDefaultTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTtlConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolTtlConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setToolTtlConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setTtlConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getOperationTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setOperationTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getNonCacheableOperations",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setNonCacheableOperations",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addNonCacheableOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "removeNonCacheableOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isOperationCacheable",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getStrategies",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setStrategies",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getStrategy",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setStrategy",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getStrategyTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setStrategyTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getOperationCharacteristics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setOperationCharacteristics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolOperationCharacteristics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setToolOperationCharacteristics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getWarmingConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setWarmingConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getWarmingConfigValue",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setWarmingConfigValue",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isWarmingEnabled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setWarmingEnabled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getWarmingOperations",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setWarmingOperations",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getWarmingOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addWarmingOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "removeWarmingOperation",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SettingsViewService",
            "full_name": "MemberpressAiAssistant\\Services\\Settings\\SettingsViewService",
            "namespace": "MemberpressAiAssistant\\Services\\Settings",
            "type": "class",
            "file": "Services/Settings/SettingsViewService.php",
            "line": 25,
            "extends": "AbstractService",
            "implements": [
                "ServiceInterface",
                "SettingsViewInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "render_page",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_tabs",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_form",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_fields",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_section",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_submit_button",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_error",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_general_section",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_section",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_access_section",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_enabled_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_log_level_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_location_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_position_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_user_roles_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "log_error",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "validateDependencies",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleMissingDependency",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "executeWithErrorHandling",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleError",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setDegradedMode",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isDegradedMode",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "serviceinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ServiceInterface"
                },
                {
                    "name": "settingsviewinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\SettingsViewInterface"
                },
                {
                    "name": "settingsmodelinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\SettingsModelInterface"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SettingsControllerService",
            "full_name": "MemberpressAiAssistant\\Services\\Settings\\SettingsControllerService",
            "namespace": "MemberpressAiAssistant\\Services\\Settings",
            "type": "class",
            "file": "Services/Settings/SettingsControllerService.php",
            "line": 24,
            "extends": "AbstractService",
            "implements": [
                "ServiceInterface",
                "SettingsControllerInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "init",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_page",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register_settings",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register_general_section",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "register_chat_section",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "register_access_section",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handle_form_submission",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "sanitize_settings",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_enabled_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_log_level_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_location_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_position_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_user_roles_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_tabs",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_page_slug",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "log_error",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "enqueue_scripts",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validateDependencies",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleMissingDependency",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "executeWithErrorHandling",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleError",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setDegradedMode",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isDegradedMode",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "serviceinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ServiceInterface"
                },
                {
                    "name": "settingscontrollerinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\SettingsControllerInterface"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SettingsModelService",
            "full_name": "MemberpressAiAssistant\\Services\\Settings\\SettingsModelService",
            "namespace": "MemberpressAiAssistant\\Services\\Settings",
            "type": "class",
            "file": "Services/Settings/SettingsModelService.php",
            "line": 23,
            "extends": "AbstractService",
            "implements": [
                "ServiceInterface",
                "SettingsModelInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "maybe_upgrade_settings",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "set",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "save",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_all",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "update",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "reset",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validate",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "load_settings",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "validate_boolean",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "validate_chat_location",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "validate_chat_position",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "validate_user_roles",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "validate_log_level",
                    "visibility": "private",
                    "is_static": false
                },
                {
                    "name": "is_chat_enabled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_chat_location",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_chat_position",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_user_roles",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "can_role_access_chat",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validateDependencies",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleMissingDependency",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "executeWithErrorHandling",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "handleError",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setDegradedMode",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isDegradedMode",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "get_log_level",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "serviceinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ServiceInterface"
                },
                {
                    "name": "settingsmodelinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\SettingsModelInterface"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "($valid_roles) {\n            return in_array($role, $valid_roles, true)",
                    "type": "($valid_roles) {\n            return in_array($role, $valid_roles, true)"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ChatInterfaceService",
            "full_name": "MemberpressAiAssistant\\Services\\ChatInterfaceService",
            "namespace": "MemberpressAiAssistant\\Services",
            "type": "class",
            "file": "Services/ChatInterfaceService.php",
            "line": 19,
            "extends": null,
            "implements": [
                "ServiceInterface"
            ],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getServiceName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDependencies",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "chatinterface",
                    "type": "MemberpressAiAssistant\\ChatInterface"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "serviceinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ServiceInterface"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "CacheService",
            "full_name": "MemberpressAiAssistant\\Services\\CacheService",
            "namespace": "MemberpressAiAssistant\\Services",
            "type": "class",
            "file": "Services/CacheService.php",
            "line": 19,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setStorage",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultTTL",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setPrefix",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDebug",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "generateKey",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "set",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "has",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "deletePattern",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "clearAllCaches",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "clearPostRelatedCaches",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMetrics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "resetMetrics",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "remember",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "* @return self\n     */\n    public function setprefix(string $prefix): self {\n        $this->prefix = sanitize_key($prefix)",
                    "type": "* @return self\n     */\n    public function setPrefix(string $prefix): self {\n        $this->prefix = sanitize_key($prefix)"
                },
                {
                    "name": "default\n     * @return bool whether the data was stored successfully\n     */\n    public function set(string $key, $data, ?int $ttl = null): bool {\n        // skip if in debug mode\n        if ($this->debug) {\n            $this->log('cache bypassed in debug mode', [\n                'key' => $key,\n                'operation' => 'set'\n            ])",
                    "type": "default\n     * @return bool Whether the data was stored successfully\n     */\n    public function set(string $key, $data, ?int $ttl = null): bool {\n        // Skip if in debug mode\n        if ($this->debug) {\n            $this->log('Cache bypassed in debug mode', [\n                'key' => $key,\n                'operation' => 'set'\n            ])"
                },
                {
                    "name": "default\n     * @return mixed the cached or generated data\n     */\n    public function remember(string $key, callable $callback, ?int $ttl = null) {\n        // check if the value is cached\n        if (!$this->debug && $this->has($key)) {\n            return $this->get($key)",
                    "type": "default\n     * @return mixed The cached or generated data\n     */\n    public function remember(string $key, callable $callback, ?int $ttl = null) {\n        // Check if the value is cached\n        if (!$this->debug && $this->has($key)) {\n            return $this->get($key)"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AdminServicesRegistrar",
            "full_name": "MemberpressAiAssistant\\Services\\AdminServicesRegistrar",
            "namespace": "MemberpressAiAssistant\\Services",
            "type": "class",
            "file": "Services/AdminServicesRegistrar.php",
            "line": 19,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "registerAdminServices",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "mpaiadminmenu",
                    "type": "MemberpressAiAssistant\\Admin\\MPAIAdminMenu"
                },
                {
                    "name": "in closures\n        $self = $this",
                    "type": "in closures\n        $self = $this"
                },
                {
                    "name": "($self) {\n            return $self",
                    "type": "($self) {\n            return $self"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "UserAdapter",
            "full_name": "MemberpressAiAssistant\\Services\\Adapters\\UserAdapter",
            "namespace": "MemberpressAiAssistant\\Services\\Adapters",
            "type": "class",
            "file": "Services/Adapters/UserAdapter.php",
            "line": 15,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAll",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "create",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "update",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasAccess",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSubscriptions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTransactions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasSubscription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasTransaction",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMemberships",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addToMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "removeFromMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setRole",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addRole",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "removeRole",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getRoles",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getCapabilities",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                },
                {
                    "name": "exception('email is already in use')",
                    "type": "if (email_exists($data['email']) && email_exists($data['email']) != $id) {\n                    throw new \\Exception('Email is already in use')"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ProductAdapter",
            "full_name": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "namespace": "MemberpressAiAssistant\\Services\\Adapters",
            "type": "class",
            "file": "Services/Adapters/ProductAdapter.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAll",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "create",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "update",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTerms",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAccessRules",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "the appropriate memberpress method\n            // to get rules associated with a product\n            $rules = []",
                    "type": "the appropriate MemberPress method\n            // to get rules associated with a product\n            $rules = []"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "RuleAdapter",
            "full_name": "MemberpressAiAssistant\\Services\\Adapters\\RuleAdapter",
            "namespace": "MemberpressAiAssistant\\Services\\Adapters",
            "type": "class",
            "file": "Services/Adapters/RuleAdapter.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAll",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "create",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "update",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProduct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContentType",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getContentIds",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getRuleType",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "appliesTo",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "TransactionAdapter",
            "full_name": "MemberpressAiAssistant\\Services\\Adapters\\TransactionAdapter",
            "namespace": "MemberpressAiAssistant\\Services\\Adapters",
            "type": "class",
            "file": "Services/Adapters/TransactionAdapter.php",
            "line": 15,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAll",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "create",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "update",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "complete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "refund",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSubscription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProduct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getUser",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SubscriptionAdapter",
            "full_name": "MemberpressAiAssistant\\Services\\Adapters\\SubscriptionAdapter",
            "namespace": "MemberpressAiAssistant\\Services\\Adapters",
            "type": "class",
            "file": "Services/Adapters/SubscriptionAdapter.php",
            "line": 15,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAll",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "create",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "update",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "delete",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "cancel",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "pause",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "resume",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTransactions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "isActive",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                },
                {
                    "name": "a subscription\n     *\n     * @param int $id the subscription id\n     * @return bool true on success, false on failure\n     */\n    public function pause(int $id): bool {\n        try {\n            // get the subscription\n            $subscription = $this->get($id)",
                    "type": "a subscription\n     *\n     * @param int $id The subscription ID\n     * @return bool True on success, false on failure\n     */\n    public function pause(int $id): bool {\n        try {\n            // Get the subscription\n            $subscription = $this->get($id)"
                },
                {
                    "name": "the subscription\n            // check if the method exists\n            if (method_exists($subscription, 'pause')) {\n                $result = $subscription->pause()",
                    "type": "the subscription\n            // Check if the method exists\n            if (method_exists($subscription, 'pause')) {\n                $result = $subscription->pause()"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "UserTransformer",
            "full_name": "MemberpressAiAssistant\\Services\\Transformers\\UserTransformer",
            "namespace": "MemberpressAiAssistant\\Services\\Transformers",
            "type": "class",
            "file": "Services/Transformers/UserTransformer.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "transform",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getFirstName",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getLastName",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getStatus",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getActiveMemberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getExpiredMemberships",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getSubscriptions",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getSubscriptionExpiresAt",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isSubscriptionActive",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTransactions",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getAddress",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCustomFields",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getLoginCount",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getLastLogin",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isActive",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "RuleTransformer",
            "full_name": "MemberpressAiAssistant\\Services\\Transformers\\RuleTransformer",
            "namespace": "MemberpressAiAssistant\\Services\\Transformers",
            "type": "class",
            "file": "Services/Transformers/RuleTransformer.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "transform",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getProductId",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getContentType",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getContentIds",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getRuleType",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isDripEnabled",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getDripAmount",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getDripUnit",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getDripAfter",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isExpiresEnabled",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getExpiresAmount",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getExpiresUnit",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getExpiresAfter",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getUnauthExcerptType",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getUnauthExcerptSize",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getUnauthMessage",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isUnauthLogin",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getProductName",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getContentItems",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getContentTitle",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getContentUrl",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "TransactionTransformer",
            "full_name": "MemberpressAiAssistant\\Services\\Transformers\\TransactionTransformer",
            "namespace": "MemberpressAiAssistant\\Services\\Transformers",
            "type": "class",
            "file": "Services/Transformers/TransactionTransformer.php",
            "line": 15,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "transform",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAmount",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTotal",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTaxAmount",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTaxRate",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "formatStatus",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isPrimary",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isExpired",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isComplete",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isRefunded",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isPending",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isFailed",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getProductName",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getUserName",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getUserEmail",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getPaymentMethod",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getSubscription",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCoupon",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCouponDiscount",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCouponDiscountType",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ProductTransformer",
            "full_name": "MemberpressAiAssistant\\Services\\Transformers\\ProductTransformer",
            "namespace": "MemberpressAiAssistant\\Services\\Transformers",
            "type": "class",
            "file": "Services/Transformers/ProductTransformer.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "transform",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getPrice",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTerms",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "formatPeriod",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isOneTimePayment",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isRecurring",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "hasTrial",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTrialDays",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTrialAmount",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getAccessUrl",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isThankYouPageEnabled",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getThankYouPageType",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getThankYouMessage",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getThankYouPageId",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getPricingDisplay",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getPricingDisplayText",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getWhoCanPurchase",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isHighlighted",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getRegisterPriceAction",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getRegisterPrice",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "allowsRenewal",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isTaxExempt",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTaxClass",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getExpiration",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SubscriptionTransformer",
            "full_name": "MemberpressAiAssistant\\Services\\Transformers\\SubscriptionTransformer",
            "namespace": "MemberpressAiAssistant\\Services\\Transformers",
            "type": "class",
            "file": "Services/Transformers/SubscriptionTransformer.php",
            "line": 15,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "transform",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getPrice",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "formatPeriod",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "formatStatus",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCcLast4",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCcExpMonth",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCcExpYear",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isActive",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isCancelled",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isSuspended",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isLifetime",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isExpired",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getExpiresAt",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getNextBillingAt",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTrialExpiresAt",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTransactions",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getProductName",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getUserName",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getUserEmail",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getPaymentMethod",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTotalPayments",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getCompletedPayments",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "loggingutility",
                    "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "CachedToolWrapper",
            "full_name": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "namespace": "MemberpressAiAssistant\\Services",
            "type": "class",
            "file": "Services/CachedToolWrapper.php",
            "line": 25,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultTtlConfig",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setDefaultNonCacheableOperations",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "setTtlConfig",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDefaultTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "addNonCacheableOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "removeNonCacheableOperation",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setNonCacheableOperations",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setDebug",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "execute",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolType",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isCacheable",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "generateCacheKey",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "getTtl",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "log",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "registerForWarming",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "invalidateToolCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "invalidateOperationCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "invalidateAllToolCaches",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "toolinterface",
                    "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                },
                {
                    "name": "advancedcachestrategy",
                    "type": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy"
                },
                {
                    "name": "cachewarmer",
                    "type": "MemberpressAiAssistant\\Cache\\CacheWarmer"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "MemberPressService",
            "full_name": "MemberpressAiAssistant\\Services\\MemberPressService",
            "namespace": "MemberpressAiAssistant\\Services",
            "type": "class",
            "file": "Services/MemberPressService.php",
            "line": 19,
            "extends": "AbstractService",
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setCacheService",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setCacheTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getCacheTtl",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "generateCacheKey",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "warmCache",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "registerAdapters",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "registerTransformers",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "addHooks",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "isMemberPressActive",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAdapter",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTransformer",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMemberships",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMembers",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getMember",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "checkAccess",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSubscriptions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getTransactions",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAccessRules",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "onSubscriptionCreated",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "onSubscriptionStatusChanged",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "onTransactionCompleted",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "updateMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "deleteMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "createAccessRule",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "updateAccessRule",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "deleteAccessRule",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "managePricing",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "associateUserWithMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "disassociateUserFromMembership",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "invalidateMembershipCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "invalidateMemberCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "invalidateSubscriptionCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "invalidateTransactionCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "invalidateRuleCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getUserMemberships",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "updateUserRole",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getUserPermissions",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "abstractservice",
                    "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                },
                {
                    "name": "servicelocator",
                    "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                },
                {
                    "name": "$this->servicelocator = $servicelocator",
                    "type": "$this->serviceLocator = $serviceLocator"
                },
                {
                    "name": "$this->adapters[$type] = $adapter",
                    "type": "$this->adapters[$type] = $adapter"
                },
                {
                    "name": "$this->transformers[$type] = $transformer",
                    "type": "$this->transformers[$type] = $transformer"
                },
                {
                    "name": "($transformer) {\n                    return $transformer->transform($product)",
                    "type": "($transformer) {\n                    return $transformer->transform($product)"
                },
                {
                    "name": "($transformer) {\n                    return $transformer->transform($user)",
                    "type": "($transformer) {\n                    return $transformer->transform($user)"
                },
                {
                    "name": "($transformer) {\n                    return $transformer->transform($subscription)",
                    "type": "($transformer) {\n                    return $transformer->transform($subscription)"
                },
                {
                    "name": "($transformer) {\n                    return $transformer->transform($transaction)",
                    "type": "($transformer) {\n                    return $transformer->transform($transaction)"
                },
                {
                    "name": "($transformer) {\n                    return $transformer->transform($rule)",
                    "type": "($transformer) {\n                    return $transformer->transform($rule)"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ValidationResult",
            "full_name": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "namespace": "MemberpressAiAssistant\\Validation",
            "type": "class",
            "file": "Validation/ValidationResult.php",
            "line": 18,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "success",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "failure",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "fromLegacyResult",
                    "visibility": "public",
                    "is_static": true
                },
                {
                    "name": "isValid",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "hasErrors",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getErrors",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getFirstError",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getErrorsAsString",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "toArray",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "toLegacyFormat",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "between error messages.\n     * @return string\n     */\n    public function geterrorsasstring(string $separator = ', '): string {\n        return implode($separator, $this->errors)",
                    "type": "between error messages.\n     * @return string\n     */\n    public function getErrorsAsString(string $separator = ', '): string {\n        return implode($separator, $this->errors)"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ParameterValidator",
            "full_name": "MemberpressAiAssistant\\Validation\\ParameterValidator",
            "namespace": "MemberpressAiAssistant\\Validation",
            "type": "class",
            "file": "Validation/ParameterValidator.php",
            "line": 28,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "__construct",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setCacheTtl",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "setUseCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validate",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "normalizeParameters",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "normalizeValue",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "normalizeBoolean",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "normalizeInteger",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "normalizeNumber",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "normalizeString",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "normalizeArray",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "normalizeObject",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateAgainstSchema",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateProperty",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateType",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateOneOf",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateAnyOf",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "validateAllOf",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "generateCacheKey",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "invalidateCache",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "pushPath",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "popPath",
                    "visibility": "protected",
                    "is_static": false
                },
                {
                    "name": "formatPath",
                    "visibility": "protected",
                    "is_static": false
                }
            ],
            "dependencies": [
                {
                    "name": "cacheservice",
                    "type": "MemberpressAiAssistant\\Services\\CacheService"
                },
                {
                    "name": "caching\n     *\n     * @var bool\n     */\n    protected $usecache = true",
                    "type": "caching\n     *\n     * @var bool\n     */\n    protected $useCache = true"
                },
                {
                    "name": "caching\n     * @return self\n     */\n    public function setusecache(bool $usecache): self {\n        $this->usecache = $usecache",
                    "type": "caching\n     * @return self\n     */\n    public function setUseCache(bool $useCache): self {\n        $this->useCache = $useCache"
                },
                {
                    "name": "cached validation result\n        if ($this->usecache && $this->cacheservice) {\n            $cachekey = $this->generatecachekey($parameters, $schema)",
                    "type": "cached validation result\n        if ($this->useCache && $this->cacheService) {\n            $cacheKey = $this->generateCacheKey($parameters, $schema)"
                },
                {
                    "name": "($parameters, $schema) {\n                // normalize parameters based on schema\n                $normalizedparameters = $this->normalizeparameters($parameters, $schema)",
                    "type": "($parameters, $schema) {\n                // Normalize parameters based on schema\n                $normalizedParameters = $this->normalizeParameters($parameters, $schema)"
                },
                {
                    "name": "it\n            if (isset($schema['default'])) {\n                return $schema['default']",
                    "type": "it\n            if (isset($schema['default'])) {\n                return $schema['default']"
                },
                {
                    "name": "it\n                    if (isset($itemschema['default'])) {\n                        $value[$key] = $itemschema['default']",
                    "type": "it\n                    if (isset($itemSchema['default'])) {\n                        $value[$key] = $itemSchema['default']"
                },
                {
                    "name": "pattern deletion as a reliable fallback\n        return $this->cacheservice->deletepattern('param_validation_') > 0",
                    "type": "pattern deletion as a reliable fallback\n        return $this->cacheService->deletePattern('param_validation_') > 0"
                }
            ],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SettingsModelInterface",
            "full_name": "MemberpressAiAssistant\\Interfaces\\SettingsModelInterface",
            "namespace": "MemberpressAiAssistant\\Interfaces",
            "type": "interface",
            "file": "Interfaces/SettingsModelInterface.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "get",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "set",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_all",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "update",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "save",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "reset",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "validate",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "is_chat_enabled",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_chat_location",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_chat_position",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_user_roles",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_log_level",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "can_role_access_chat",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SettingsControllerInterface",
            "full_name": "MemberpressAiAssistant\\Interfaces\\SettingsControllerInterface",
            "namespace": "MemberpressAiAssistant\\Interfaces",
            "type": "interface",
            "file": "Interfaces/SettingsControllerInterface.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "render_page",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "register_settings",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "handle_form_submission",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "sanitize_settings",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_tabs",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "get_page_slug",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_enabled_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_log_level_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_location_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_position_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_user_roles_field",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "SettingsViewInterface",
            "full_name": "MemberpressAiAssistant\\Interfaces\\SettingsViewInterface",
            "namespace": "MemberpressAiAssistant\\Interfaces",
            "type": "interface",
            "file": "Interfaces/SettingsViewInterface.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "render_page",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_tabs",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_form",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_error",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_general_section",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_section",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_access_section",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_enabled_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_log_level_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_location_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_chat_position_field",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "render_user_roles_field",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ToolInterface",
            "full_name": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "namespace": "MemberpressAiAssistant\\Interfaces",
            "type": "interface",
            "file": "Interfaces/ToolInterface.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "getToolName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getToolDefinition",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "execute",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "ServiceInterface",
            "full_name": "MemberpressAiAssistant\\Interfaces\\ServiceInterface",
            "namespace": "MemberpressAiAssistant\\Interfaces",
            "type": "interface",
            "file": "Interfaces/ServiceInterface.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "register",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "boot",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getServiceName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getDependencies",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        },
        {
            "name": "AgentInterface",
            "full_name": "MemberpressAiAssistant\\Interfaces\\AgentInterface",
            "namespace": "MemberpressAiAssistant\\Interfaces",
            "type": "interface",
            "file": "Interfaces/AgentInterface.php",
            "line": 13,
            "extends": null,
            "implements": [],
            "methods": [
                {
                    "name": "getAgentName",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getAgentDescription",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSpecializationScore",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "processRequest",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getSystemPrompt",
                    "visibility": "public",
                    "is_static": false
                },
                {
                    "name": "getCapabilities",
                    "visibility": "public",
                    "is_static": false
                }
            ],
            "dependencies": [],
            "is_abstract": false,
            "is_final": false
        }
    ],
    "dependencies": [
        {
            "class": "MemberpressAiAssistant\\Tools\\WordPressTool",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1858
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\WordPressTool",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2033
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1858
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1859
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1860
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1864
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1868
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1880
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1892
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1893
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1897
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1900
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1901
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1902
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1906
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1908
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1911
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1916
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 1917
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2033
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2039
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2040
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2045
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2048
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2051
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2056
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2062
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2063
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2066
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2069
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2072
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2080
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2082
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2087
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2088
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2091
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2096
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2101
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2103
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2105
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2109
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2111
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2116
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2118
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2121
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2124
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Tools/WordPressTool.php",
            "line": 2127
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\MemberPressTool",
            "usage_type": "static_method_call",
            "file": "src/Tools/MemberPressTool.php",
            "line": 494
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\MemberPressTool",
            "usage_type": "static_method_call",
            "file": "src/Tools/MemberPressTool.php",
            "line": 510
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\MemberPressTool",
            "usage_type": "static_method_call",
            "file": "src/Tools/MemberPressTool.php",
            "line": 553
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\MemberPressTool",
            "usage_type": "static_method_call",
            "file": "src/Tools/MemberPressTool.php",
            "line": 565
        },
        {
            "class": "MemberpressAiAssistant\\Batch\\BatchProcessor",
            "usage_type": "type_hint",
            "file": "src/Tools/MemberPressTool.php",
            "line": 37
        },
        {
            "class": "MemberpressAiAssistant\\Batch\\BatchProcessor",
            "usage_type": "type_hint",
            "file": "src/Tools/MemberPressTool.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Services\\MemberPressService",
            "usage_type": "type_hint",
            "file": "src/Tools/MemberPressTool.php",
            "line": 37
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/OpenAiClient.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "direct_instantiation",
            "file": "src/Llm/Providers/OpenAiClient.php",
            "line": 186
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "static_method_call",
            "file": "src/Llm/Providers/OpenAiClient.php",
            "line": 126
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "direct_instantiation",
            "file": "src/Llm/Providers/OpenAiClient.php",
            "line": 34
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/OpenAiClient.php",
            "line": 31
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "direct_instantiation",
            "file": "src/Llm/Providers/AbstractLlmClient.php",
            "line": 81
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/AbstractLlmClient.php",
            "line": 69
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/AbstractLlmClient.php",
            "line": 204
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/AbstractLlmClient.php",
            "line": 221
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/AbstractLlmClient.php",
            "line": 231
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/AbstractLlmClient.php",
            "line": 39
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/AnthropicClient.php",
            "line": 66
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "direct_instantiation",
            "file": "src/Llm/Providers/AnthropicClient.php",
            "line": 242
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "static_method_call",
            "file": "src/Llm/Providers/AnthropicClient.php",
            "line": 112
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "direct_instantiation",
            "file": "src/Llm/Providers/AnthropicClient.php",
            "line": 41
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "type_hint",
            "file": "src/Llm/Providers/AnthropicClient.php",
            "line": 38
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\WordPressTool",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 749
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\MemberPressTool",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 811
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Services\\LlmOrchestrator",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "direct_instantiation",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 190
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 250
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 85
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 94
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 102
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 130
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 137
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 140
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 142
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 143
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 155
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 156
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 166
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 168
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 180
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 200
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 205
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 229
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 230
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 254
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 263
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 301
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 308
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 316
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 490
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 507
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 524
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 531
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 544
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 545
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 562
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 584
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 591
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 651
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 661
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 667
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 673
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 723
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 733
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 759
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 767
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 792
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 798
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 800
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 812
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 852
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 337
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 338
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 352
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 353
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 367
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 368
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 382
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 383
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 396
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 397
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 411
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 412
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 426
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 427
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 442
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 443
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 457
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 458
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\MessageProtocol",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 631
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\MessageProtocol",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 639
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\ToolRegistry",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmChatAdapter.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Providers\\OpenAiClient",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmProviderFactory.php",
            "line": 41
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Providers\\AnthropicClient",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmProviderFactory.php",
            "line": 42
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmProviderFactory.php",
            "line": 53
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmProviderFactory.php",
            "line": 99
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 51
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 75
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 96
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 117
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 146
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 75
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 39
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmCacheAdapter.php",
            "line": 39
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Services\\LlmProviderFactory",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 65
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Services\\LlmCacheAdapter",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 65
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 91
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 182
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 202
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 235
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "static_method_call",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 160
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 202
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse",
            "usage_type": "type_hint",
            "file": "src/Llm/Services/LlmOrchestrator.php",
            "line": 235
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest",
            "usage_type": "type_hint",
            "file": "src/Llm/Interfaces/LlmClientInterface.php",
            "line": 24
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 27
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\CacheWarmer",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 75
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 39
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 31
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 57
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\WordPressTool",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 58
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\ContentTool",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 104
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\ContentTool",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 107
        },
        {
            "class": "MemberpressAiAssistant\\Tools\\MemberPressTool",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 81
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 27
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 47
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 136
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\ToolRegistry",
            "usage_type": "static_method_call",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 31
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\ToolRegistry",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/ToolRegistryProvider.php",
            "line": 47
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Services\\LlmChatAdapter",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 86
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Services\\LlmProviderFactory",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 39
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Services\\LlmCacheAdapter",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 46
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\Services\\LlmOrchestrator",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 53
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 104
        },
        {
            "class": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 114
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 30
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 99
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/LlmServiceProvider.php",
            "line": 151
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/CoreServiceProvider.php",
            "line": 24
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/CoreServiceProvider.php",
            "line": 34
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/IntegrationServiceProvider.php",
            "line": 24
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/IntegrationServiceProvider.php",
            "line": 52
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/IntegrationServiceProvider.php",
            "line": 63
        },
        {
            "class": "MemberpressAiAssistant\\Services\\MemberPressService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/IntegrationServiceProvider.php",
            "line": 28
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 30
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 61
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\AgentOrchestrator",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 85
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\AgentRegistry",
            "usage_type": "static_method_call",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 34
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\ToolRegistry",
            "usage_type": "static_method_call",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 45
        },
        {
            "class": "MemberpressAiAssistant\\Factory\\AgentFactory",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Services\\OrchestratorService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 67
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ChatInterfaceService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 99
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 26
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 73
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Settings\\SettingsViewService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 38
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Settings\\SettingsControllerService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 46
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Settings\\SettingsModelService",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 30
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/Providers/AdminServiceProvider.php",
            "line": 26
        },
        {
            "class": "MemberpressAiAssistant\\Admin\\MPAIAdminMenu",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/AdminServiceProvider.php",
            "line": 30
        },
        {
            "class": "MemberpressAiAssistant\\Admin\\MPAIAjaxHandler",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/AdminServiceProvider.php",
            "line": 40
        },
        {
            "class": "MemberpressAiAssistant\\Admin\\MPAIKeyManager",
            "usage_type": "direct_instantiation",
            "file": "src/DI/Providers/AdminServiceProvider.php",
            "line": 46
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/ServiceProvider.php",
            "line": 24
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/ServiceProvider.php",
            "line": 49
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/ServiceProvider.php",
            "line": 61
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/ServiceProvider.php",
            "line": 73
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/ServiceProvider.php",
            "line": 84
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/DI/ServiceProvider.php",
            "line": 95
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy",
            "usage_type": "type_hint",
            "file": "src/Cache/CacheWarmer.php",
            "line": 143
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Cache/CacheWarmer.php",
            "line": 143
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "type_hint",
            "file": "src/Cache/CacheWarmer.php",
            "line": 143
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Cache/AdvancedCacheStrategy.php",
            "line": 142
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 91
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 385
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 397
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 403
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 407
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 413
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 424
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 426
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 433
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 446
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 448
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 457
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 459
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 467
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 649
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 700
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 710
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 724
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 729
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 742
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 746
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 764
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 772
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 785
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 789
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 794
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 808
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 809
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 811
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 822
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 833
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 837
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 847
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 854
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 865
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 869
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 870
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 878
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 900
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 905
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 926
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 948
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 949
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 950
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 968
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 975
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 981
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 989
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1010
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1015
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1039
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1064
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1076
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1077
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1114
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1150
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1176
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1201
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1203
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1212
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1214
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1279
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1481
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1507
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1385
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1386
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1399
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1400
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1413
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1414
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1427
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1428
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1441
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1442
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1455
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1456
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1469
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\TableFormatter",
            "usage_type": "static_method_call",
            "file": "src/ChatInterface.php",
            "line": 1470
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperTest.php",
            "line": 67
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperTest.php",
            "line": 70
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperTest.php",
            "line": 49
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockTool",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 309
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockTool",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 344
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockTool",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 373
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockTool",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 407
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockCacheService",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 310
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockCacheService",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 345
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockCacheService",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 374
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockCacheService",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 408
        },
        {
            "class": "MemberpressAiAssistant\\Tests\\MockCacheService",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 431
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 311
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 347
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 375
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 409
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperManualTest.php",
            "line": 432
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\CacheWarmer",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 105
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\CacheWarmer",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 255
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\CacheWarmer",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 326
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 102
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 254
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 134
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 99
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 253
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 96
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 224
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 252
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 295
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 369
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 108
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 275
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 143
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 225
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 299
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 327
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 370
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "usage_type": "static_method_call",
            "file": "src/Tests/CachedToolWrapperIntegrationTest.php",
            "line": 78
        },
        {
            "class": "MemberpressAiAssistant\\ChatInterface",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIAdminMenu.php",
            "line": 256
        },
        {
            "class": "MemberpressAiAssistant\\ChatInterface",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIAdminMenu.php",
            "line": 287
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Settings\\SettingsControllerService",
            "usage_type": "type_hint",
            "file": "src/Admin/MPAIAdminMenu.php",
            "line": 57
        },
        {
            "class": "MemberpressAiAssistant\\ChatInterface",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIAjaxHandler.php",
            "line": 97
        },
        {
            "class": "MemberpressAiAssistant\\ChatInterface",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIAjaxHandler.php",
            "line": 181
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIKeyManager.php",
            "line": 509
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 93
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 94
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 95
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 98
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 99
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 100
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 107
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 112
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 117
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 123
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 128
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 173
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 180
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Admin/MPAIPostHandler.php",
            "line": 186
        },
        {
            "class": "MemberpressAiAssistant\\Services\\MemberPressService",
            "usage_type": "type_hint",
            "file": "src/Agents/MemberPressAgent.php",
            "line": 108
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Utilities/DebugLogger.php",
            "line": 27
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Abstracts/AbstractTool.php",
            "line": 77
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Abstracts/AbstractTool.php",
            "line": 189
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ParameterValidator",
            "usage_type": "type_hint",
            "file": "src/Abstracts/AbstractTool.php",
            "line": 77
        },
        {
            "class": "MemberpressAiAssistant\\Batch\\BatchResult",
            "usage_type": "direct_instantiation",
            "file": "src/Batch/BatchProcessor.php",
            "line": 145
        },
        {
            "class": "MemberpressAiAssistant\\Batch\\BatchResult",
            "usage_type": "direct_instantiation",
            "file": "src/Batch/BatchProcessor.php",
            "line": 154
        },
        {
            "class": "MemberpressAiAssistant\\Batch\\BatchResult",
            "usage_type": "direct_instantiation",
            "file": "src/Batch/BatchProcessor.php",
            "line": 206
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Batch/BatchProcessor.php",
            "line": 59
        },
        {
            "class": "MemberpressAiAssistant\\Services\\MemberPressService",
            "usage_type": "type_hint",
            "file": "src/Batch/BatchProcessor.php",
            "line": 59
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\ToolRegistry",
            "usage_type": "static_method_call",
            "file": "src/Examples/CachedToolExample.php",
            "line": 35
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CachedToolWrapper",
            "usage_type": "direct_instantiation",
            "file": "src/Examples/CachedToolExample.php",
            "line": 49
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 197
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 200
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 206
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 215
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 224
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 225
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 230
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 241
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 253
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 254
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 257
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 258
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 262
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 263
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 266
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 269
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 628
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 639
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 642
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 647
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 655
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 656
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 660
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 663
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 678
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 685
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 697
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 707
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 716
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 717
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 725
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 733
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 734
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 740
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 759
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 761
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 769
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 777
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 780
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 781
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 785
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 786
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 792
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 797
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 802
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 807
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 813
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 814
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 820
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 822
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 836
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 840
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 841
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 845
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 846
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 849
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 852
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 867
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 868
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 878
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 881
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 882
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 886
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 887
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 893
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 898
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 911
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 923
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 927
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 928
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 932
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 933
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 936
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 939
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 947
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 950
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 974
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 981
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 990
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/ContextManager.php",
            "line": 1006
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\MessageProtocol",
            "usage_type": "type_hint",
            "file": "src/Orchestration/ContextManager.php",
            "line": 196
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\MessageProtocol",
            "usage_type": "type_hint",
            "file": "src/Orchestration/ContextManager.php",
            "line": 401
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\MessageProtocol",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 884
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\MessageProtocol",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 1019
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 296
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "usage_type": "static_method_call",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 1009
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "usage_type": "type_hint",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 133
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\AgentRegistry",
            "usage_type": "type_hint",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 133
        },
        {
            "class": "MemberpressAiAssistant\\Factory\\AgentFactory",
            "usage_type": "type_hint",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 133
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 133
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Orchestration/AgentOrchestrator.php",
            "line": 153
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\AgentInterface",
            "usage_type": "static_method_call",
            "file": "src/Registry/AgentRegistry.php",
            "line": 287
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\AgentInterface",
            "usage_type": "type_hint",
            "file": "src/Registry/AgentRegistry.php",
            "line": 83
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "usage_type": "static_method_call",
            "file": "src/Registry/ToolRegistry.php",
            "line": 299
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "usage_type": "type_hint",
            "file": "src/Registry/ToolRegistry.php",
            "line": 83
        },
        {
            "class": "MemberpressAiAssistant\\DI\\ServiceLocator",
            "usage_type": "type_hint",
            "file": "src/Factory/AgentFactory.php",
            "line": 38
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\AgentRegistry",
            "usage_type": "static_method_call",
            "file": "src/Factory/AgentFactory.php",
            "line": 40
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\AgentRegistry",
            "usage_type": "type_hint",
            "file": "src/Factory/AgentFactory.php",
            "line": 38
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\AgentInterface",
            "usage_type": "static_method_call",
            "file": "src/Factory/AgentFactory.php",
            "line": 135
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "usage_type": "direct_instantiation",
            "file": "src/Services/OrchestratorService.php",
            "line": 50
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\ContextManager",
            "usage_type": "direct_instantiation",
            "file": "src/Services/OrchestratorService.php",
            "line": 89
        },
        {
            "class": "MemberpressAiAssistant\\Orchestration\\AgentOrchestrator",
            "usage_type": "direct_instantiation",
            "file": "src/Services/OrchestratorService.php",
            "line": 62
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\AgentRegistry",
            "usage_type": "static_method_call",
            "file": "src/Services/OrchestratorService.php",
            "line": 41
        },
        {
            "class": "MemberpressAiAssistant\\Registry\\AgentRegistry",
            "usage_type": "static_method_call",
            "file": "src/Services/OrchestratorService.php",
            "line": 81
        },
        {
            "class": "MemberpressAiAssistant\\Factory\\AgentFactory",
            "usage_type": "direct_instantiation",
            "file": "src/Services/OrchestratorService.php",
            "line": 49
        },
        {
            "class": "MemberpressAiAssistant\\Factory\\AgentFactory",
            "usage_type": "direct_instantiation",
            "file": "src/Services/OrchestratorService.php",
            "line": 82
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\SettingsModelInterface",
            "usage_type": "type_hint",
            "file": "src/Services/Settings/SettingsViewService.php",
            "line": 99
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\SettingsModelInterface",
            "usage_type": "type_hint",
            "file": "src/Services/Settings/SettingsViewService.php",
            "line": 168
        },
        {
            "class": "MemberpressAiAssistant\\ChatInterface",
            "usage_type": "static_method_call",
            "file": "src/Services/ChatInterfaceService.php",
            "line": 54
        },
        {
            "class": "MemberpressAiAssistant\\ChatInterface",
            "usage_type": "static_method_call",
            "file": "src/Services/ChatInterfaceService.php",
            "line": 70
        },
        {
            "class": "MemberpressAiAssistant\\Admin\\MPAIAdminMenu",
            "usage_type": "direct_instantiation",
            "file": "src/Services/AdminServicesRegistrar.php",
            "line": 77
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/UserAdapter.php",
            "line": 45
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/UserAdapter.php",
            "line": 50
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/UserAdapter.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/UserAdapter.php",
            "line": 111
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/UserAdapter.php",
            "line": 116
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/UserAdapter.php",
            "line": 178
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/UserAdapter.php",
            "line": 184
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/ProductAdapter.php",
            "line": 127
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/ProductAdapter.php",
            "line": 150
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/ProductAdapter.php",
            "line": 164
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/ProductAdapter.php",
            "line": 174
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/ProductAdapter.php",
            "line": 184
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/ProductAdapter.php",
            "line": 313
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/ProductAdapter.php",
            "line": 327
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 45
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 50
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 171
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 176
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 212
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 218
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 494
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 500
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 567
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/TransactionAdapter.php",
            "line": 573
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/SubscriptionAdapter.php",
            "line": 45
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/SubscriptionAdapter.php",
            "line": 50
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/SubscriptionAdapter.php",
            "line": 56
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/SubscriptionAdapter.php",
            "line": 150
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/SubscriptionAdapter.php",
            "line": 155
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/SubscriptionAdapter.php",
            "line": 191
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Adapters/SubscriptionAdapter.php",
            "line": 197
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/TransactionTransformer.php",
            "line": 292
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/TransactionTransformer.php",
            "line": 298
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/TransactionTransformer.php",
            "line": 313
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/TransactionTransformer.php",
            "line": 342
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/TransactionTransformer.php",
            "line": 348
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/TransactionTransformer.php",
            "line": 355
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/SubscriptionTransformer.php",
            "line": 415
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/SubscriptionTransformer.php",
            "line": 421
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/SubscriptionTransformer.php",
            "line": 436
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/SubscriptionTransformer.php",
            "line": 465
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/SubscriptionTransformer.php",
            "line": 471
        },
        {
            "class": "MemberpressAiAssistant\\Utilities\\LoggingUtility",
            "usage_type": "static_method_call",
            "file": "src/Services/Transformers/SubscriptionTransformer.php",
            "line": 478
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\CacheWarmer",
            "usage_type": "type_hint",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 84
        },
        {
            "class": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy",
            "usage_type": "type_hint",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 84
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 155
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 161
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 171
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 176
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 187
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 192
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 202
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 207
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 217
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "static_method_call",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 222
        },
        {
            "class": "MemberpressAiAssistant\\Services\\ConfigurationService",
            "usage_type": "type_hint",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 84
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 84
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "usage_type": "type_hint",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 251
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "usage_type": "type_hint",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 333
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\ToolInterface",
            "usage_type": "type_hint",
            "file": "src/Services/CachedToolWrapper.php",
            "line": 363
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Services/MemberPressService.php",
            "line": 130
        },
        {
            "class": "MemberpressAiAssistant\\Services\\Adapters\\ProductAdapter",
            "usage_type": "static_method_call",
            "file": "src/Services/MemberPressService.php",
            "line": 1110
        },
        {
            "class": "MemberpressAiAssistant\\Services\\MemberPressService",
            "usage_type": "static_method_call",
            "file": "src/Services/MemberPressService.php",
            "line": 1093
        },
        {
            "class": "MemberpressAiAssistant\\Services\\MemberPressService",
            "usage_type": "static_method_call",
            "file": "src/Services/MemberPressService.php",
            "line": 1110
        },
        {
            "class": "MemberpressAiAssistant\\Services\\MemberPressService",
            "usage_type": "static_method_call",
            "file": "src/Services/MemberPressService.php",
            "line": 1120
        },
        {
            "class": "MemberpressAiAssistant\\Services\\CacheService",
            "usage_type": "type_hint",
            "file": "src/Validation/ParameterValidator.php",
            "line": 62
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 387
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 405
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 423
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 423
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 595
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 599
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 602
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 618
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 624
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 644
        },
        {
            "class": "MemberpressAiAssistant\\Validation\\ValidationResult",
            "usage_type": "static_method_call",
            "file": "src/Validation/ParameterValidator.php",
            "line": 644
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\SettingsModelInterface",
            "usage_type": "type_hint",
            "file": "src/Interfaces/SettingsViewInterface.php",
            "line": 24
        },
        {
            "class": "MemberpressAiAssistant\\Interfaces\\SettingsModelInterface",
            "usage_type": "type_hint",
            "file": "src/Interfaces/SettingsViewInterface.php",
            "line": 43
        }
    ],
    "di_registrations": [
        {
            "service_name": "cache",
            "registration_type": "registerSingleton",
            "provider_class": "CacheServiceProvider",
            "provider_file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 29,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "advanced_cache_strategy",
            "registration_type": "registerSingleton",
            "provider_class": "CacheServiceProvider",
            "provider_file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 36,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "cache_warmer",
            "registration_type": "registerSingleton",
            "provider_class": "CacheServiceProvider",
            "provider_file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 44,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "cached_tool_wrapper",
            "registration_type": "registerSingleton",
            "provider_class": "CacheServiceProvider",
            "provider_file": "src/DI/Providers/CacheServiceProvider.php",
            "line": 50,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "logger",
            "registration_type": "registerSingleton",
            "provider_class": "CoreServiceProvider",
            "provider_file": "src/DI/Providers/CoreServiceProvider.php",
            "line": 26,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "configuration",
            "registration_type": "registerSingleton",
            "provider_class": "CoreServiceProvider",
            "provider_file": "src/DI/Providers/CoreServiceProvider.php",
            "line": 32,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "memberpress",
            "registration_type": "registerSingleton",
            "provider_class": "IntegrationServiceProvider",
            "provider_file": "src/DI/Providers/IntegrationServiceProvider.php",
            "line": 26,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "agent_registry",
            "registration_type": "registerSingleton",
            "provider_class": "OrchestrationServiceProvider",
            "provider_file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 32,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "tool_registry",
            "registration_type": "registerSingleton",
            "provider_class": "OrchestrationServiceProvider",
            "provider_file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 43,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "agent_factory",
            "registration_type": "registerSingleton",
            "provider_class": "OrchestrationServiceProvider",
            "provider_file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 54,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "context_manager",
            "registration_type": "registerSingleton",
            "provider_class": "OrchestrationServiceProvider",
            "provider_file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 60,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "orchestrator_service",
            "registration_type": "registerSingleton",
            "provider_class": "OrchestrationServiceProvider",
            "provider_file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 65,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "agent_orchestrator",
            "registration_type": "registerSingleton",
            "provider_class": "OrchestrationServiceProvider",
            "provider_file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 73,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "chat_interface_service",
            "registration_type": "registerSingleton",
            "provider_class": "OrchestrationServiceProvider",
            "provider_file": "src/DI/Providers/OrchestrationServiceProvider.php",
            "line": 97,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "settings.model",
            "registration_type": "registerSingleton",
            "provider_class": "SettingsServiceProvider",
            "provider_file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 28,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "settings.view",
            "registration_type": "registerSingleton",
            "provider_class": "SettingsServiceProvider",
            "provider_file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 36,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "settings.controller",
            "registration_type": "registerSingleton",
            "provider_class": "SettingsServiceProvider",
            "provider_file": "src/DI/Providers/SettingsServiceProvider.php",
            "line": 44,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "admin_menu",
            "registration_type": "registerSingleton",
            "provider_class": "AdminServiceProvider",
            "provider_file": "src/DI/Providers/AdminServiceProvider.php",
            "line": 28,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "ajax_handler",
            "registration_type": "registerSingleton",
            "provider_class": "AdminServiceProvider",
            "provider_file": "src/DI/Providers/AdminServiceProvider.php",
            "line": 38,
            "definition": "function(",
            "resolved_class": null
        },
        {
            "service_name": "key_manager",
            "registration_type": "registerSingleton",
            "provider_class": "AdminServiceProvider",
            "provider_file": "src/DI/Providers/AdminServiceProvider.php",
            "line": 44,
            "definition": "function(",
            "resolved_class": null
        }
    ],
    "unused_analysis": [
        {
            "class": {
                "name": "AbstractLlmClient",
                "full_name": "MemberpressAiAssistant\\Llm\\Providers\\AbstractLlmClient",
                "namespace": "MemberpressAiAssistant\\Llm\\Providers",
                "type": "class",
                "file": "Llm/Providers/AbstractLlmClient.php",
                "line": 18,
                "extends": null,
                "implements": [
                    "LlmClientInterface"
                ],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getProviderName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAvailableModels",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "sendMessage",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testConnection",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "buildHeaders",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "makeHttpRequest",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getModelForRequest",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTemperatureForRequest",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getMaxTokensForRequest",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "llmclientinterface",
                        "type": "MemberpressAiAssistant\\Llm\\Interfaces\\LlmClientInterface"
                    },
                    {
                        "name": "llmproviderconfig",
                        "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig"
                    },
                    {
                        "name": "llmrequest",
                        "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                    },
                    {
                        "name": "llmresponse",
                        "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                    },
                    {
                        "name": "for a request\n     *\n     * @param llmrequest $request the request\n     * @return string the model to use\n     */\n    protected function getmodelforrequest(llmrequest $request): string {\n        $model = $request->getoption('model', $this->config->getdefaultmodel())",
                        "type": "for a request\n     *\n     * @param LlmRequest $request The request\n     * @return string The model to use\n     */\n    protected function getModelForRequest(LlmRequest $request): string {\n        $model = $request->getOption('model', $this->config->getDefaultModel())"
                    },
                    {
                        "name": "the default model\n        if (!$this->config->ismodelavailable($model)) {\n            $model = $this->config->getdefaultmodel()",
                        "type": "the default model\n        if (!$this->config->isModelAvailable($model)) {\n            $model = $this->config->getDefaultModel()"
                    },
                    {
                        "name": "for a request\n     *\n     * @param llmrequest $request the request\n     * @return float the temperature to use\n     */\n    protected function gettemperatureforrequest(llmrequest $request): float {\n        return $request->getoption('temperature', $this->config->getdefaulttemperature())",
                        "type": "for a request\n     *\n     * @param LlmRequest $request The request\n     * @return float The temperature to use\n     */\n    protected function getTemperatureForRequest(LlmRequest $request): float {\n        return $request->getOption('temperature', $this->config->getDefaultTemperature())"
                    },
                    {
                        "name": "for a request\n     *\n     * @param llmrequest $request the request\n     * @return int|null the max tokens to use\n     */\n    protected function getmaxtokensforrequest(llmrequest $request): ?int {\n        return $request->getoption('max_tokens', $this->config->getdefaultmaxtokens())",
                        "type": "for a request\n     *\n     * @param LlmRequest $request The request\n     * @return int|null The max tokens to use\n     */\n    protected function getMaxTokensForRequest(LlmRequest $request): ?int {\n        return $request->getOption('max_tokens', $this->config->getDefaultMaxTokens())"
                    }
                ],
                "is_abstract": true,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 45,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "abstract_class_likely_extended"
                ]
            }
        },
        {
            "class": {
                "name": "LlmClientInterface",
                "full_name": "MemberpressAiAssistant\\Llm\\Interfaces\\LlmClientInterface",
                "namespace": "MemberpressAiAssistant\\Llm\\Interfaces",
                "type": "interface",
                "file": "Llm/Interfaces/LlmClientInterface.php",
                "line": 16,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "sendMessage",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testConnection",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getProviderName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAvailableModels",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "llmrequest",
                        "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmRequest"
                    },
                    {
                        "name": "llmresponse",
                        "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmResponse"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 35,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "interface_likely_used_for_contracts"
                ]
            }
        },
        {
            "class": {
                "name": "Container",
                "full_name": "MemberpressAiAssistant\\DI\\Container",
                "namespace": "MemberpressAiAssistant\\DI",
                "type": "class",
                "file": "DI/Container.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "bind",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "singleton",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "make",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "build",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "resolveDependencies",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "bound",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getBinding",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getBindings",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getInstances",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "the abstract type\n        if (is_null($concrete)) {\n            $concrete = $abstract",
                        "type": "the abstract type\n        if (is_null($concrete)) {\n            $concrete = $abstract"
                    },
                    {
                        "name": "it\n            if (array_key_exists($dependency->name, $parameters)) {\n                $results[] = $parameters[$dependency->name]",
                        "type": "it\n            if (array_key_exists($dependency->name, $parameters)) {\n                $results[] = $parameters[$dependency->name]"
                    },
                    {
                        "name": "it\n            if ($dependency->isdefaultvalueavailable()) {\n                $results[] = $dependency->getdefaultvalue()",
                        "type": "it\n            if ($dependency->isDefaultValueAvailable()) {\n                $results[] = $dependency->getDefaultValue()"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "CacheServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\CacheServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/CacheServiceProvider.php",
                "line": 20,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "cacheservice",
                        "type": "MemberpressAiAssistant\\Services\\CacheService"
                    },
                    {
                        "name": "cachedtoolwrapper",
                        "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                    },
                    {
                        "name": "advancedcachestrategy",
                        "type": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy"
                    },
                    {
                        "name": "cachewarmer",
                        "type": "MemberpressAiAssistant\\Cache\\CacheWarmer"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    },
                    {
                        "name": "($locator) {\n            $cacheservice = $locator->get('cache')",
                        "type": "($locator) {\n            $cacheService = $locator->get('cache')"
                    },
                    {
                        "name": "($locator) {\n            $cacheservice = $locator->get('cache')",
                        "type": "($locator) {\n            $cacheService = $locator->get('cache')"
                    },
                    {
                        "name": "($locator) {\n            $cacheservice = $locator->get('cache')",
                        "type": "($locator) {\n            $cacheService = $locator->get('cache')"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "ToolRegistryProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\ToolRegistryProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/ToolRegistryProvider.php",
                "line": 20,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerBuiltInTools",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "toolregistry",
                        "type": "MemberpressAiAssistant\\Registry\\ToolRegistry"
                    },
                    {
                        "name": "wordpresstool",
                        "type": "MemberpressAiAssistant\\Tools\\WordPressTool"
                    },
                    {
                        "name": "memberpresstool",
                        "type": "MemberpressAiAssistant\\Tools\\MemberPressTool"
                    },
                    {
                        "name": "contenttool",
                        "type": "MemberpressAiAssistant\\Tools\\ContentTool"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "LlmServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\LlmServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/LlmServiceProvider.php",
                "line": 23,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerProviderConfigurations",
                        "visibility": "private",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerSettings",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "anthropicclient",
                        "type": "MemberpressAiAssistant\\Llm\\Providers\\AnthropicClient"
                    },
                    {
                        "name": "openaiclient",
                        "type": "MemberpressAiAssistant\\Llm\\Providers\\OpenAiClient"
                    },
                    {
                        "name": "llmcacheadapter",
                        "type": "MemberpressAiAssistant\\Llm\\Services\\LlmCacheAdapter"
                    },
                    {
                        "name": "llmchatadapter",
                        "type": "MemberpressAiAssistant\\Llm\\Services\\LlmChatAdapter"
                    },
                    {
                        "name": "llmorchestrator",
                        "type": "MemberpressAiAssistant\\Llm\\Services\\LlmOrchestrator"
                    },
                    {
                        "name": "llmproviderfactory",
                        "type": "MemberpressAiAssistant\\Llm\\Services\\LlmProviderFactory"
                    },
                    {
                        "name": "llmproviderconfig",
                        "type": "MemberpressAiAssistant\\Llm\\ValueObjects\\LlmProviderConfig"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "CoreServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\CoreServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/CoreServiceProvider.php",
                "line": 17,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "configurationservice",
                        "type": "MemberpressAiAssistant\\Services\\ConfigurationService"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->get('logger')",
                        "type": "($locator) {\n            $logger = $locator->get('logger')"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "IntegrationServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\IntegrationServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/IntegrationServiceProvider.php",
                "line": 17,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerAdapters",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "registerTransformers",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "memberpressservice",
                        "type": "MemberpressAiAssistant\\Services\\MemberPressService"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "OrchestrationServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\OrchestrationServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/OrchestrationServiceProvider.php",
                "line": 23,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "orchestratorservice",
                        "type": "MemberpressAiAssistant\\Services\\OrchestratorService"
                    },
                    {
                        "name": "chatinterfaceservice",
                        "type": "MemberpressAiAssistant\\Services\\ChatInterfaceService"
                    },
                    {
                        "name": "agentorchestrator",
                        "type": "MemberpressAiAssistant\\Orchestration\\AgentOrchestrator"
                    },
                    {
                        "name": "contextmanager",
                        "type": "MemberpressAiAssistant\\Orchestration\\ContextManager"
                    },
                    {
                        "name": "agentfactory",
                        "type": "MemberpressAiAssistant\\Factory\\AgentFactory"
                    },
                    {
                        "name": "agentregistry",
                        "type": "MemberpressAiAssistant\\Registry\\AgentRegistry"
                    },
                    {
                        "name": "toolregistry",
                        "type": "MemberpressAiAssistant\\Registry\\ToolRegistry"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    },
                    {
                        "name": "($locator) {\n            $agentregistry = $locator->get('agent_registry')",
                        "type": "($locator) {\n            $agentRegistry = $locator->get('agent_registry')"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    },
                    {
                        "name": "($locator) {\n            $agentregistry = $locator->get('agent_registry')",
                        "type": "($locator) {\n            $agentRegistry = $locator->get('agent_registry')"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "SettingsServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\SettingsServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/SettingsServiceProvider.php",
                "line": 19,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "settingsmodelservice",
                        "type": "MemberpressAiAssistant\\Services\\Settings\\SettingsModelService"
                    },
                    {
                        "name": "settingsviewservice",
                        "type": "MemberpressAiAssistant\\Services\\Settings\\SettingsViewService"
                    },
                    {
                        "name": "settingscontrollerservice",
                        "type": "MemberpressAiAssistant\\Services\\Settings\\SettingsControllerService"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->get('logger')",
                        "type": "($locator) {\n            $logger = $locator->get('logger')"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->get('logger')",
                        "type": "($locator) {\n            $logger = $locator->get('logger')"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->get('logger')",
                        "type": "($locator) {\n            $logger = $locator->get('logger')"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "AdminServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\Providers\\AdminServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI\\Providers",
                "type": "class",
                "file": "DI/Providers/AdminServiceProvider.php",
                "line": 19,
                "extends": "ServiceProvider",
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "serviceprovider",
                        "type": "MemberpressAiAssistant\\DI\\ServiceProvider"
                    },
                    {
                        "name": "servicelocator",
                        "type": "MemberpressAiAssistant\\DI\\ServiceLocator"
                    },
                    {
                        "name": "mpaiadminmenu",
                        "type": "MemberpressAiAssistant\\Admin\\MPAIAdminMenu"
                    },
                    {
                        "name": "mpaiajaxhandler",
                        "type": "MemberpressAiAssistant\\Admin\\MPAIAjaxHandler"
                    },
                    {
                        "name": "mpaikeymanager",
                        "type": "MemberpressAiAssistant\\Admin\\MPAIKeyManager"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    },
                    {
                        "name": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null",
                        "type": "($locator) {\n            $logger = $locator->has('logger') ? $locator->get('logger') : null"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "ServiceProvider",
                "full_name": "MemberpressAiAssistant\\DI\\ServiceProvider",
                "namespace": "MemberpressAiAssistant\\DI",
                "type": "class",
                "file": "DI/ServiceProvider.php",
                "line": 14,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "provides",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerSingleton",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "registerTransient",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "hasService",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getService",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": true,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 35,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "abstract_class_likely_extended",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "CachedToolWrapperTest",
                "full_name": "MemberpressAiAssistant\\Tests\\CachedToolWrapperTest",
                "namespace": "MemberpressAiAssistant\\Tests",
                "type": "class",
                "file": "Tests/CachedToolWrapperTest.php",
                "line": 18,
                "extends": "TestCase",
                "implements": [],
                "methods": [
                    {
                        "name": "setUp",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "testExecuteWithCaching",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testExecuteWithCacheHit",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testExecuteNonCacheableOperation",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testTtlConfiguration",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testInvalidateToolCache",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testInvalidateOperationCache",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testInvalidateAllToolCaches",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "cachedtoolwrapper",
                        "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                    },
                    {
                        "name": "cacheservice",
                        "type": "MemberpressAiAssistant\\Services\\CacheService"
                    },
                    {
                        "name": "toolinterface",
                        "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                    },
                    {
                        "name": "testcase",
                        "type": "PHPUnit\\Framework\\TestCase"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 65,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention",
                    "test_class_may_be_unused"
                ]
            }
        },
        {
            "class": {
                "name": "CachedToolWrapperIntegrationTest",
                "full_name": "MemberpressAiAssistant\\Tests\\CachedToolWrapperIntegrationTest",
                "namespace": "MemberpressAiAssistant\\Tests",
                "type": "class",
                "file": "Tests/CachedToolWrapperIntegrationTest.php",
                "line": 26,
                "extends": "TestCase",
                "implements": [],
                "methods": [
                    {
                        "name": "setUp",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "testCachedToolWrapperUsesAdvancedCacheStrategy",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testCachedToolWrapperRegistersOperationsWithCacheWarmer",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testCachedToolWrapperUsesConfigurationService",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testEndToEndCachingFlow",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testCacheInvalidationWithCacheWarmer",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "testDebugModeBypasses",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "cachedtoolwrapper",
                        "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                    },
                    {
                        "name": "cacheservice",
                        "type": "MemberpressAiAssistant\\Services\\CacheService"
                    },
                    {
                        "name": "configurationservice",
                        "type": "MemberpressAiAssistant\\Services\\ConfigurationService"
                    },
                    {
                        "name": "advancedcachestrategy",
                        "type": "MemberpressAiAssistant\\Cache\\AdvancedCacheStrategy"
                    },
                    {
                        "name": "cachewarmer",
                        "type": "MemberpressAiAssistant\\Cache\\CacheWarmer"
                    },
                    {
                        "name": "toolinterface",
                        "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                    },
                    {
                        "name": "testcase",
                        "type": "PHPUnit\\Framework\\TestCase"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 65,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention",
                    "test_class_may_be_unused"
                ]
            }
        },
        {
            "class": {
                "name": "MPAIPostHandler",
                "full_name": "MemberpressAiAssistant\\Admin\\MPAIPostHandler",
                "namespace": "MemberpressAiAssistant\\Admin",
                "type": "class",
                "file": "Admin/MPAIPostHandler.php",
                "line": 17,
                "extends": null,
                "implements": [
                    "\\MemberpressAiAssistant\\Interfaces\\ServiceInterface"
                ],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getServiceName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getDependencies",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "handleCreatePost",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "handleCreatePostNoPriv",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "loggingutility",
                        "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 55,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "admin_class_likely_used"
                ]
            }
        },
        {
            "class": {
                "name": "SystemAgent",
                "full_name": "MemberpressAiAssistant\\Agents\\SystemAgent",
                "namespace": "MemberpressAiAssistant\\Agents",
                "type": "class",
                "file": "Agents/SystemAgent.php",
                "line": 15,
                "extends": "AbstractAgent",
                "implements": [],
                "methods": [
                    {
                        "name": "getAgentName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAgentDescription",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSystemPrompt",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerCapabilities",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "processRequest",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSystemInfo",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "runDiagnostics",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "updateSystemConfig",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getSystemConfig",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "listPlugins",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "activatePlugin",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "deactivatePlugin",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "updatePlugin",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getPluginInfo",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "monitorPerformance",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "optimizeSystem",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "clearCache",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGeneralIntent",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGreeting",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateIntentMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateEntityRelevanceScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateCapabilityMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateContextContinuityScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "applyScoreMultipliers",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "abstractagent",
                        "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "ValidationAgent",
                "full_name": "MemberpressAiAssistant\\Agents\\ValidationAgent",
                "namespace": "MemberpressAiAssistant\\Agents",
                "type": "class",
                "file": "Agents/ValidationAgent.php",
                "line": 15,
                "extends": "AbstractAgent",
                "implements": [],
                "methods": [
                    {
                        "name": "getAgentName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAgentDescription",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSystemPrompt",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerCapabilities",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "processRequest",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "validateInput",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "sanitizeInput",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "verifyPermission",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "checkAccess",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "enforcePolicy",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "validateForm",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "checkCsrfToken",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "validateRequest",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "scanForVulnerabilities",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "generateSecureToken",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateIntentMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateEntityRelevanceScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateCapabilityMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateContextContinuityScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "applyScoreMultipliers",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGeneralIntent",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGreeting",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "abstractagent",
                        "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "ContentAgent",
                "full_name": "MemberpressAiAssistant\\Agents\\ContentAgent",
                "namespace": "MemberpressAiAssistant\\Agents",
                "type": "class",
                "file": "Agents/ContentAgent.php",
                "line": 15,
                "extends": "AbstractAgent",
                "implements": [],
                "methods": [
                    {
                        "name": "getAgentName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAgentDescription",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSystemPrompt",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerCapabilities",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "processRequest",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "createPost",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "updatePost",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "deletePost",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getPost",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "listPosts",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "uploadMedia",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getMedia",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "deleteMedia",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "listMedia",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "organizeContent",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "formatContent",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateIntentMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateEntityRelevanceScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateCapabilityMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateContextContinuityScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "applyScoreMultipliers",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGeneralIntent",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGreeting",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "abstractagent",
                        "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "MemberPressAgent",
                "full_name": "MemberpressAiAssistant\\Agents\\MemberPressAgent",
                "namespace": "MemberpressAiAssistant\\Agents",
                "type": "class",
                "file": "Agents/MemberPressAgent.php",
                "line": 15,
                "extends": "AbstractAgent",
                "implements": [],
                "methods": [
                    {
                        "name": "getAgentName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAgentDescription",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSystemPrompt",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerCapabilities",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "setMemberPressService",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "processRequest",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "createMembership",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "updateMembership",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "deleteMembership",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getMembership",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "listMemberships",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "createAccessRule",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "updateAccessRule",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "deleteAccessRule",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "managePricing",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateIntentMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateEntityRelevanceScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateCapabilityMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateContextContinuityScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "applyScoreMultipliers",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGeneralIntent",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "handleGreeting",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "abstractagent",
                        "type": "MemberpressAiAssistant\\Abstracts\\AbstractAgent"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "AbstractAgent",
                "full_name": "MemberpressAiAssistant\\Abstracts\\AbstractAgent",
                "namespace": "MemberpressAiAssistant\\Abstracts",
                "type": "class",
                "file": "Abstracts/AbstractAgent.php",
                "line": 15,
                "extends": null,
                "implements": [
                    "AgentInterface"
                ],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSpecializationScore",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "calculateIntentMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateEntityRelevanceScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateCapabilityMatchScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "calculateContextContinuityScore",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "applyScoreMultipliers",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "processRequest",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getCapabilities",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerCapabilities",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "addCapability",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "removeCapability",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "hasCapability",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCapabilityMetadata",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "setContext",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getContext",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "updateContext",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "remember",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "recall",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "forget",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "rememberLongTerm",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "loadLongTermMemory",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "saveLongTermMemory",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "clearShortTermMemory",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getShortTermMemory",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getLongTermMemory",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "agentinterface",
                        "type": "MemberpressAiAssistant\\Interfaces\\AgentInterface"
                    }
                ],
                "is_abstract": true,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 35,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "abstract_class_likely_extended",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "AbstractService",
                "full_name": "MemberpressAiAssistant\\Abstracts\\AbstractService",
                "namespace": "MemberpressAiAssistant\\Abstracts",
                "type": "class",
                "file": "Abstracts/AbstractService.php",
                "line": 15,
                "extends": null,
                "implements": [
                    "ServiceInterface"
                ],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getServiceName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getDependencies",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "addHooks",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "log",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "setServiceLocator",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getServiceLocator",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "serviceinterface",
                        "type": "MemberpressAiAssistant\\Interfaces\\ServiceInterface"
                    }
                ],
                "is_abstract": true,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 35,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "abstract_class_likely_extended",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "AbstractTool",
                "full_name": "MemberpressAiAssistant\\Abstracts\\AbstractTool",
                "namespace": "MemberpressAiAssistant\\Abstracts",
                "type": "class",
                "file": "Abstracts/AbstractTool.php",
                "line": 18,
                "extends": null,
                "implements": [
                    "ToolInterface"
                ],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getToolName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getToolDescription",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getToolDefinition",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "execute",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "executeInternal",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getParameters",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getParameterSchema",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "validateParametersWithSchema",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "validateParameters",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "generateValidationCacheKey",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "setUseValidationCache",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "clearValidationCache",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "normalizeParameters",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "logExecution",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "toolinterface",
                        "type": "MemberpressAiAssistant\\Interfaces\\ToolInterface"
                    },
                    {
                        "name": "validationresult",
                        "type": "MemberpressAiAssistant\\Validation\\ValidationResult"
                    },
                    {
                        "name": "parametervalidator",
                        "type": "MemberpressAiAssistant\\Validation\\ParameterValidator"
                    },
                    {
                        "name": "cacheservice",
                        "type": "MemberpressAiAssistant\\Services\\CacheService"
                    },
                    {
                        "name": "validation caching\n     *\n     * @var bool\n     */\n    protected $usevalidationcache = true",
                        "type": "validation caching\n     *\n     * @var bool\n     */\n    protected $useValidationCache = true"
                    },
                    {
                        "name": "cached validation result\n        if ($this->usevalidationcache) {\n            $cachekey = $this->generatevalidationcachekey($parameters)",
                        "type": "cached validation result\n        if ($this->useValidationCache) {\n            $cacheKey = $this->generateValidationCacheKey($parameters)"
                    },
                    {
                        "name": "validation caching\n     * @return self\n     */\n    public function setusevalidationcache(bool $usecache): self {\n        $this->usevalidationcache = $usecache",
                        "type": "validation caching\n     * @return self\n     */\n    public function setUseValidationCache(bool $useCache): self {\n        $this->useValidationCache = $useCache"
                    }
                ],
                "is_abstract": true,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 35,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "abstract_class_likely_extended",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "CachedToolExample",
                "full_name": "MemberpressAiAssistant\\Examples\\CachedToolExample",
                "namespace": "MemberpressAiAssistant\\Examples",
                "type": "class",
                "file": "Examples/CachedToolExample.php",
                "line": 19,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "run",
                        "visibility": "public",
                        "is_static": true
                    }
                ],
                "dependencies": [
                    {
                        "name": "examples",
                        "type": "the CachedToolWrapper to cache tool execution results.\n *\n * @package MemberpressAiAssistant\n */\n\nnamespace MemberpressAiAssistant\\Examples"
                    },
                    {
                        "name": "cachedtoolwrapper",
                        "type": "MemberpressAiAssistant\\Services\\CachedToolWrapper"
                    },
                    {
                        "name": "toolregistry",
                        "type": "MemberpressAiAssistant\\Registry\\ToolRegistry"
                    },
                    {
                        "name": "container",
                        "type": "MemberpressAiAssistant\\DI\\Container"
                    },
                    {
                        "name": "the cachedtoolwrapper\n */\nclass cachedtoolexample {\n    /**\n     * run the example\n     *\n     * @return void\n     */\n    public static function run(): void {\n        // get the container\n        global $mpai_container",
                        "type": "the CachedToolWrapper\n */\nclass CachedToolExample {\n    /**\n     * Run the example\n     *\n     * @return void\n     */\n    public static function run(): void {\n        // Get the container\n        global $mpai_container"
                    },
                    {
                        "name": "($cachedtoolwrapper) {\n            return $cachedtoolwrapper",
                        "type": "($cachedToolWrapper) {\n            return $cachedToolWrapper"
                    },
                    {
                        "name": "the cached result\n            $cachedresult = $cachedtoolwrapper->execute($contenttool, $parameters)",
                        "type": "the cached result\n            $cachedResult = $cachedToolWrapper->execute($contentTool, $parameters)"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "AdminServicesRegistrar",
                "full_name": "MemberpressAiAssistant\\Services\\AdminServicesRegistrar",
                "namespace": "MemberpressAiAssistant\\Services",
                "type": "class",
                "file": "Services/AdminServicesRegistrar.php",
                "line": 19,
                "extends": "AbstractService",
                "implements": [],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "registerAdminServices",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "abstractservice",
                        "type": "MemberpressAiAssistant\\Abstracts\\AbstractService"
                    },
                    {
                        "name": "mpaiadminmenu",
                        "type": "MemberpressAiAssistant\\Admin\\MPAIAdminMenu"
                    },
                    {
                        "name": "in closures\n        $self = $this",
                        "type": "in closures\n        $self = $this"
                    },
                    {
                        "name": "($self) {\n            return $self",
                        "type": "($self) {\n            return $self"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 50,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "follows_plugin_naming_convention"
                ]
            }
        },
        {
            "class": {
                "name": "UserAdapter",
                "full_name": "MemberpressAiAssistant\\Services\\Adapters\\UserAdapter",
                "namespace": "MemberpressAiAssistant\\Services\\Adapters",
                "type": "class",
                "file": "Services/Adapters/UserAdapter.php",
                "line": 15,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "get",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAll",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "create",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "update",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "delete",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "hasAccess",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSubscriptions",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getTransactions",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "hasSubscription",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "hasTransaction",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getMemberships",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "addToMembership",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "removeFromMembership",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "setRole",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "addRole",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "removeRole",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getRoles",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getCapabilities",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "loggingutility",
                        "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                    },
                    {
                        "name": "exception('email is already in use')",
                        "type": "if (email_exists($data['email']) && email_exists($data['email']) != $id) {\n                    throw new \\Exception('Email is already in use')"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "RuleAdapter",
                "full_name": "MemberpressAiAssistant\\Services\\Adapters\\RuleAdapter",
                "namespace": "MemberpressAiAssistant\\Services\\Adapters",
                "type": "class",
                "file": "Services/Adapters/RuleAdapter.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "get",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAll",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "create",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "update",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "delete",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getProduct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getContentType",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getContentIds",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getRuleType",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "appliesTo",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "TransactionAdapter",
                "full_name": "MemberpressAiAssistant\\Services\\Adapters\\TransactionAdapter",
                "namespace": "MemberpressAiAssistant\\Services\\Adapters",
                "type": "class",
                "file": "Services/Adapters/TransactionAdapter.php",
                "line": 15,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "get",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAll",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "create",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "update",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "delete",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "complete",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "refund",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getSubscription",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getProduct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getUser",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "loggingutility",
                        "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "SubscriptionAdapter",
                "full_name": "MemberpressAiAssistant\\Services\\Adapters\\SubscriptionAdapter",
                "namespace": "MemberpressAiAssistant\\Services\\Adapters",
                "type": "class",
                "file": "Services/Adapters/SubscriptionAdapter.php",
                "line": 15,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "__construct",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "get",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAll",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "create",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "update",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "delete",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "cancel",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "pause",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "resume",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getTransactions",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "isActive",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "loggingutility",
                        "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                    },
                    {
                        "name": "a subscription\n     *\n     * @param int $id the subscription id\n     * @return bool true on success, false on failure\n     */\n    public function pause(int $id): bool {\n        try {\n            // get the subscription\n            $subscription = $this->get($id)",
                        "type": "a subscription\n     *\n     * @param int $id The subscription ID\n     * @return bool True on success, false on failure\n     */\n    public function pause(int $id): bool {\n        try {\n            // Get the subscription\n            $subscription = $this->get($id)"
                    },
                    {
                        "name": "the subscription\n            // check if the method exists\n            if (method_exists($subscription, 'pause')) {\n                $result = $subscription->pause()",
                        "type": "the subscription\n            // Check if the method exists\n            if (method_exists($subscription, 'pause')) {\n                $result = $subscription->pause()"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "UserTransformer",
                "full_name": "MemberpressAiAssistant\\Services\\Transformers\\UserTransformer",
                "namespace": "MemberpressAiAssistant\\Services\\Transformers",
                "type": "class",
                "file": "Services/Transformers/UserTransformer.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "transform",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getFirstName",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getLastName",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getStatus",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getActiveMemberships",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getExpiredMemberships",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getSubscriptions",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getSubscriptionExpiresAt",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isSubscriptionActive",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTransactions",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getAddress",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCustomFields",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getLoginCount",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getLastLogin",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isActive",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "RuleTransformer",
                "full_name": "MemberpressAiAssistant\\Services\\Transformers\\RuleTransformer",
                "namespace": "MemberpressAiAssistant\\Services\\Transformers",
                "type": "class",
                "file": "Services/Transformers/RuleTransformer.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "transform",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getProductId",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getContentType",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getContentIds",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getRuleType",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isDripEnabled",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getDripAmount",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getDripUnit",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getDripAfter",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isExpiresEnabled",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getExpiresAmount",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getExpiresUnit",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getExpiresAfter",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getUnauthExcerptType",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getUnauthExcerptSize",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getUnauthMessage",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isUnauthLogin",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getProductName",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getContentItems",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getContentTitle",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getContentUrl",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "TransactionTransformer",
                "full_name": "MemberpressAiAssistant\\Services\\Transformers\\TransactionTransformer",
                "namespace": "MemberpressAiAssistant\\Services\\Transformers",
                "type": "class",
                "file": "Services/Transformers/TransactionTransformer.php",
                "line": 15,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "transform",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getAmount",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTotal",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTaxAmount",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTaxRate",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "formatStatus",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isPrimary",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isExpired",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isComplete",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isRefunded",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isPending",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isFailed",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getProductName",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getUserName",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getUserEmail",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getPaymentMethod",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getSubscription",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCoupon",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCouponDiscount",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCouponDiscountType",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "loggingutility",
                        "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "ProductTransformer",
                "full_name": "MemberpressAiAssistant\\Services\\Transformers\\ProductTransformer",
                "namespace": "MemberpressAiAssistant\\Services\\Transformers",
                "type": "class",
                "file": "Services/Transformers/ProductTransformer.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "transform",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getPrice",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTerms",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "formatPeriod",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isOneTimePayment",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isRecurring",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "hasTrial",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTrialDays",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTrialAmount",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getAccessUrl",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isThankYouPageEnabled",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getThankYouPageType",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getThankYouMessage",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getThankYouPageId",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getPricingDisplay",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getPricingDisplayText",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getWhoCanPurchase",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isHighlighted",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getRegisterPriceAction",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getRegisterPrice",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "allowsRenewal",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isTaxExempt",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTaxClass",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getExpiration",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "SubscriptionTransformer",
                "full_name": "MemberpressAiAssistant\\Services\\Transformers\\SubscriptionTransformer",
                "namespace": "MemberpressAiAssistant\\Services\\Transformers",
                "type": "class",
                "file": "Services/Transformers/SubscriptionTransformer.php",
                "line": 15,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "transform",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getPrice",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "formatPeriod",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "formatStatus",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCcLast4",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCcExpMonth",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCcExpYear",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isActive",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isCancelled",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isSuspended",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isLifetime",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "isExpired",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getExpiresAt",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getNextBillingAt",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTrialExpiresAt",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTransactions",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getProductName",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getUserName",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getUserEmail",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getPaymentMethod",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getTotalPayments",
                        "visibility": "protected",
                        "is_static": false
                    },
                    {
                        "name": "getCompletedPayments",
                        "visibility": "protected",
                        "is_static": false
                    }
                ],
                "dependencies": [
                    {
                        "name": "loggingutility",
                        "type": "MemberpressAiAssistant\\Utilities\\LoggingUtility"
                    }
                ],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "high",
                "score": 60,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container"
                ]
            }
        },
        {
            "class": {
                "name": "SettingsControllerInterface",
                "full_name": "MemberpressAiAssistant\\Interfaces\\SettingsControllerInterface",
                "namespace": "MemberpressAiAssistant\\Interfaces",
                "type": "interface",
                "file": "Interfaces/SettingsControllerInterface.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "render_page",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "register_settings",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "handle_form_submission",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "sanitize_settings",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "get_tabs",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "get_page_slug",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_chat_enabled_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_log_level_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_chat_location_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_chat_position_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_user_roles_field",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 35,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "interface_likely_used_for_contracts"
                ]
            }
        },
        {
            "class": {
                "name": "SettingsViewInterface",
                "full_name": "MemberpressAiAssistant\\Interfaces\\SettingsViewInterface",
                "namespace": "MemberpressAiAssistant\\Interfaces",
                "type": "interface",
                "file": "Interfaces/SettingsViewInterface.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "render_page",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_tabs",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_form",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_error",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_general_section",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_chat_section",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_access_section",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_chat_enabled_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_log_level_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_chat_location_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_chat_position_field",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "render_user_roles_field",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 35,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "interface_likely_used_for_contracts"
                ]
            }
        },
        {
            "class": {
                "name": "ServiceInterface",
                "full_name": "MemberpressAiAssistant\\Interfaces\\ServiceInterface",
                "namespace": "MemberpressAiAssistant\\Interfaces",
                "type": "interface",
                "file": "Interfaces/ServiceInterface.php",
                "line": 13,
                "extends": null,
                "implements": [],
                "methods": [
                    {
                        "name": "register",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "boot",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getServiceName",
                        "visibility": "public",
                        "is_static": false
                    },
                    {
                        "name": "getDependencies",
                        "visibility": "public",
                        "is_static": false
                    }
                ],
                "dependencies": [],
                "is_abstract": false,
                "is_final": false
            },
            "is_registered": false,
            "registration_info": null,
            "usage_patterns": [],
            "is_used": false,
            "risk_assessment": {
                "level": "medium",
                "score": 25,
                "reasons": [
                    "no_direct_usage_found",
                    "not_registered_in_di_container",
                    "interface_likely_used_for_contracts",
                    "follows_plugin_naming_convention"
                ]
            }
        }
    ]
}

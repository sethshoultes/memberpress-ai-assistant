{
    "analysis_info": {
        "script": "Cross-Reference Validator",
        "version": "1.0.0",
        "timestamp": "2025-06-17 20:25:55",
        "plugin_dir": "/Users/sethshoultes/Local Sites/memberpress-testing/app/public/wp-content/plugins/memberpress-ai-assistant"
    },
    "validation_summary": {
        "assets": {
            "total": 0,
            "used": 0,
            "unused": 0,
            "usage_sources": []
        },
        "classes": {
            "total": 0,
            "used": 0,
            "unused": 0,
            "usage_sources": []
        },
        "templates": {
            "total": 5,
            "used": 4,
            "unused": 1,
            "usage_sources": [
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "templates/settings-page.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 153
                },
                {
                    "type": "string_reference",
                    "file": "templates/settings-page.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 153
                },
                {
                    "type": "dynamic_pattern",
                    "file": "memberpress-ai-assistant.php",
                    "pattern": "plugin_dir_path\\s*\\(\\s*__FILE__\\s*\\)\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                    "line": 650
                },
                {
                    "type": "string_reference",
                    "file": "memberpress-ai-assistant.php",
                    "reference": "'templates/welcome-page.php'",
                    "line": 650
                },
                {
                    "type": "string_reference",
                    "file": "memberpress-ai-assistant.php",
                    "reference": "'templates/welcome-page.php'",
                    "line": 650
                },
                {
                    "type": "string_reference",
                    "file": "templates/dashboard-tab.php",
                    "reference": "\"mpai-dashboard-tab\"",
                    "line": 38
                }
            ]
        }
    },
    "assets": [],
    "classes": [],
    "templates": {
        "templates/settings-page.php": {
            "path": "/Users/sethshoultes/Local Sites/memberpress-testing/app/public/wp-content/plugins/memberpress-ai-assistant/templates/settings-page.php",
            "relative_path": "templates/settings-page.php",
            "name": "settings-page",
            "size": 6132,
            "modified": 1750130634,
            "extension": "php",
            "used": false,
            "usage_patterns": [],
            "included_by": [],
            "risk_factors": [
                "No usage patterns found",
                "No direct include statements found"
            ],
            "risk_score": 80,
            "risk_level": "high",
            "usage_sources": [],
            "is_used": false
        },
        "templates/chat-interface-ajax.php": {
            "path": "/Users/sethshoultes/Local Sites/memberpress-testing/app/public/wp-content/plugins/memberpress-ai-assistant/templates/chat-interface-ajax.php",
            "relative_path": "templates/chat-interface-ajax.php",
            "name": "chat-interface-ajax",
            "size": 13220,
            "modified": 1750130634,
            "extension": "php",
            "used": false,
            "usage_patterns": [
                {
                    "type": "name_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "template_name": "chat-interface-ajax"
                },
                {
                    "type": "name_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "template_name": "chat-interface-ajax"
                }
            ],
            "included_by": [],
            "risk_factors": [
                "No usage patterns found",
                "No direct include statements found",
                "Only found as name references"
            ],
            "risk_score": 100,
            "risk_level": "high",
            "usage_sources": [
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                }
            ],
            "is_used": true
        },
        "templates/chat-interface.php": {
            "path": "/Users/sethshoultes/Local Sites/memberpress-testing/app/public/wp-content/plugins/memberpress-ai-assistant/templates/chat-interface.php",
            "relative_path": "templates/chat-interface.php",
            "name": "chat-interface",
            "size": 9224,
            "modified": 1750164732,
            "extension": "php",
            "used": false,
            "usage_patterns": [
                {
                    "type": "name_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "template_name": "chat-interface"
                },
                {
                    "type": "name_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "template_name": "chat-interface"
                }
            ],
            "included_by": [],
            "risk_factors": [
                "No usage patterns found",
                "No direct include statements found",
                "Only found as name references"
            ],
            "risk_score": 100,
            "risk_level": "high",
            "usage_sources": [
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface-ajax.php'",
                    "line": 103
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "src/Admin/MPAIAjaxHandler.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 107
                },
                {
                    "type": "string_reference",
                    "file": "templates/settings-page.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 153
                },
                {
                    "type": "string_reference",
                    "file": "templates/settings-page.php",
                    "reference": "'templates/chat-interface.php'",
                    "line": 153
                }
            ],
            "is_used": true
        },
        "templates/welcome-page.php": {
            "path": "/Users/sethshoultes/Local Sites/memberpress-testing/app/public/wp-content/plugins/memberpress-ai-assistant/templates/welcome-page.php",
            "relative_path": "templates/welcome-page.php",
            "name": "welcome-page",
            "size": 2151,
            "modified": 1750130634,
            "extension": "php",
            "used": false,
            "usage_patterns": [
                {
                    "type": "name_reference",
                    "file": "memberpress-ai-assistant.php",
                    "template_name": "welcome-page"
                }
            ],
            "included_by": [],
            "risk_factors": [
                "No usage patterns found",
                "No direct include statements found",
                "Only found as name references"
            ],
            "risk_score": 100,
            "risk_level": "high",
            "usage_sources": [
                {
                    "type": "dynamic_pattern",
                    "file": "memberpress-ai-assistant.php",
                    "pattern": "plugin_dir_path\\s*\\(\\s*__FILE__\\s*\\)\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                    "line": 650
                },
                {
                    "type": "string_reference",
                    "file": "memberpress-ai-assistant.php",
                    "reference": "'templates/welcome-page.php'",
                    "line": 650
                },
                {
                    "type": "string_reference",
                    "file": "memberpress-ai-assistant.php",
                    "reference": "'templates/welcome-page.php'",
                    "line": 650
                }
            ],
            "is_used": true
        },
        "templates/dashboard-tab.php": {
            "path": "/Users/sethshoultes/Local Sites/memberpress-testing/app/public/wp-content/plugins/memberpress-ai-assistant/templates/dashboard-tab.php",
            "relative_path": "templates/dashboard-tab.php",
            "name": "dashboard-tab",
            "size": 9241,
            "modified": 1750130634,
            "extension": "php",
            "used": false,
            "usage_patterns": [],
            "included_by": [],
            "risk_factors": [
                "No usage patterns found",
                "No direct include statements found"
            ],
            "risk_score": 80,
            "risk_level": "high",
            "usage_sources": [
                {
                    "type": "string_reference",
                    "file": "templates/dashboard-tab.php",
                    "reference": "\"mpai-dashboard-tab\"",
                    "line": 38
                }
            ],
            "is_used": true
        }
    },
    "wordpress_hooks": {
        "src/DI/Providers/LlmServiceProvider.php": [
            {
                "hook": "admin_init",
                "callback": "[$this",
                "line": 153,
                "type": "hook_registration"
            },
            {
                "hook": "admin_init",
                "callback": "[$this",
                "line": 153,
                "type": "hook_registration"
            }
        ],
        "src/Cache/CacheWarmer.php": [
            {
                "hook": "init",
                "callback": "[$this",
                "line": 191,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "callback": "[$this",
                "line": 191,
                "type": "hook_registration"
            }
        ],
        "src/ChatInterface.php": [
            {
                "hook": "wp_enqueue_scripts",
                "callback": "[$this",
                "line": 44,
                "type": "hook_registration"
            },
            {
                "hook": "admin_enqueue_scripts",
                "callback": "[$this",
                "line": 45,
                "type": "hook_registration"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 204,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 205,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 206,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 214,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 339,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 340,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 341,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 158,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 200,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 207,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 208,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 209,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 210,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 211,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 293,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 335,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 342,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 343,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 344,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 345,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 346,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 107,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 116,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 124,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 242,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 251,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 259,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 133,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 141,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 149,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 161,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 170,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 192,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 268,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 276,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 284,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 296,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 305,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 327,
                "type": "hook_usage"
            },
            {
                "hook": "admin_footer",
                "callback": "[$this",
                "line": 47,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 609,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 617,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_scripts",
                "callback": "[$this",
                "line": 44,
                "type": "hook_registration"
            },
            {
                "hook": "admin_enqueue_scripts",
                "callback": "[$this",
                "line": 45,
                "type": "hook_registration"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 204,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 205,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 206,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 214,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 339,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 340,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 341,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 158,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 200,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 207,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 208,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 209,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 210,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 211,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 293,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 335,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 342,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 343,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 344,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 345,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 346,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 107,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 116,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 124,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 242,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 251,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_style",
                "usage": "direct_call",
                "line": 259,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 133,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 141,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 149,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 161,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 170,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 192,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 268,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 276,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 284,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 296,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 305,
                "type": "hook_usage"
            },
            {
                "hook": "wp_register_script",
                "usage": "direct_call",
                "line": 327,
                "type": "hook_usage"
            },
            {
                "hook": "admin_footer",
                "callback": "[$this",
                "line": 47,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 609,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 617,
                "type": "hook_usage"
            }
        ],
        "src/Admin/MPAIAdminMenu.php": [
            {
                "hook": "admin_menu",
                "callback": "[$this",
                "line": 103,
                "type": "hook_registration"
            },
            {
                "hook": "admin_menu",
                "usage": "direct_call",
                "line": 115,
                "type": "hook_usage"
            },
            {
                "hook": "admin_menu",
                "callback": "[$this",
                "line": 103,
                "type": "hook_registration"
            },
            {
                "hook": "admin_menu",
                "usage": "direct_call",
                "line": 115,
                "type": "hook_usage"
            }
        ],
        "src/Utilities/LoggingUtility.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 94,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 94,
                "type": "hook_usage"
            }
        ],
        "src/Services/ConfigurationService.php": [
            {
                "hook": "init",
                "callback": "[$this",
                "line": 121,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "callback": "[$this",
                "line": 121,
                "type": "hook_registration"
            }
        ],
        "src/Services/Settings/SettingsControllerService.php": [
            {
                "hook": "admin_enqueue_scripts",
                "callback": "[$this",
                "line": 137,
                "type": "hook_registration"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 423,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 431,
                "type": "hook_usage"
            },
            {
                "hook": "admin_init",
                "callback": "[$this",
                "line": 131,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 121,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 129,
                "type": "hook_usage"
            },
            {
                "hook": "admin_enqueue_scripts",
                "callback": "[$this",
                "line": 137,
                "type": "hook_registration"
            },
            {
                "hook": "wp_enqueue_style",
                "usage": "direct_call",
                "line": 423,
                "type": "hook_usage"
            },
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 431,
                "type": "hook_usage"
            },
            {
                "hook": "admin_init",
                "callback": "[$this",
                "line": 131,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 121,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 129,
                "type": "hook_usage"
            }
        ],
        "src/Services/Settings/SettingsModelService.php": [
            {
                "hook": "admin_init",
                "callback": "[$this",
                "line": 120,
                "type": "hook_registration"
            },
            {
                "hook": "admin_init",
                "callback": "[$this",
                "line": 120,
                "type": "hook_registration"
            }
        ],
        "src/Services/AdminServicesRegistrar.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 74,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 74,
                "type": "hook_usage"
            }
        ],
        "templates/settings-page.php": [
            {
                "hook": "wp_enqueue_script",
                "usage": "direct_call",
                "line": 133,
                "type": "hook_usage"
            }
        ],
        "templates/chat-interface-ajax.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 171,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 179,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 210,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 247,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 255,
                "type": "hook_usage"
            }
        ],
        "templates/chat-interface.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 149,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 157,
                "type": "hook_usage"
            }
        ],
        "memberpress-ai-assistant.php": [
            {
                "hook": "admin_init",
                "callback": "[$this",
                "line": 203,
                "type": "hook_registration"
            },
            {
                "hook": "admin_menu",
                "callback": "[$this",
                "line": 206,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "callback": "function(",
                "line": 64,
                "type": "hook_registration"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 239,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 380,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 418,
                "type": "hook_usage"
            },
            {
                "hook": "plugins_loaded",
                "callback": "[$this",
                "line": 196,
                "type": "hook_registration"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Internal/TokenPolyfill.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 125,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 218,
                "type": "hook_usage"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniff.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 909,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 935,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Application.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 113,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 146,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 161,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 162,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 189,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 313,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/CodeCoverageFilterRegistry.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 52,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Registry.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 107,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Builder.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 42,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Output/Facade.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 48,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/WarmCodeCoverageCacheCommand.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 52,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/CodeCoverage.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 70,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 72,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/DeprecationCollector/Facade.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 31,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/TestResult/Facade.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 34,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/_files/source_for_branched_exec_lines_php81.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 41,
                "type": "hook_usage"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Report/Xml/Project.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 26,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 82,
                "type": "hook_usage"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Runner.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 76,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 184,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 302,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 359,
                "type": "hook_usage"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Standards/MySource/Sniffs/Objects/CreateWidgetTypeCallbackSniff.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 131,
                "type": "hook_usage"
            }
        ],
        "vendor/sebastian/global-state/tests/unit/SnapshotTest.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 38,
                "type": "hook_usage"
            },
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 78,
                "type": "hook_usage"
            }
        ],
        "vendor/sebastian/global-state/tests/_fixture/SnapshotClassTyped.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 17,
                "type": "hook_usage"
            }
        ],
        "vendor/sebastian/global-state/tests/_fixture/SnapshotClass.php": [
            {
                "hook": "init",
                "usage": "direct_call",
                "line": 24,
                "type": "hook_usage"
            }
        ]
    },
    "dynamic_patterns": {
        "src/Tools/WordPressTool.php": [
            {
                "pattern": "ABSPATH\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "ABSPATH . 'wp-admin/includes/plugin.php'",
                "line": 1368,
                "context": "get_plugins function exists\n        if (!function_exists('get_plugins')) {\n            require_once ABSPATH . 'wp-admin/includes/plugin.php';\n        }\n        \n        // Get all plugins\n        $all"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprUser'",
                "line": 1435,
                "context": "list_memberships(array $parameters): array {\n        // Check if MemberPress is active\n        if (!class_exists('MeprUser')) {\n            return [\n                'status' => 'error',\n              "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprUser'",
                "line": 1467,
                "context": "ssfully';\n        \n        // Check if MemberPress is properly installed and configured\n        if (class_exists('MeprUser') && class_exists('MeprSubscription')) {\n            try {\n                //"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprSubscription'",
                "line": 1467,
                "context": "/ Check if MemberPress is properly installed and configured\n        if (class_exists('MeprUser') && class_exists('MeprSubscription')) {\n            try {\n                // Get all users with MemberPr"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 1649,
                "context": "embership_levels(array $parameters): array {\n        // Check if MemberPress is active\n        if (!class_exists('MeprProduct')) {\n            return [\n                'status' => 'error',\n           "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 1675,
                "context": "ssfully';\n        \n        // Check if MemberPress is properly installed and configured\n        if (class_exists('MeprProduct')) {\n            try {\n                // Get membership levels (products "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 1696,
                "context": "->posts;\n                \n                foreach ($products as $product) {\n                    if (class_exists('MeprProduct')) {\n                        $mepr_product = new \\MeprProduct($product->ID"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MemberpressAiAssistant\\Tools\\MemberPressTool'",
                "line": 2095,
                "context": "k to new instance');\n        }\n        \n        // Fall back to creating a new instance\n        if (class_exists('\\MemberpressAiAssistant\\Tools\\MemberPressTool')) {\n            \\MemberpressAiAssistant"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MemberpressAiAssistant\\Services\\MemberPressService'",
                "line": 2107,
                "context": "Service instance');\n                // Create a new MemberPressService instance\n                if (class_exists('\\MemberpressAiAssistant\\Services\\MemberPressService')) {\n                    $memberPr"
            },
            {
                "pattern": "ABSPATH\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "ABSPATH . 'wp-admin/includes/plugin.php'",
                "line": 1368,
                "context": "get_plugins function exists\n        if (!function_exists('get_plugins')) {\n            require_once ABSPATH . 'wp-admin/includes/plugin.php';\n        }\n        \n        // Get all plugins\n        $all"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprUser'",
                "line": 1435,
                "context": "list_memberships(array $parameters): array {\n        // Check if MemberPress is active\n        if (!class_exists('MeprUser')) {\n            return [\n                'status' => 'error',\n              "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprUser'",
                "line": 1467,
                "context": "ssfully';\n        \n        // Check if MemberPress is properly installed and configured\n        if (class_exists('MeprUser') && class_exists('MeprSubscription')) {\n            try {\n                //"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprSubscription'",
                "line": 1467,
                "context": "/ Check if MemberPress is properly installed and configured\n        if (class_exists('MeprUser') && class_exists('MeprSubscription')) {\n            try {\n                // Get all users with MemberPr"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 1649,
                "context": "embership_levels(array $parameters): array {\n        // Check if MemberPress is active\n        if (!class_exists('MeprProduct')) {\n            return [\n                'status' => 'error',\n           "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 1675,
                "context": "ssfully';\n        \n        // Check if MemberPress is properly installed and configured\n        if (class_exists('MeprProduct')) {\n            try {\n                // Get membership levels (products "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 1696,
                "context": "->posts;\n                \n                foreach ($products as $product) {\n                    if (class_exists('MeprProduct')) {\n                        $mepr_product = new \\MeprProduct($product->ID"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MemberpressAiAssistant\\Tools\\MemberPressTool'",
                "line": 2095,
                "context": "k to new instance');\n        }\n        \n        // Fall back to creating a new instance\n        if (class_exists('\\MemberpressAiAssistant\\Tools\\MemberPressTool')) {\n            \\MemberpressAiAssistant"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MemberpressAiAssistant\\Services\\MemberPressService'",
                "line": 2107,
                "context": "Service instance');\n                // Create a new MemberPressService instance\n                if (class_exists('\\MemberpressAiAssistant\\Services\\MemberPressService')) {\n                    $memberPr"
            }
        ],
        "src/Llm/Services/LlmChatAdapter.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 295,
                "context": "tool) {\n                try {\n                    // Execute the tool\n                    $result = call_user_func_array([$tool, $toolName], $arguments);\n                    $results[] = [\n           "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 295,
                "context": "tool) {\n                try {\n                    // Execute the tool\n                    $result = call_user_func_array([$tool, $toolName], $arguments);\n                    $results[] = [\n           "
            }
        ],
        "src/Llm/Services/LlmProviderFactory.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $providerClass",
                "line": 79,
                "context": ">configs[$name] ?? null;\n        \n        // Use LiteLLM proxy key for all providers\n        return new $providerClass('3d82afe47512fcb1faba41cc1c9c796d3dbe8624b0a5c62fa68e6d38f0bf6d72', $config);\n   "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $providerClass",
                "line": 79,
                "context": ">configs[$name] ?? null;\n        \n        // Use LiteLLM proxy key for all providers\n        return new $providerClass('3d82afe47512fcb1faba41cc1c9c796d3dbe8624b0a5c62fa68e6d38f0bf6d72', $config);\n   "
            }
        ],
        "src/DI/Container.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $concrete",
                "line": 122,
                "context": " no constructor, just create a new instance\n        if (is_null($constructor)) {\n            return new $concrete;\n        }\n\n        // Get the constructor parameters\n        $dependencies = $constru"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $concrete",
                "line": 130,
                "context": " no dependencies, just create a new instance\n        if (empty($dependencies)) {\n            return new $concrete;\n        }\n\n        // Build the dependencies\n        $instances = $this->resolveDepen"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $concrete",
                "line": 122,
                "context": " no constructor, just create a new instance\n        if (is_null($constructor)) {\n            return new $concrete;\n        }\n\n        // Get the constructor parameters\n        $dependencies = $constru"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $concrete",
                "line": 130,
                "context": " no dependencies, just create a new instance\n        if (empty($dependencies)) {\n            return new $concrete;\n        }\n\n        // Build the dependencies\n        $instances = $this->resolveDepen"
            }
        ],
        "src/DI/Providers/ToolRegistryProvider.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MemberpressAiAssistant\\Tools\\WordPressTool'",
                "line": 55,
                "context": "registry');\n        }\n        \n        try {\n            // Register WordPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\WordPressTool')) {\n                try {\n                "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MemberpressAiAssistant\\Tools\\MemberPressTool'",
                "line": 73,
                "context": "              }\n            }\n            \n            // Register MemberPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\MemberPressTool')) {\n                // Get MemberPress s"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MemberpressAiAssistant\\Tools\\ContentTool'",
                "line": 95,
                "context": "}\n                }\n            }\n            \n            // Register Content tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\ContentTool')) {\n                try {\n                  "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MemberpressAiAssistant\\Tools\\WordPressTool'",
                "line": 55,
                "context": "registry');\n        }\n        \n        try {\n            // Register WordPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\WordPressTool')) {\n                try {\n                "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MemberpressAiAssistant\\Tools\\MemberPressTool'",
                "line": 73,
                "context": "              }\n            }\n            \n            // Register MemberPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\MemberPressTool')) {\n                // Get MemberPress s"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MemberpressAiAssistant\\Tools\\ContentTool'",
                "line": 95,
                "context": "}\n                }\n            }\n            \n            // Register Content tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\ContentTool')) {\n                try {\n                  "
            }
        ],
        "src/DI/ServiceLocator.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $def",
                "line": 73,
                "context": "lseif (is_string($def['definition']) && class_exists($def['definition'])) {\n            $instance = new $def['definition']();\n        } else {\n            $instance = $def['definition'];\n        }\n   "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $def",
                "line": 73,
                "context": "lseif (is_string($def['definition']) && class_exists($def['definition'])) {\n            $instance = new $def['definition']();\n        } else {\n            $instance = $def['definition'];\n        }\n   "
            }
        ],
        "src/ChatInterface.php": [
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('jquery')",
                "line": 158,
                "context": "    MPAI_VERSION,\n            true\n        );\n        \n        // Explicitly enqueue jQuery\n        wp_enqueue_script('jquery');\n        \n        // Register blog formatter module\n        wp_register_"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script($handle)",
                "line": 200,
                "context": "         true\n            );\n            wp_script_add_data($handle, 'type', 'module');\n            wp_enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n     "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-xml-processor')",
                "line": 207,
                "context": "\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style('mpai-table-styles');\n        wp_enqueue_script('mpai-xml-processor');\n        wp_enqueue_script('mpai-data-handler');\n        wp_"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-data-handler')",
                "line": 208,
                "context": "    wp_enqueue_style('mpai-table-styles');\n        wp_enqueue_script('mpai-xml-processor');\n        wp_enqueue_script('mpai-data-handler');\n        wp_enqueue_script('mpai-text-formatter');\n        wp"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-text-formatter')",
                "line": 209,
                "context": "   wp_enqueue_script('mpai-xml-processor');\n        wp_enqueue_script('mpai-data-handler');\n        wp_enqueue_script('mpai-text-formatter');\n        wp_enqueue_script('mpai-blog-formatter');\n        "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-blog-formatter')",
                "line": 210,
                "context": "  wp_enqueue_script('mpai-data-handler');\n        wp_enqueue_script('mpai-text-formatter');\n        wp_enqueue_script('mpai-blog-formatter');\n        wp_enqueue_script('mpai-chat');\n        \n        /"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-chat')",
                "line": 211,
                "context": "wp_enqueue_script('mpai-text-formatter');\n        wp_enqueue_script('mpai-blog-formatter');\n        wp_enqueue_script('mpai-chat');\n        \n        // Add WordPress dashicons for icons\n        wp_enq"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('jquery')",
                "line": 293,
                "context": "    MPAI_VERSION,\n            true\n        );\n        \n        // Explicitly enqueue jQuery\n        wp_enqueue_script('jquery');\n        \n        // Register blog formatter module\n        wp_register_"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script($handle)",
                "line": 335,
                "context": "         true\n            );\n            wp_script_add_data($handle, 'type', 'module');\n            wp_enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n     "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-xml-processor-admin')",
                "line": 342,
                "context": "enqueue_style('mpai-blog-post-admin');\n        wp_enqueue_style('mpai-table-styles-admin');\n        wp_enqueue_script('mpai-xml-processor-admin');\n        wp_enqueue_script('mpai-data-handler-admin');"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-data-handler-admin')",
                "line": 343,
                "context": "ue_style('mpai-table-styles-admin');\n        wp_enqueue_script('mpai-xml-processor-admin');\n        wp_enqueue_script('mpai-data-handler-admin');\n        wp_enqueue_script('mpai-text-formatter-admin')"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-text-formatter-admin')",
                "line": 344,
                "context": "e_script('mpai-xml-processor-admin');\n        wp_enqueue_script('mpai-data-handler-admin');\n        wp_enqueue_script('mpai-text-formatter-admin');\n        wp_enqueue_script('mpai-blog-formatter-admin"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-blog-formatter-admin')",
                "line": 345,
                "context": "_script('mpai-data-handler-admin');\n        wp_enqueue_script('mpai-text-formatter-admin');\n        wp_enqueue_script('mpai-blog-formatter-admin');\n        wp_enqueue_script('mpai-chat-admin');\n\n     "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-chat-admin')",
                "line": 346,
                "context": "cript('mpai-text-formatter-admin');\n        wp_enqueue_script('mpai-blog-formatter-admin');\n        wp_enqueue_script('mpai-chat-admin');\n\n        // Localize script with configuration\n        wp_loca"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-chat')",
                "line": 204,
                "context": "enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat');\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style("
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-blog-post')",
                "line": 205,
                "context": "h module script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat');\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style('mpai-table-styles');\n        wp_enqueu"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-table-styles')",
                "line": 206,
                "context": "e assets\n        wp_enqueue_style('mpai-chat');\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style('mpai-table-styles');\n        wp_enqueue_script('mpai-xml-processor');\n        wp_e"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('dashicons')",
                "line": 214,
                "context": "      wp_enqueue_script('mpai-chat');\n        \n        // Add WordPress dashicons for icons\n        wp_enqueue_style('dashicons');\n\n        // Localize script with configuration\n        wp_localize_sc"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-chat-admin')",
                "line": 339,
                "context": "enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat-admin');\n        wp_enqueue_style('mpai-blog-post-admin');\n        wp_en"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-blog-post-admin')",
                "line": 340,
                "context": "le script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat-admin');\n        wp_enqueue_style('mpai-blog-post-admin');\n        wp_enqueue_style('mpai-table-styles-admin');\n     "
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-table-styles-admin')",
                "line": 341,
                "context": "     wp_enqueue_style('mpai-chat-admin');\n        wp_enqueue_style('mpai-blog-post-admin');\n        wp_enqueue_style('mpai-table-styles-admin');\n        wp_enqueue_script('mpai-xml-processor-admin');\n"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('jquery')",
                "line": 158,
                "context": "    MPAI_VERSION,\n            true\n        );\n        \n        // Explicitly enqueue jQuery\n        wp_enqueue_script('jquery');\n        \n        // Register blog formatter module\n        wp_register_"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script($handle)",
                "line": 200,
                "context": "         true\n            );\n            wp_script_add_data($handle, 'type', 'module');\n            wp_enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n     "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-xml-processor')",
                "line": 207,
                "context": "\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style('mpai-table-styles');\n        wp_enqueue_script('mpai-xml-processor');\n        wp_enqueue_script('mpai-data-handler');\n        wp_"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-data-handler')",
                "line": 208,
                "context": "    wp_enqueue_style('mpai-table-styles');\n        wp_enqueue_script('mpai-xml-processor');\n        wp_enqueue_script('mpai-data-handler');\n        wp_enqueue_script('mpai-text-formatter');\n        wp"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-text-formatter')",
                "line": 209,
                "context": "   wp_enqueue_script('mpai-xml-processor');\n        wp_enqueue_script('mpai-data-handler');\n        wp_enqueue_script('mpai-text-formatter');\n        wp_enqueue_script('mpai-blog-formatter');\n        "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-blog-formatter')",
                "line": 210,
                "context": "  wp_enqueue_script('mpai-data-handler');\n        wp_enqueue_script('mpai-text-formatter');\n        wp_enqueue_script('mpai-blog-formatter');\n        wp_enqueue_script('mpai-chat');\n        \n        /"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-chat')",
                "line": 211,
                "context": "wp_enqueue_script('mpai-text-formatter');\n        wp_enqueue_script('mpai-blog-formatter');\n        wp_enqueue_script('mpai-chat');\n        \n        // Add WordPress dashicons for icons\n        wp_enq"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('jquery')",
                "line": 293,
                "context": "    MPAI_VERSION,\n            true\n        );\n        \n        // Explicitly enqueue jQuery\n        wp_enqueue_script('jquery');\n        \n        // Register blog formatter module\n        wp_register_"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script($handle)",
                "line": 335,
                "context": "         true\n            );\n            wp_script_add_data($handle, 'type', 'module');\n            wp_enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n     "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-xml-processor-admin')",
                "line": 342,
                "context": "enqueue_style('mpai-blog-post-admin');\n        wp_enqueue_style('mpai-table-styles-admin');\n        wp_enqueue_script('mpai-xml-processor-admin');\n        wp_enqueue_script('mpai-data-handler-admin');"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-data-handler-admin')",
                "line": 343,
                "context": "ue_style('mpai-table-styles-admin');\n        wp_enqueue_script('mpai-xml-processor-admin');\n        wp_enqueue_script('mpai-data-handler-admin');\n        wp_enqueue_script('mpai-text-formatter-admin')"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-text-formatter-admin')",
                "line": 344,
                "context": "e_script('mpai-xml-processor-admin');\n        wp_enqueue_script('mpai-data-handler-admin');\n        wp_enqueue_script('mpai-text-formatter-admin');\n        wp_enqueue_script('mpai-blog-formatter-admin"
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-blog-formatter-admin')",
                "line": 345,
                "context": "_script('mpai-data-handler-admin');\n        wp_enqueue_script('mpai-text-formatter-admin');\n        wp_enqueue_script('mpai-blog-formatter-admin');\n        wp_enqueue_script('mpai-chat-admin');\n\n     "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('mpai-chat-admin')",
                "line": 346,
                "context": "cript('mpai-text-formatter-admin');\n        wp_enqueue_script('mpai-blog-formatter-admin');\n        wp_enqueue_script('mpai-chat-admin');\n\n        // Localize script with configuration\n        wp_loca"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-chat')",
                "line": 204,
                "context": "enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat');\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style("
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-blog-post')",
                "line": 205,
                "context": "h module script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat');\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style('mpai-table-styles');\n        wp_enqueu"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-table-styles')",
                "line": 206,
                "context": "e assets\n        wp_enqueue_style('mpai-chat');\n        wp_enqueue_style('mpai-blog-post');\n        wp_enqueue_style('mpai-table-styles');\n        wp_enqueue_script('mpai-xml-processor');\n        wp_e"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('dashicons')",
                "line": 214,
                "context": "      wp_enqueue_script('mpai-chat');\n        \n        // Add WordPress dashicons for icons\n        wp_enqueue_style('dashicons');\n\n        // Localize script with configuration\n        wp_localize_sc"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-chat-admin')",
                "line": 339,
                "context": "enqueue_script($handle); // Enqueue each module script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat-admin');\n        wp_enqueue_style('mpai-blog-post-admin');\n        wp_en"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-blog-post-admin')",
                "line": 340,
                "context": "le script\n        }\n\n        // Enqueue assets\n        wp_enqueue_style('mpai-chat-admin');\n        wp_enqueue_style('mpai-blog-post-admin');\n        wp_enqueue_style('mpai-table-styles-admin');\n     "
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style('mpai-table-styles-admin')",
                "line": 341,
                "context": "     wp_enqueue_style('mpai-chat-admin');\n        wp_enqueue_style('mpai-blog-post-admin');\n        wp_enqueue_style('mpai-table-styles-admin');\n        wp_enqueue_script('mpai-xml-processor-admin');\n"
            }
        ],
        "src/Admin/MPAIAdminMenu.php": [
            {
                "pattern": "ABSPATH\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "ABSPATH . 'wp-admin/includes/plugin.php'",
                "line": 419,
                "context": "s_memberpress_active(): bool {\n    if (!function_exists('is_plugin_active')) {\n        include_once ABSPATH . 'wp-admin/includes/plugin.php';\n    }\n    \n    return is_plugin_active('memberpress/member"
            },
            {
                "pattern": "ABSPATH\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "ABSPATH . 'wp-admin/includes/plugin.php'",
                "line": 419,
                "context": "s_memberpress_active(): bool {\n    if (!function_exists('is_plugin_active')) {\n        include_once ABSPATH . 'wp-admin/includes/plugin.php';\n    }\n    \n    return is_plugin_active('memberpress/member"
            }
        ],
        "src/Admin/MPAIAjaxHandler.php": [
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_test_api_connection",
                "line": 59,
                "context": "\n     */\n    protected function addHooks(): void {\n        // Add AJAX handlers\n        add_action('wp_ajax_mpai_test_api_connection', [$this, 'handle_test_api_connection']);\n        \n        // Add A"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_process_chat",
                "line": 62,
                "context": "onnection']);\n        \n        // Add AJAX handler for processing chat messages\n        add_action('wp_ajax_mpai_process_chat', [$this, 'handle_process_chat']);\n        \n        // Add AJAX handler fo"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_chat_request",
                "line": 65,
                "context": "]);\n        \n        // Add AJAX handler for chat requests (new modular system)\n        add_action('wp_ajax_mpai_chat_request', [$this, 'handle_chat_request']);\n        \n        \n        // Add AJAX h"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_get_chat_interface",
                "line": 69,
                "context": ";\n        \n        \n        // Add AJAX handler for getting chat interface HTML\n        add_action('wp_ajax_mpai_get_chat_interface', [$this, 'handle_get_chat_interface']);\n    }\n    \n    \n    /**\n   "
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_test_api_connection",
                "line": 59,
                "context": "\n     */\n    protected function addHooks(): void {\n        // Add AJAX handlers\n        add_action('wp_ajax_mpai_test_api_connection', [$this, 'handle_test_api_connection']);\n        \n        // Add A"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_process_chat",
                "line": 62,
                "context": "onnection']);\n        \n        // Add AJAX handler for processing chat messages\n        add_action('wp_ajax_mpai_process_chat', [$this, 'handle_process_chat']);\n        \n        // Add AJAX handler fo"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_chat_request",
                "line": 65,
                "context": "]);\n        \n        // Add AJAX handler for chat requests (new modular system)\n        add_action('wp_ajax_mpai_chat_request', [$this, 'handle_chat_request']);\n        \n        \n        // Add AJAX h"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_get_chat_interface",
                "line": 69,
                "context": ";\n        \n        \n        // Add AJAX handler for getting chat interface HTML\n        add_action('wp_ajax_mpai_get_chat_interface', [$this, 'handle_get_chat_interface']);\n    }\n    \n    \n    /**\n   "
            }
        ],
        "src/Admin/MPAIPostHandler.php": [
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_create_post",
                "line": 62,
                "context": "id\n     */\n    public function boot(): void {\n        // Register AJAX handlers\n        add_action('wp_ajax_mpai_create_post', [$this, 'handleCreatePost']);\n        add_action('wp_ajax_nopriv_mpai_cre"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_nopriv_mpai_create_post",
                "line": 63,
                "context": "rs\n        add_action('wp_ajax_mpai_create_post', [$this, 'handleCreatePost']);\n        add_action('wp_ajax_nopriv_mpai_create_post', [$this, 'handleCreatePostNoPriv']);\n        \n        if ($this->lo"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_mpai_create_post",
                "line": 62,
                "context": "id\n     */\n    public function boot(): void {\n        // Register AJAX handlers\n        add_action('wp_ajax_mpai_create_post', [$this, 'handleCreatePost']);\n        add_action('wp_ajax_nopriv_mpai_cre"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_nopriv_mpai_create_post",
                "line": 63,
                "context": "rs\n        add_action('wp_ajax_mpai_create_post', [$this, 'handleCreatePost']);\n        add_action('wp_ajax_nopriv_mpai_create_post', [$this, 'handleCreatePostNoPriv']);\n        \n        if ($this->lo"
            }
        ],
        "src/Agents/SystemAgent.php": [
            {
                "pattern": "ABSPATH\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "ABSPATH . 'wp-admin/includes/plugin.php'",
                "line": 293,
                "context": "gin functions are available\n        if (!function_exists('get_plugins')) {\n            require_once ABSPATH . 'wp-admin/includes/plugin.php';\n        }\n        \n        // Get plugins\n        $all_plu"
            },
            {
                "pattern": "ABSPATH\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "ABSPATH . 'wp-admin/includes/plugin.php'",
                "line": 293,
                "context": "gin functions are available\n        if (!function_exists('get_plugins')) {\n            require_once ABSPATH . 'wp-admin/includes/plugin.php';\n        }\n        \n        // Get plugins\n        $all_plu"
            }
        ],
        "src/Agents/MemberPressAgent.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 246,
                "context": "\n        // Check if MemberPress is active by checking if the MeprProduct class exists\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 409,
                "context": "pdateData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 541,
                "context": "d' => $id\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 668,
                "context": "d' => $id\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 804,
                "context": "> $offset\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 1017,
                "context": "$ruleData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this->logger) {\n                $this->logger->error('"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 1211,
                "context": "pdateData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this->logger) {\n                $this->logger->error('"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 1349,
                "context": "d' => $id\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this->logger) {\n                $this->logger->error('"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 1520,
                "context": "icingData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 246,
                "context": "\n        // Check if MemberPress is active by checking if the MeprProduct class exists\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 409,
                "context": "pdateData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 541,
                "context": "d' => $id\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 668,
                "context": "d' => $id\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 804,
                "context": "> $offset\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 1017,
                "context": "$ruleData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this->logger) {\n                $this->logger->error('"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 1211,
                "context": "pdateData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this->logger) {\n                $this->logger->error('"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 1349,
                "context": "d' => $id\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this->logger) {\n                $this->logger->error('"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 1520,
                "context": "icingData\n            ]);\n        }\n        \n        // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($this->logger) {\n                $this->logger->erro"
            }
        ],
        "src/Utilities/replace_debug_logs.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/DebugLogger.php'",
                "line": 17,
                "context": " file directly\nif (!defined('ABSPATH')) {\n    exit;\n}\n\n// Include the DebugLogger file\nrequire_once __DIR__ . '/DebugLogger.php';\n\n/**\n * Function to recursively scan a directory for PHP files\n * \n * "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/DebugLogger.php'",
                "line": 17,
                "context": " file directly\nif (!defined('ABSPATH')) {\n    exit;\n}\n\n// Include the DebugLogger file\nrequire_once __DIR__ . '/DebugLogger.php';\n\n/**\n * Function to recursively scan a directory for PHP files\n * \n * "
            }
        ],
        "src/Utilities/DebugLogger.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\\\MemberpressAiAssistant\\\\Utilities\\\\LoggingUtility'",
                "line": 26,
                "context": "urn void\n */\nfunction debug_log($message) {\n    // Check if debug logs should be suppressed\n    if (class_exists('\\\\MemberpressAiAssistant\\\\Utilities\\\\LoggingUtility') &&\n        LoggingUtility::shoul"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\\\MemberpressAiAssistant\\\\Utilities\\\\LoggingUtility'",
                "line": 26,
                "context": "urn void\n */\nfunction debug_log($message) {\n    // Check if debug logs should be suppressed\n    if (class_exists('\\\\MemberpressAiAssistant\\\\Utilities\\\\LoggingUtility') &&\n        LoggingUtility::shoul"
            }
        ],
        "src/Registry/AgentRegistry.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $agentClass",
                "line": 195,
                "context": ") {\n            if (class_exists($agentClass)) {\n                try {\n                    $agent = new $agentClass($this->logger);\n                    if ($this->registerAgent($agent)) {\n            "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $agentClass",
                "line": 247,
                "context": ") {\n            if (class_exists($agentClass)) {\n                try {\n                    $agent = new $agentClass($this->logger);\n                    if ($this->registerAgent($agent)) {\n            "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $className",
                "line": 288,
                "context": "sInterface(AgentInterface::class) && !$reflection->isAbstract()) {\n                        $agent = new $className($this->logger);\n                        if ($this->registerAgent($agent)) {\n         "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $agentClass",
                "line": 195,
                "context": ") {\n            if (class_exists($agentClass)) {\n                try {\n                    $agent = new $agentClass($this->logger);\n                    if ($this->registerAgent($agent)) {\n            "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $agentClass",
                "line": 247,
                "context": ") {\n            if (class_exists($agentClass)) {\n                try {\n                    $agent = new $agentClass($this->logger);\n                    if ($this->registerAgent($agent)) {\n            "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $className",
                "line": 288,
                "context": "sInterface(AgentInterface::class) && !$reflection->isAbstract()) {\n                        $agent = new $className($this->logger);\n                        if ($this->registerAgent($agent)) {\n         "
            }
        ],
        "src/Registry/ToolRegistry.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $toolClass",
                "line": 201,
                "context": "    $memberPressService = $mpai_container->make('memberpress');\n                            $tool = new $toolClass($memberPressService);\n                        } else {\n                            //"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $toolClass",
                "line": 211,
                "context": "\n                        // Standard initialization for other tools\n                        $tool = new $toolClass($this->logger);\n                    }\n                    \n                    if ($t"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $toolClass",
                "line": 259,
                "context": "ss) {\n            if (class_exists($toolClass)) {\n                try {\n                    $tool = new $toolClass($this->logger);\n                    if ($this->registerTool($tool)) {\n               "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $className",
                "line": 300,
                "context": "ntsInterface(ToolInterface::class) && !$reflection->isAbstract()) {\n                        $tool = new $className($this->logger);\n                        if ($this->registerTool($tool)) {\n           "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $toolClass",
                "line": 201,
                "context": "    $memberPressService = $mpai_container->make('memberpress');\n                            $tool = new $toolClass($memberPressService);\n                        } else {\n                            //"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $toolClass",
                "line": 211,
                "context": "\n                        // Standard initialization for other tools\n                        $tool = new $toolClass($this->logger);\n                    }\n                    \n                    if ($t"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $toolClass",
                "line": 259,
                "context": "ss) {\n            if (class_exists($toolClass)) {\n                try {\n                    $tool = new $toolClass($this->logger);\n                    if ($this->registerTool($tool)) {\n               "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $className",
                "line": 300,
                "context": "ntsInterface(ToolInterface::class) && !$reflection->isAbstract()) {\n                        $tool = new $className($this->logger);\n                        if ($this->registerTool($tool)) {\n           "
            }
        ],
        "src/Services/Settings/SettingsViewService.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Missing required dependency: %s for service: %s'",
                "line": 480,
                "context": "   */\n    protected function handleMissingDependency(string $dependency): void {\n        $message = sprintf(\n            'Missing required dependency: %s for service: %s', \n            $dependency, \n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Error in %s: %s'",
                "line": 524,
                "context": "   */\n    protected function handleError(\\Exception $e, string $context): void {\n        $message = sprintf('Error in %s: %s', $context, $e->getMessage());\n        \n        if ($this->logger) {\n      "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 243,
                "context": "   }\n        \n        // Output section description\n        if ($section['callback']) {\n            call_user_func($section['callback']);\n        }\n        \n        // Output section fields\n        if"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Missing required dependency: %s for service: %s'",
                "line": 480,
                "context": "   */\n    protected function handleMissingDependency(string $dependency): void {\n        $message = sprintf(\n            'Missing required dependency: %s for service: %s', \n            $dependency, \n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Error in %s: %s'",
                "line": 524,
                "context": "   */\n    protected function handleError(\\Exception $e, string $context): void {\n        $message = sprintf('Error in %s: %s', $context, $e->getMessage());\n        \n        if ($this->logger) {\n      "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 243,
                "context": "   }\n        \n        // Output section description\n        if ($section['callback']) {\n            call_user_func($section['callback']);\n        }\n        \n        // Output section fields\n        if"
            }
        ],
        "src/Services/Settings/SettingsControllerService.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Missing required dependency: %s for service: %s'",
                "line": 468,
                "context": "   */\n    protected function handleMissingDependency(string $dependency): void {\n        $message = sprintf(\n            'Missing required dependency: %s for service: %s', \n            $dependency, \n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Error in %s: %s'",
                "line": 512,
                "context": "   */\n    protected function handleError(\\Exception $e, string $context): void {\n        $message = sprintf('Error in %s: %s', $context, $e->getMessage());\n        \n        if ($this->logger) {\n      "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/js/settings.js',\n            ['jquery'],\n            MPAI_VERSION,\n            true\n        )",
                "line": 431,
                "context": "            [],\n            MPAI_VERSION\n        );\n        \n        // Enqueue settings JS\n        wp_enqueue_script(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/js/settings.js"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/css/settings.css',\n            [],\n            MPAI_VERSION\n        )",
                "line": 423,
                "context": "ge_mpai-settings') {\n            return;\n        }\n        \n        // Enqueue settings CSS\n        wp_enqueue_style(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/css/settings.cs"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Missing required dependency: %s for service: %s'",
                "line": 468,
                "context": "   */\n    protected function handleMissingDependency(string $dependency): void {\n        $message = sprintf(\n            'Missing required dependency: %s for service: %s', \n            $dependency, \n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Error in %s: %s'",
                "line": 512,
                "context": "   */\n    protected function handleError(\\Exception $e, string $context): void {\n        $message = sprintf('Error in %s: %s', $context, $e->getMessage());\n        \n        if ($this->logger) {\n      "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/js/settings.js',\n            ['jquery'],\n            MPAI_VERSION,\n            true\n        )",
                "line": 431,
                "context": "            [],\n            MPAI_VERSION\n        );\n        \n        // Enqueue settings JS\n        wp_enqueue_script(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/js/settings.js"
            },
            {
                "pattern": "wp_enqueue_style\\s*\\([^)]+\\)",
                "match": "wp_enqueue_style(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/css/settings.css',\n            [],\n            MPAI_VERSION\n        )",
                "line": 423,
                "context": "ge_mpai-settings') {\n            return;\n        }\n        \n        // Enqueue settings CSS\n        wp_enqueue_style(\n            'mpai-settings',\n            MPAI_PLUGIN_URL . 'assets/css/settings.cs"
            }
        ],
        "src/Services/Settings/SettingsModelService.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Missing required dependency: %s for service: %s'",
                "line": 497,
                "context": "   */\n    protected function handleMissingDependency(string $dependency): void {\n        $message = sprintf(\n            'Missing required dependency: %s for service: %s', \n            $dependency, \n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Error in %s: %s'",
                "line": 541,
                "context": "   */\n    protected function handleError(\\Exception $e, string $context): void {\n        $message = sprintf('Error in %s: %s', $context, $e->getMessage());\n        \n        if ($this->logger) {\n      "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Missing required dependency: %s for service: %s'",
                "line": 497,
                "context": "   */\n    protected function handleMissingDependency(string $dependency): void {\n        $message = sprintf(\n            'Missing required dependency: %s for service: %s', \n            $dependency, \n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Error in %s: %s'",
                "line": 541,
                "context": "   */\n    protected function handleError(\\Exception $e, string $context): void {\n        $message = sprintf('Error in %s: %s', $context, $e->getMessage());\n        \n        if ($this->logger) {\n      "
            }
        ],
        "src/Services/Adapters/UserAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 40,
                "context": "user or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 80,
                "context": " users\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 152,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 502,
                "context": "d');\n            }\n            \n            // Check if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 646,
                "context": "d');\n            }\n            \n            // Check if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 40,
                "context": "user or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 80,
                "context": " users\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 152,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 502,
                "context": "d');\n            }\n            \n            // Check if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 646,
                "context": "d');\n            }\n            \n            // Check if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            }
        ],
        "src/Services/Adapters/ProductAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 38,
                "context": "duct or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 69,
                "context": "oducts\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 139,
                "context": "> $data['period_type'] ?? 'NOT_SET'\n                ]);\n            }\n            \n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 604,
                "context": "              // Different versions of MemberPress might have different methods\n                if (class_exists('\\MeprRule')) {\n                    // Query for rules that apply to this product\n     "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 38,
                "context": "duct or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 69,
                "context": "oducts\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 139,
                "context": "> $data['period_type'] ?? 'NOT_SET'\n                ]);\n            }\n            \n            if (!class_exists('\\MeprProduct')) {\n                throw new \\Exception('MemberPress is not active');\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 604,
                "context": "              // Different versions of MemberPress might have different methods\n                if (class_exists('\\MeprRule')) {\n                    // Query for rules that apply to this product\n     "
            }
        ],
        "src/Services/Adapters/RuleAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 38,
                "context": "rule or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 69,
                "context": " rules\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 145,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 38,
                "context": "rule or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 69,
                "context": " rules\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprRule'",
                "line": 145,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw new \\Exception('MemberPress is not active');\n    "
            }
        ],
        "src/Services/Adapters/TransactionAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprTransaction'",
                "line": 40,
                "context": "tion or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n                throw new \\Exception('MemberPress is not active'"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprTransaction'",
                "line": 80,
                "context": "ctions\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n                throw new \\Exception('MemberPress is not active'"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprTransaction'",
                "line": 202,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n                throw new \\Exception('MemberPress is not active'"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprTransaction'",
                "line": 40,
                "context": "tion or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n                throw new \\Exception('MemberPress is not active'"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprTransaction'",
                "line": 80,
                "context": "ctions\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n                throw new \\Exception('MemberPress is not active'"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprTransaction'",
                "line": 202,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n                throw new \\Exception('MemberPress is not active'"
            }
        ],
        "src/Services/Adapters/SubscriptionAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 40,
                "context": "tion or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n                throw new \\Exception('MemberPress is not active"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 80,
                "context": "ptions\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n                throw new \\Exception('MemberPress is not active"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 181,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n                throw new \\Exception('MemberPress is not active"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 40,
                "context": "tion or null if not found\n     */\n    public function get(int $id) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n                throw new \\Exception('MemberPress is not active"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 80,
                "context": "ptions\n     */\n    public function getAll(array $args = []): array {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n                throw new \\Exception('MemberPress is not active"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 181,
                "context": "or null on failure\n     */\n    public function create(array $data) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n                throw new \\Exception('MemberPress is not active"
            }
        ],
        "src/Services/Transformers/RuleTransformer.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 258,
                "context": "          if (!$product_id) {\n                return '';\n            }\n            \n            if (class_exists('\\MeprProduct')) {\n                $product = new \\MeprProduct($product_id);\n          "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 258,
                "context": "          if (!$product_id) {\n                return '';\n            }\n            \n            if (class_exists('\\MeprProduct')) {\n                $product = new \\MeprProduct($product_id);\n          "
            }
        ],
        "src/Services/Transformers/TransactionTransformer.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 251,
                "context": "\n            }\n            \n            // Fallback to getting the product directly\n            if (class_exists('\\MeprProduct') && $transaction->product_id) {\n                $product = new \\MeprProd"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 290,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id) {\n                // Log user creation attempt\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 340,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id) {\n                // Log user creation attempt f"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 413,
                "context": "        }\n            \n            // Fallback to getting the subscription directly\n            if (class_exists('\\MeprSubscription')) {\n                $subscription = new \\MeprSubscription($transact"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 251,
                "context": "\n            }\n            \n            // Fallback to getting the product directly\n            if (class_exists('\\MeprProduct') && $transaction->product_id) {\n                $product = new \\MeprProd"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 290,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id) {\n                // Log user creation attempt\n "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 340,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id) {\n                // Log user creation attempt f"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprSubscription'",
                "line": 413,
                "context": "        }\n            \n            // Fallback to getting the subscription directly\n            if (class_exists('\\MeprSubscription')) {\n                $subscription = new \\MeprSubscription($transact"
            }
        ],
        "src/Services/Transformers/SubscriptionTransformer.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 374,
                "context": "\n            }\n            \n            // Fallback to getting the product directly\n            if (class_exists('\\MeprProduct') && $subscription->product_id) {\n                $product = new \\MeprPro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 413,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_id) {\n                // Log user creation attempt\n"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 463,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_id) {\n                // Log user creation attempt "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprProduct'",
                "line": 374,
                "context": "\n            }\n            \n            // Fallback to getting the product directly\n            if (class_exists('\\MeprProduct') && $subscription->product_id) {\n                $product = new \\MeprPro"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 413,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_id) {\n                // Log user creation attempt\n"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\MeprUser'",
                "line": 463,
                "context": "  }\n            }\n            \n            // Fallback to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_id) {\n                // Log user creation attempt "
            }
        ],
        "src/Services/MemberPressService.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 354,
                "context": "     *\n     * @return bool\n     */\n    public function isMemberPressActive(): bool {\n        return class_exists('MeprProduct') && class_exists('MeprUser');\n    }\n\n    /**\n     * Get a MemberPress ada"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprUser'",
                "line": 354,
                "context": " */\n    public function isMemberPressActive(): bool {\n        return class_exists('MeprProduct') && class_exists('MeprUser');\n    }\n\n    /**\n     * Get a MemberPress adapter\n     *\n     * @param strin"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprProduct'",
                "line": 354,
                "context": "     *\n     * @return bool\n     */\n    public function isMemberPressActive(): bool {\n        return class_exists('MeprProduct') && class_exists('MeprUser');\n    }\n\n    /**\n     * Get a MemberPress ada"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('MeprUser'",
                "line": 354,
                "context": " */\n    public function isMemberPressActive(): bool {\n        return class_exists('MeprProduct') && class_exists('MeprUser');\n    }\n\n    /**\n     * Get a MemberPress adapter\n     *\n     * @param strin"
            }
        ],
        "templates/settings-page.php": [
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('jquery')",
                "line": 133,
                "context": "\n        ?>\n    </form>\n    \n    <?php\n    // Ensure jQuery is available for the chat interface\n    wp_enqueue_script('jquery');\n    \n    // Always render the chat interface (consent system removed)\n "
            },
            {
                "pattern": "wp_enqueue_script\\s*\\([^)]+\\)",
                "match": "wp_enqueue_script('jquery')",
                "line": 133,
                "context": "\n        ?>\n    </form>\n    \n    <?php\n    // Ensure jQuery is available for the chat interface\n    wp_enqueue_script('jquery');\n    \n    // Always render the chat interface (consent system removed)\n "
            }
        ],
        "tests/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/TestCase.php'",
                "line": 25,
                "context": "ss-ai-assistant/');\n}\n\n// Create a base TestCase class that all test cases will extend\nrequire_once __DIR__ . '/TestCase.php';\n\n// Load mock factory for creating test fixtures\nrequire_once __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Fixtures/MockFactory.php'",
                "line": 28,
                "context": "quire_once __DIR__ . '/TestCase.php';\n\n// Load mock factory for creating test fixtures\nrequire_once __DIR__ . '/Fixtures/MockFactory.php';"
            }
        ],
        "scripts/unused-assets-analyzer.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%.2f %s'",
                "line": 582,
                "context": "\n    \n    $units = ['B', 'KB', 'MB', 'GB'];\n    $factor = floor(log($bytes, 1024));\n    \n    return sprintf('%.2f %s', $bytes / pow(1024, $factor), $units[$factor]);\n}\n\n/**\n * Generate cleanup recomme"
            }
        ],
        "scripts/cross-reference-validator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"\ud83d\udd39 %s (%s priority): %s\\n\"",
                "line": 1083,
                "context": " \"\\n\";\n        \n        foreach ($results['recommendations'] as $recommendation) {\n            echo sprintf(\"\ud83d\udd39 %s (%s priority): %s\\n\",\n                strtoupper($recommendation['type']),\n        "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 322,
                "context": "        'class_exists\\s*\\(\\s*[\\'\"]([^\\'\"]+)[\\'\"]',\n            'new\\s+\\$[a-zA-Z_]\\w*',\n            'call_user_func',\n            \n            // WordPress loading functions\n            'wp_enqueue_scr"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_nopriv_",
                "line": 204,
                "context": "        'admin_footer',\n            \n            // AJAX hooks\n            'wp_ajax_',\n            'wp_ajax_nopriv_',\n            \n            // Plugin hooks\n            'init',\n            'plugins_"
            },
            {
                "pattern": "template_redirect",
                "match": "template_redirect",
                "line": 191,
                "context": ",\n            'wp_register_script',\n            \n            // Template loading hooks\n            'template_redirect',\n            'template_include',\n            'get_template_part',\n            'lo"
            },
            {
                "pattern": "template_redirect",
                "match": "template_redirect",
                "line": 332,
                "context": "           \n            // AJAX and template loading\n            'wp_ajax_[a-zA-Z_]+',\n            'template_redirect',\n            'get_template_part'\n        ];\n        \n        $this->scanForDynami"
            },
            {
                "pattern": "get_template_part",
                "match": "get_template_part",
                "line": 193,
                "context": "emplate loading hooks\n            'template_redirect',\n            'template_include',\n            'get_template_part',\n            'load_template',\n            \n            // WordPress admin hooks\n "
            },
            {
                "pattern": "get_template_part",
                "match": "get_template_part",
                "line": 333,
                "context": "nd template loading\n            'wp_ajax_[a-zA-Z_]+',\n            'template_redirect',\n            'get_template_part'\n        ];\n        \n        $this->scanForDynamicPatterns($dynamic_patterns);\n   "
            },
            {
                "pattern": "get_template_part",
                "match": "get_template_part",
                "line": 897,
                "context": "*\\.php)[\\'\"]',\n            'require\\s*\\(\\s*[\\'\"]([^\\'\"]*templates/[^\\'\"]*\\.php)[\\'\"]',\n            'get_template_part\\s*\\(\\s*[\\'\"]([^\\'\"]+)[\\'\"]',\n            'load_template\\s*\\(\\s*[\\'\"]([^\\'\"]*templa"
            }
        ],
        "scripts/template-analyzer.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"Total Size: %s\\n\"",
                "line": 499,
                "context": ");\n            echo sprintf(\"Unused Templates: %d\\n\", $stats['unused_templates']);\n            echo sprintf(\"Total Size: %s\\n\", $this->formatBytes($stats['total_size_bytes']));\n            echo sprint"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"Potential Savings: %s\\n\"",
                "line": 500,
                "context": " echo sprintf(\"Total Size: %s\\n\", $this->formatBytes($stats['total_size_bytes']));\n            echo sprintf(\"Potential Savings: %s\\n\", $stats['potential_savings']);\n            echo sprintf(\"PHP Files"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"\ud83d\udcc4 %s\\n\"",
                "line": 531,
                "context": "eat(\"-\", 70) . \"\\n\";\n        \n        foreach ($templates as $path => $template) {\n            echo sprintf(\"\ud83d\udcc4 %s\\n\", $template['name']);\n            echo sprintf(\"   Path: %s\\n\", $path);\n         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"   Path: %s\\n\"",
                "line": 532,
                "context": "as $path => $template) {\n            echo sprintf(\"\ud83d\udcc4 %s\\n\", $template['name']);\n            echo sprintf(\"   Path: %s\\n\", $path);\n            echo sprintf(\"   Size: %s | Modified: %s\\n\", \n         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"   Size: %s | Modified: %s\\n\"",
                "line": 533,
                "context": "\"\ud83d\udcc4 %s\\n\", $template['name']);\n            echo sprintf(\"   Path: %s\\n\", $path);\n            echo sprintf(\"   Size: %s | Modified: %s\\n\", \n                $this->formatBytes($template['size']), \n   "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"   Status: %s | Risk: %s (%d)\\n\"",
                "line": 537,
                "context": "ize']), \n                date('Y-m-d H:i:s', $template['modified'])\n            );\n            echo sprintf(\"   Status: %s | Risk: %s (%d)\\n\", \n                $template['used'] ? '\u2705 Used' : '\u274c Un"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"\ud83d\udcdd %s\\n\"",
                "line": 563,
                "context": "repeat(\"-\", 70) . \"\\n\";\n        \n        foreach ($usage_data as $file => $data) {\n            echo sprintf(\"\ud83d\udcdd %s\\n\", $file);\n            \n            if (!empty($data['template_includes'])) {\n    "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"     \u2022 %s (line %d)\\n\"",
                "line": 568,
                "context": "es:\\n\";\n                foreach ($data['template_includes'] as $include) {\n                    echo sprintf(\"     \u2022 %s (line %d)\\n\", $include['template'], $include['line']);\n                }\n      "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"     \u2022 %s (line %d)\\n\"",
                "line": 575,
                "context": "rns:\\n\";\n                foreach ($data['dynamic_patterns'] as $pattern) {\n                    echo sprintf(\"     \u2022 %s (line %d)\\n\", $pattern['match'], $pattern['line']);\n                }\n         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"%s %s (Score: %d)\\n\"",
                "line": 605,
                "context": " === 'high_risk' ? '\ud83d\udd34' : ($risk_level === 'medium_risk' ? '\ud83d\udfe1' : '\ud83d\udfe2');\n                echo sprintf(\"%s %s (Score: %d)\\n\", $icon, $template['name'], $template['score']);\n                echo s"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"   Size: %s | Used: %s\\n\"",
                "line": 606,
                "context": " sprintf(\"%s %s (Score: %d)\\n\", $icon, $template['name'], $template['score']);\n                echo sprintf(\"   Size: %s | Used: %s\\n\", \n                    $this->formatBytes($template['size']),\n    "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"   \u2022 %s (%s)\\n\"",
                "line": 627,
                "context": "- Safe to remove:\\n\";\n            foreach ($high_risk as $path => $template) {\n                echo sprintf(\"   \u2022 %s (%s)\\n\", $template['name'], $this->formatBytes($template['size']));\n            }"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"   \u2022 %s (%s)\\n\"",
                "line": 636,
                "context": "before removal:\\n\";\n            foreach ($medium_risk as $path => $template) {\n                echo sprintf(\"   \u2022 %s (%s)\\n\", $template['name'], $this->formatBytes($template['size']));\n            }"
            },
            {
                "pattern": "get_template_part",
                "match": "get_template_part",
                "line": 73,
                "context": "lates/[^\\'\"]*)[\\'\"]',\n        'require_once\\s*\\(\\s*[\\'\"]([^\\'\"]*/templates/[^\\'\"]*)[\\'\"]',\n        'get_template_part\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]',\n        'load_template\\s*\\(\\s*[\\'\"]([^\\'\"]*/templates"
            }
        ],
        "scripts/asset-inventory.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%.2f %s'",
                "line": 113,
                "context": "\n    \n    $units = ['B', 'KB', 'MB', 'GB'];\n    $factor = floor(log($bytes, 1024));\n    \n    return sprintf('%.2f %s', $bytes / pow(1024, $factor), $units[$factor]);\n}\n\n/**\n * Get file type based on e"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"  %-40s %10s  %s%s\\n\"",
                "line": 384,
                "context": "               $module_indicator = $file['is_es6_module'] ? ' [ES6]' : '';\n                    echo sprintf(\"  %-40s %10s  %s%s\\n\", \n                        $file['path'], \n                        $fi"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"  %-30s %10s  %s  %s%s\\n\"",
                "line": 404,
                "context": "               $module_indicator = $file['is_es6_module'] ? ' [ES6]' : '';\n                    echo sprintf(\"  %-30s %10s  %s  %s%s\\n\", \n                        $file['filename'], \n                   "
            }
        ],
        "memberpress-ai-assistant.php": [
            {
                "pattern": "plugin_dir_path\\s*\\(\\s*__FILE__\\s*\\)\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "plugin_dir_path(__FILE__) . 'templates/welcome-page.php'",
                "line": 650,
                "context": "art of consent system cleanup\n        \n        // Include the welcome page template\n        include plugin_dir_path(__FILE__) . 'templates/welcome-page.php';\n    }\n\n    /**\n     * Plugin deactivation "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/test-api-keys.php'",
                "line": 1004,
                "context": " the plugin\nMemberpressAiAssistant::instance();\n\n// Include the API key test script\nif (file_exists(__DIR__ . '/test-api-keys.php')) {\n    include_once __DIR__ . '/test-api-keys.php';\n}"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/test-api-keys.php'",
                "line": 1005,
                "context": "Include the API key test script\nif (file_exists(__DIR__ . '/test-api-keys.php')) {\n    include_once __DIR__ . '/test-api-keys.php';\n}"
            },
            {
                "pattern": "ABSPATH\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "ABSPATH . 'wp-admin/includes/plugin.php'",
                "line": 451,
                "context": " MemberPress is active\n        if (!function_exists('is_plugin_active')) {\n            include_once ABSPATH . 'wp-admin/includes/plugin.php';\n        }\n\n        // Define the MemberPress plugin file\n "
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$class_path . '.php'",
                "line": 226,
                "context": "RY_SEPARATOR, $class_path);\n                $file = MPAI_PLUGIN_DIR . 'src' . DIRECTORY_SEPARATOR . $class_path . '.php';\n\n                // Include the file if it exists\n                if (file_exi"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s %s'",
                "line": 524,
                "context": ") && WP_DEBUG_LOG) {\n                        \\MemberpressAiAssistant\\Utilities\\LoggingUtility::info(sprintf('%s %s',\n                            $message,\n                            !empty($context) "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s %s'",
                "line": 534,
                "context": " && WP_DEBUG_LOG) {\n                        \\MemberpressAiAssistant\\Utilities\\LoggingUtility::error(sprintf('%s %s',\n                            $message,\n                            !empty($context) "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s %s'",
                "line": 544,
                "context": "& WP_DEBUG_LOG) {\n                        \\MemberpressAiAssistant\\Utilities\\LoggingUtility::warning(sprintf('%s %s',\n                            $message,\n                            !empty($context) "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s %s'",
                "line": 554,
                "context": " && WP_DEBUG_LOG) {\n                        \\MemberpressAiAssistant\\Utilities\\LoggingUtility::debug(sprintf('%s %s',\n                            $message,\n                            !empty($context) "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'MPAI Deactivation: Cleanup stats - Found: %d, Removed: %d, Verified: %s'",
                "line": 687,
                "context": "_results['stats'])) {\n                $stats = $cleanup_results['stats'];\n                error_log(sprintf(\n                    'MPAI Deactivation: Cleanup stats - Found: %d, Removed: %d, Verified: %"
            }
        ],
        "vendor/myclabs/deep-copy/src/DeepCopy/DeepCopy.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 317,
                "context": "ray $elements, callable $predicate)\n    {\n        foreach ($elements as $element) {\n            if (call_user_func($predicate, $element)) {\n                return $element;\n            }\n        }\n\n  "
            }
        ],
        "vendor/myclabs/deep-copy/src/DeepCopy/Filter/ReplaceFilter.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 35,
                "context": "etProperty($object, $property);\n        $reflectionProperty->setAccessible(true);\n\n        $value = call_user_func($this->callback, $reflectionProperty->getValue($object));\n\n        $reflectionPropert"
            }
        ],
        "vendor/myclabs/deep-copy/src/DeepCopy/TypeFilter/ReplaceFilter.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 28,
                "context": "   }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function apply($element)\n    {\n        return call_user_func($this->callback, $element);\n    }\n}\n"
            }
        ],
        "vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/composer/autoload_real.php'",
                "line": 23,
                "context": " $err;\n        }\n    }\n    trigger_error(\n        $err,\n        E_USER_ERROR\n    );\n}\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInita464da16afda6c051f07128e9453e"
            }
        ],
        "vendor/staabm/side-effects-detector/tests/SideEffectsDetectorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__. '/sess_'",
                "line": 28,
                "context": "      yield ['<?php gc_disable();', [SideEffect::MAYBE]];\n            yield [\"<?php if (file_exists(__DIR__. '/sess_' .session_id())) unlink(__DIR__. '/sess_' .session_id());\", [SideEffect::MAYBE, Sid"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__. '/sess_'",
                "line": 28,
                "context": "Effect::MAYBE]];\n            yield [\"<?php if (file_exists(__DIR__. '/sess_' .session_id())) unlink(__DIR__. '/sess_' .session_id());\", [SideEffect::MAYBE, SideEffect::INPUT_OUTPUT]];\n        } else {"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__. '/sess_'",
                "line": 33,
                "context": "eld ['<?php gc_disable();', [SideEffect::UNKNOWN_CLASS]];\n            yield [\"<?php if (file_exists(__DIR__. '/sess_' .session_id())) unlink(__DIR__. '/sess_' .session_id());\", [SideEffect::INPUT_OUTP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__. '/sess_'",
                "line": 33,
                "context": "UNKNOWN_CLASS]];\n            yield [\"<?php if (file_exists(__DIR__. '/sess_' .session_id())) unlink(__DIR__. '/sess_' .session_id());\", [SideEffect::INPUT_OUTPUT]];\n        }\n        yield ['<?php $_G"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('autoload_root'",
                "line": 85,
                "context": "indows\") echo \"skip Windows only test\";', [SideEffect::STANDARD_OUTPUT]];\n        yield [\"<?php if (class_exists('autoload_root', false)) echo 'skip Autoload test classes exist already';\", [SideEffect"
            }
        ],
        "vendor/staabm/side-effects-detector/tests/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 3,
                "context": "<?php\n\nrequire_once __DIR__ . '/../vendor/autoload.php';\n"
            }
        ],
        "vendor/staabm/side-effects-detector/lib/SideEffectsDetector.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/functionMetadata.php'",
                "line": 64,
                "context": "ivate array $functionMetadata;\n\n    public function __construct() {\n        $functionMeta = require __DIR__ . '/functionMetadata.php';\n        if (!is_array($functionMeta)) {\n            throw new \\Ru"
            }
        ],
        "vendor/nikic/php-parser/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/lib'",
                "line": 5,
                "context": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->exclude('PhpParser/Parser')\n    ->in(__DIR__ . '/lib')\n    ->in(__DIR__ . '/test')\n    ->in(__DIR__ . '/grammar')\n;\n\n$config = new PhpCsF"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/test'",
                "line": 6,
                "context": "= PhpCsFixer\\Finder::create()\n    ->exclude('PhpParser/Parser')\n    ->in(__DIR__ . '/lib')\n    ->in(__DIR__ . '/test')\n    ->in(__DIR__ . '/grammar')\n;\n\n$config = new PhpCsFixer\\Config();\nreturn $conf"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/grammar'",
                "line": 7,
                "context": ")\n    ->exclude('PhpParser/Parser')\n    ->in(__DIR__ . '/lib')\n    ->in(__DIR__ . '/test')\n    ->in(__DIR__ . '/grammar')\n;\n\n$config = new PhpCsFixer\\Config();\nreturn $config->setRiskyAllowed(true)\n  "
            }
        ],
        "vendor/nikic/php-parser/grammar/rebuildParsers.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpyLang.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\n\nrequire __DIR__ . '/phpyLang.php';\n\n$parserToDefines = [\n    'Php7' => ['PHP7' => true],\n    'Php8' => ['PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/php.y'",
                "line": 10,
                "context": "ToDefines = [\n    'Php7' => ['PHP7' => true],\n    'Php8' => ['PHP8' => true],\n];\n\n$grammarFile    = __DIR__ . '/php.y';\n$skeletonFile   = __DIR__ . '/parser.template';\n$tmpGrammarFile = __DIR__ . '/tm"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/parser.template'",
                "line": 11,
                "context": " true],\n    'Php8' => ['PHP8' => true],\n];\n\n$grammarFile    = __DIR__ . '/php.y';\n$skeletonFile   = __DIR__ . '/parser.template';\n$tmpGrammarFile = __DIR__ . '/tmp_parser.phpy';\n$tmpResultFile  = __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tmp_parser.phpy'",
                "line": 12,
                "context": "mmarFile    = __DIR__ . '/php.y';\n$skeletonFile   = __DIR__ . '/parser.template';\n$tmpGrammarFile = __DIR__ . '/tmp_parser.phpy';\n$tmpResultFile  = __DIR__ . '/tmp_parser.php';\n$resultDir = __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tmp_parser.php'",
                "line": 13,
                "context": "  = __DIR__ . '/parser.template';\n$tmpGrammarFile = __DIR__ . '/tmp_parser.phpy';\n$tmpResultFile  = __DIR__ . '/tmp_parser.php';\n$resultDir = __DIR__ . '/../lib/PhpParser/Parser';\n\n$kmyacc = getenv('K"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../lib/PhpParser/Parser'",
                "line": 14,
                "context": "marFile = __DIR__ . '/tmp_parser.phpy';\n$tmpResultFile  = __DIR__ . '/tmp_parser.php';\n$resultDir = __DIR__ . '/../lib/PhpParser/Parser';\n\n$kmyacc = getenv('KMYACC');\nif (!$kmyacc) {\n    // Use phpyac"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/bin/phpyacc'",
                "line": 19,
                "context": "etenv('KMYACC');\nif (!$kmyacc) {\n    // Use phpyacc from dev dependencies by default.\n    $kmyacc = __DIR__ . '/../vendor/bin/phpyacc';\n}\n\n$options = array_flip($argv);\n$optionDebug = isset($options['"
            }
        ],
        "vendor/nikic/php-parser/tools/fuzzing/target.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../vendor/autoload.php'",
                "line": 16,
                "context": "erwise there is a conflict with php-fuzzer's own use of PHP-Parser.\\n\";\n    exit(1);\n}\n\n$autoload = __DIR__ . '/../../vendor/autoload.php';\nif (!file_exists($autoload)) {\n    echo \"Cannot find PHP-Par"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . \"/PHP-Parser\\n\"",
                "line": 18,
                "context": "/autoload.php';\nif (!file_exists($autoload)) {\n    echo \"Cannot find PHP-Parser installation in \" . __DIR__ . \"/PHP-Parser\\n\";\n    exit(1);\n}\n\nrequire $autoload;\n\n$lexer = new PhpParser\\Lexer();\n$pars"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/php.dict'",
                "line": 128,
                "context": "Result after pretty printing differs\");\n    }\n});\n\n$fuzzer->setMaxLen(1024);\n$fuzzer->addDictionary(__DIR__ . '/php.dict');\n$fuzzer->setAllowedExceptions([PhpParser\\Error::class]);\n"
            }
        ],
        "vendor/nikic/php-parser/tools/fuzzing/generateCorpus.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../test'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\n\n$testDir = __DIR__ . '/../../test';\nrequire $testDir . '/bootstrap.php';\nrequire $testDir . '/PhpParser/CodeTes"
            }
        ],
        "vendor/nikic/php-parser/test/updateTests.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/bootstrap.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser;\n\nrequire __DIR__ . '/bootstrap.php';\nrequire __DIR__ . '/PhpParser/CodeTestParser.php';\nrequire __DIR__ . '/P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/PhpParser/CodeTestParser.php'",
                "line": 6,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser;\n\nrequire __DIR__ . '/bootstrap.php';\nrequire __DIR__ . '/PhpParser/CodeTestParser.php';\nrequire __DIR__ . '/PhpParser/CodeParsingTest.php';\n\n$dir"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/PhpParser/CodeParsingTest.php'",
                "line": 7,
                "context": "er;\n\nrequire __DIR__ . '/bootstrap.php';\nrequire __DIR__ . '/PhpParser/CodeTestParser.php';\nrequire __DIR__ . '/PhpParser/CodeParsingTest.php';\n\n$dir = __DIR__ . '/code/parser';\n\n$testParser = new Cod"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/code/parser'",
                "line": 9,
                "context": "IR__ . '/PhpParser/CodeTestParser.php';\nrequire __DIR__ . '/PhpParser/CodeParsingTest.php';\n\n$dir = __DIR__ . '/code/parser';\n\n$testParser = new CodeTestParser();\n$codeParsingTest = new CodeParsingTes"
            }
        ],
        "vendor/nikic/php-parser/test/PhpParser/CodeParsingTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../code/parser'",
                "line": 54,
                "context": "ize($output)];\n    }\n\n    public static function provideTestParse() {\n        return self::getTests(__DIR__ . '/../code/parser', 'test');\n    }\n\n    private function formatErrorMessage(Error $e, $code"
            }
        ],
        "vendor/nikic/php-parser/test/PhpParser/LexerTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../lib/PhpParser/compatibility_tokens.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser;\n\nrequire __DIR__ . '/../../lib/PhpParser/compatibility_tokens.php';\n\nclass LexerTest extends \\PHPUnit\\Framewo"
            }
        ],
        "vendor/nikic/php-parser/test/PhpParser/Lexer/EmulativeTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../lib/PhpParser/compatibility_tokens.php'",
                "line": 12,
                "context": "arser\\LexerTest;\nuse PhpParser\\Parser\\Php7;\nuse PhpParser\\PhpVersion;\nuse PhpParser\\Token;\n\nrequire __DIR__ . '/../../../lib/PhpParser/compatibility_tokens.php';\n\nclass EmulativeTest extends LexerTest"
            }
        ],
        "vendor/nikic/php-parser/test/PhpParser/BuilderHelpersTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixtures/Suit.php'",
                "line": 232,
                "context": "            $this->markTestSkipped('Enums are supported since PHP 8.1');\n        }\n\n        include __DIR__ . '/../fixtures/Suit.php';\n\n        $this->assertEquals(new Expr\\ClassConstFetch(new FullyQu"
            }
        ],
        "vendor/nikic/php-parser/test/PhpParser/PrettyPrinterTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../code/prettyPrinter'",
                "line": 52,
                "context": " $mode);\n    }\n\n    public static function provideTestPrettyPrint() {\n        return self::getTests(__DIR__ . '/../code/prettyPrinter', 'test');\n    }\n\n    public static function provideTestPrettyPrin"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../code/prettyPrinter'",
                "line": 56,
                "context": "t');\n    }\n\n    public static function provideTestPrettyPrintFile() {\n        return self::getTests(__DIR__ . '/../code/prettyPrinter', 'file-test');\n    }\n\n    public function testPrettyPrintExpr(): "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../code/formatPreservation'",
                "line": 218,
                "context": "   }\n\n    public static function provideTestFormatPreservingPrint() {\n        return self::getTests(__DIR__ . '/../code/formatPreservation', 'test', 3);\n    }\n\n    /**\n     * @dataProvider provideTest"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../code/prettyPrinter'",
                "line": 250,
                "context": "tatic function provideTestRoundTripPrint() {\n        return array_merge(\n            self::getTests(__DIR__ . '/../code/prettyPrinter', 'test'),\n            self::getTests(__DIR__ . '/../code/parser',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../code/parser'",
                "line": 251,
                "context": "\n            self::getTests(__DIR__ . '/../code/prettyPrinter', 'test'),\n            self::getTests(__DIR__ . '/../code/parser', 'test')\n        );\n    }\n\n    public function testWindowsNewline(): voi"
            }
        ],
        "vendor/nikic/php-parser/test/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser;\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\nfunction canonicalize($str) {\n    // normalize EOL style\n    $"
            }
        ],
        "vendor/nikic/php-parser/test_old/run.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 64,
                "context": " $options['--php-version'] ?? '8.0';\n$testType = $arguments[0];\n$dir = $arguments[1];\n\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nswitch ($testType) {\n    case 'Symfony':\n        $fileFilter ="
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/NameContext.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot use %s%s as %s because the name is already in use'",
                "line": 71,
                "context": "> 'const ',\n            ];\n\n            $this->errorHandler->handleError(new Error(\n                sprintf(\n                    'Cannot use %s%s as %s because the name is already in use',\n           "
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/BuilderHelpers.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s type cannot be nullable'",
                "line": 208,
                "context": " ($nullable && in_array((string) $type, $notNullableTypes)) {\n            throw new \\LogicException(sprintf('%s type cannot be nullable', $type));\n        }\n\n        return $nullable ? new NullableTyp"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/compatibility_tokens.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Token %s has ID of type %s, should be int. '",
                "line": 35,
                "context": "= \\constant($token);\n                if (!\\is_int($tokenId)) {\n                    throw new \\Error(sprintf(\n                        'Token %s has ID of type %s, should be int. ' .\n                   "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Token %s has same ID as token %s, '",
                "line": 43,
                "context": "kenId] ?? null;\n                if ($clashingToken !== null) {\n                    throw new \\Error(sprintf(\n                        'Token %s has same ID as token %s, ' .\n                        'you"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/PrettyPrinter/Standard.php": [
            {
                "pattern": "include\\s*\\(\\s*[^)]+\\)",
                "match": "Include(Expr\\Include_ $node, int $precedence, int $lhsPrecedence)",
                "line": 559,
                "context": " string {\n        return 'eval(' . $this->p($node->expr) . ')';\n    }\n\n    protected function pExpr_Include(Expr\\Include_ $node, int $precedence, int $lhsPrecedence): string {\n        static $map = [\n"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/ParserAbstract.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                            'The lexer returned an invalid token (id=%d, value=%s)'",
                "line": 258,
                "context": " if (!isset($this->phpTokenToSymbol[$tokenId])) {\n                        throw new \\RangeException(sprintf(\n                            'The lexer returned an invalid token (id=%d, value=%s)',\n      "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Constructor %s() cannot be static'",
                "line": 1117,
                "context": "        case '__construct':\n                    $this->emitError(new Error(\n                        sprintf('Constructor %s() cannot be static', $node->name),\n                        $this->getAttribu"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Destructor %s() cannot be static'",
                "line": 1122,
                "context": "         case '__destruct':\n                    $this->emitError(new Error(\n                        sprintf('Destructor %s() cannot be static', $node->name),\n                        $this->getAttribut"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Clone method %s() cannot be static'",
                "line": 1127,
                "context": "            case '__clone':\n                    $this->emitError(new Error(\n                        sprintf('Clone method %s() cannot be static', $node->name),\n                        $this->getAttrib"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Method %s() cannot be readonly'",
                "line": 1135,
                "context": "  if ($node->flags & Modifiers::READONLY) {\n            $this->emitError(new Error(\n                sprintf('Method %s() cannot be readonly', $node->name),\n                $this->getAttributesAt($modi"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot use %s as %s because \\'",
                "line": 1153,
                "context": "as && $node->alias->isSpecialClassName()) {\n            $this->emitError(new Error(\n                sprintf(\n                    'Cannot use %s as %s because \\'%2$s\\' is a special class name',\n       "
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/JsonDecoder.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $className",
                "line": 78,
                "context": "'])) {\n            throw new \\RuntimeException('Comment must have text');\n        }\n\n        return new $className(\n            $value['text'],\n            $value['line'] ?? -1, $value['filePos'] ?? -"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Error.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s from %d:%d to %d:%d'",
                "line": 133,
                "context": "message\n     */\n    public function getMessageWithColumnInfo(string $code): string {\n        return sprintf(\n            '%s from %d:%d to %d:%d', $this->getRawMessage(),\n            $this->getStartLi"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Lexer.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/compatibility_tokens.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser;\n\nrequire __DIR__ . '/compatibility_tokens.php';\n\nclass Lexer {\n    /**\n     * Tokenize the provided source co"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/UseUse.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../UseItem.php'",
                "line": 7,
                "context": "?php declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Stmt;\n\nuse PhpParser\\Node\\UseItem;\n\nrequire __DIR__ . '/../UseItem.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class UseU"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/PropertyProperty.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../PropertyItem.php'",
                "line": 7,
                "context": "declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Stmt;\n\nuse PhpParser\\Node\\PropertyItem;\n\nrequire __DIR__ . '/../PropertyItem.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/StaticVar.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../StaticVar.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Stmt;\n\nrequire __DIR__ . '/../StaticVar.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class St"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/DeclareDeclare.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../DeclareItem.php'",
                "line": 7,
                "context": " declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Stmt;\n\nuse PhpParser\\Node\\DeclareItem;\n\nrequire __DIR__ . '/../DeclareItem.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class "
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Expr/ArrayItem.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../ArrayItem.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Expr;\n\nrequire __DIR__ . '/../ArrayItem.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class Ar"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Expr/ClosureUse.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../ClosureUse.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Expr;\n\nrequire __DIR__ . '/../ClosureUse.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class C"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/DNumber.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Float_.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Scalar;\n\nrequire __DIR__ . '/Float_.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class DNumber "
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/LNumber.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Int_.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Scalar;\n\nrequire __DIR__ . '/Int_.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    class LNumber ex"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/EncapsedStringPart.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../InterpolatedStringPart.php'",
                "line": 7,
                "context": "ct_types=1);\n\nnamespace PhpParser\\Node\\Scalar;\n\nuse PhpParser\\Node\\InterpolatedStringPart;\n\nrequire __DIR__ . '/../InterpolatedStringPart.php';\n\nif (false) {\n    // For classmap-authoritative support."
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/Encapsed.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/InterpolatedString.php'",
                "line": 5,
                "context": "<?php declare(strict_types=1);\n\nnamespace PhpParser\\Node\\Scalar;\n\nrequire __DIR__ . '/InterpolatedString.php';\n\nif (false) {\n    // For classmap-authoritative support.\n    cl"
            }
        ],
        "vendor/theseer/tokenizer/tests/XMLSerializerTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_files/test.php.tokens'",
                "line": 16,
                "context": "ected function setUp(): void {\n        $this->tokens = \\unserialize(\n            \\file_get_contents(__DIR__ . '/_files/test.php.tokens'),\n            [TokenCollection::class]\n        );\n    }\n\n    pub"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_files/test.php.xml'",
                "line": 22,
                "context": "   }\n\n    public function testCanBeSerializedToXml(): void {\n        $expected = \\file_get_contents(__DIR__ . '/_files/test.php.xml');\n\n        $serializer = new XMLSerializer();\n        $this->assert"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_files/customns.xml'",
                "line": 37,
                "context": "nction testCanBeSerializedToXmlWithCustomNamespace(): void {\n        $expected = \\file_get_contents(__DIR__ . '/_files/customns.xml');\n\n        $serializer = new XMLSerializer(new NamespaceUri('custom"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_files/empty.xml'",
                "line": 44,
                "context": "c function testEmptyCollectionCreatesEmptyDocument(): void {\n        $expected = \\file_get_contents(__DIR__ . '/_files/empty.xml');\n\n        $serializer = new XMLSerializer();\n        $this->assertEqu"
            }
        ],
        "vendor/theseer/tokenizer/tests/TokenizerTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_files/'",
                "line": 30,
                "context": "chFixture(string $fixture): void {\n        $expected = \\unserialize(\n            \\file_get_contents(__DIR__ . '/_files/' . $fixture . '.tokens'),\n            [TokenCollection::class, Token::class]\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_files/'",
                "line": 34,
                "context": "ction::class, Token::class]\n        );\n\n        $actual = (new Tokenizer)->parse(\\file_get_contents(__DIR__ . '/_files/' . $fixture));\n\n        $this->assertEquals($expected, $actual);\n    }\n}\n"
            }
        ],
        "vendor/theseer/tokenizer/tests/Issue18Test.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_files/Issue-18.php'",
                "line": 13,
                "context": "ic function testIssueNoLongerOccurs() {\n        $result = (new Tokenizer)->parse(\\file_get_contents(__DIR__ . '/_files/Issue-18.php'));\n\n        $dom = (new XMLSerializer())->toDom($result);\n\n        "
            }
        ],
        "vendor/theseer/tokenizer/src/TokenCollection.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('No Token at offest %s'",
                "line": 52,
                "context": " (!$this->offsetExists($offset)) {\n            throw new TokenCollectionException(\n                \\sprintf('No Token at offest %s', $offset)\n            );\n        }\n\n        return $this->tokens[$of"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Offset must be of type integer, %s given'",
                "line": 69,
                "context": "       $type = \\gettype($offset);\n\n            throw new TokenCollectionException(\n                \\sprintf(\n                    'Offset must be of type integer, %s given',\n                    $type ="
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Value must be of type %s, %s given'",
                "line": 80,
                "context": "        $type = \\gettype($value);\n\n            throw new TokenCollectionException(\n                \\sprintf(\n                    'Value must be of type %s, %s given',\n                    Token::class,"
            }
        ],
        "vendor/composer/ClassLoader.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/component'",
                "line": 21,
                "context": "assLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/framework'",
                "line": 22,
                "context": "  $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     //"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 118,
                "context": "  public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return ar"
            }
        ],
        "vendor/composer/autoload_static.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 10,
                "context": "1f07128e9453e2b9\n{\n    public static $files = array (\n        '6124b4c8570aa390c21fafd04a26c69f' => __DIR__ . '/..' . '/myclabs/deep-copy/src/DeepCopy/deep_copy.php',\n        'ec07570ca5a812141189b1fa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 11,
                "context": ".' . '/myclabs/deep-copy/src/DeepCopy/deep_copy.php',\n        'ec07570ca5a812141189b1fa81503674' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Assert/Functions.php',\n    );\n\n    public static $"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 33,
                "context": " public static $prefixDirsPsr4 = array (\n        'PhpParser\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/nikic/php-parser/lib/PhpParser',\n        ),\n        'MemberpressAiAssistant\\\\Tes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../..'",
                "line": 37,
                "context": "pParser',\n        ),\n        'MemberpressAiAssistant\\\\Tests\\\\' => \n        array (\n            0 => __DIR__ . '/../..' . '/tests',\n        ),\n        'MemberpressAiAssistant\\\\' => \n        array (\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../..'",
                "line": 41,
                "context": "/..' . '/tests',\n        ),\n        'MemberpressAiAssistant\\\\' => \n        array (\n            0 => __DIR__ . '/../..' . '/src',\n        ),\n        'DeepCopy\\\\' => \n        array (\n            0 => __"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 45,
                "context": "> __DIR__ . '/../..' . '/src',\n        ),\n        'DeepCopy\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/myclabs/deep-copy/src/DeepCopy',\n        ),\n    );\n\n    public static $classMap "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 50,
                "context": ",\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'PHPUnit\\\\Event\\\\Application\\\\Finished'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 51,
                "context": "R__ . '/..' . '/composer/InstalledVersions.php',\n        'PHPUnit\\\\Event\\\\Application\\\\Finished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Application/Finished.php',\n        'PHPUnit\\\\Ev"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 52,
                "context": "vent/Events/Application/Finished.php',\n        'PHPUnit\\\\Event\\\\Application\\\\FinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Application/FinishedSubscriber.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 53,
                "context": "Event/Events/Application/FinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Application\\\\Started' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Application/Started.php',\n        'PHPUnit\\\\Eve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 54,
                "context": "/Event/Events/Application/Started.php',\n        'PHPUnit\\\\Event\\\\Application\\\\StartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Application/StartedSubscriber.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 55,
                "context": "src/Event/Events/Application/StartedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Code\\\\ClassMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/ClassMethod.php',\n        'PHPUnit\\\\Event\\\\Code\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 56,
                "context": "unit/phpunit/src/Event/Value/ClassMethod.php',\n        'PHPUnit\\\\Event\\\\Code\\\\ComparisonFailure' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/ComparisonFailure.php',\n        'PHPUnit\\\\Event\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 57,
                "context": "src/Event/Value/ComparisonFailure.php',\n        'PHPUnit\\\\Event\\\\Code\\\\ComparisonFailureBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/ComparisonFailureBuilder.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 58,
                "context": "Value/ComparisonFailureBuilder.php',\n        'PHPUnit\\\\Event\\\\Code\\\\IssueTrigger\\\\DirectTrigger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Issue/DirectTrigger.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 59,
                "context": "lue/Test/Issue/DirectTrigger.php',\n        'PHPUnit\\\\Event\\\\Code\\\\IssueTrigger\\\\IndirectTrigger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Issue/IndirectTrigger.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 60,
                "context": "alue/Test/Issue/IndirectTrigger.php',\n        'PHPUnit\\\\Event\\\\Code\\\\IssueTrigger\\\\IssueTrigger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Issue/IssueTrigger.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 61,
                "context": "nt/Value/Test/Issue/IssueTrigger.php',\n        'PHPUnit\\\\Event\\\\Code\\\\IssueTrigger\\\\SelfTrigger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Issue/SelfTrigger.php',\n        'PHPUnit\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 62,
                "context": "ent/Value/Test/Issue/SelfTrigger.php',\n        'PHPUnit\\\\Event\\\\Code\\\\IssueTrigger\\\\TestTrigger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Issue/TestTrigger.php',\n        'PHPUnit\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 63,
                "context": "/Value/Test/Issue/TestTrigger.php',\n        'PHPUnit\\\\Event\\\\Code\\\\IssueTrigger\\\\UnknownTrigger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Issue/UnknownTrigger.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 64,
                "context": "/Issue/UnknownTrigger.php',\n        'PHPUnit\\\\Event\\\\Code\\\\NoTestCaseObjectOnCallStackException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/NoTestCaseObjectOnCallStackException.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 65,
                "context": "/Event/Exception/NoTestCaseObjectOnCallStackException.php',\n        'PHPUnit\\\\Event\\\\Code\\\\Phpt' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Phpt.php',\n        'PHPUnit\\\\Event\\\\Code\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 66,
                "context": ". '/..' . '/phpunit/phpunit/src/Event/Value/Test/Phpt.php',\n        'PHPUnit\\\\Event\\\\Code\\\\Test' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/Test.php',\n        'PHPUnit\\\\Event\\\\Code\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 67,
                "context": "'/phpunit/phpunit/src/Event/Value/Test/Test.php',\n        'PHPUnit\\\\Event\\\\Code\\\\TestCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestCollection.php',\n        'PHPUnit\\\\Even"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 68,
                "context": "src/Event/Value/Test/TestCollection.php',\n        'PHPUnit\\\\Event\\\\Code\\\\TestCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestCollectionIterator.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 69,
                "context": "hpunit/src/Event/Value/Test/TestCollectionIterator.php',\n        'PHPUnit\\\\Event\\\\Code\\\\TestDox' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestDox.php',\n        'PHPUnit\\\\Event\\\\Code"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 70,
                "context": "hpunit/phpunit/src/Event/Value/Test/TestDox.php',\n        'PHPUnit\\\\Event\\\\Code\\\\TestDoxBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestDoxBuilder.php',\n        'PHPUnit\\\\Even"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 71,
                "context": "nit/phpunit/src/Event/Value/Test/TestDoxBuilder.php',\n        'PHPUnit\\\\Event\\\\Code\\\\TestMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestMethod.php',\n        'PHPUnit\\\\Event\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 72,
                "context": "/phpunit/src/Event/Value/Test/TestMethod.php',\n        'PHPUnit\\\\Event\\\\Code\\\\TestMethodBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestMethodBuilder.php',\n        'PHPUnit\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 73,
                "context": "t/phpunit/src/Event/Value/Test/TestMethodBuilder.php',\n        'PHPUnit\\\\Event\\\\Code\\\\Throwable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Throwable.php',\n        'PHPUnit\\\\Event\\\\Code\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 74,
                "context": "phpunit/phpunit/src/Event/Value/Throwable.php',\n        'PHPUnit\\\\Event\\\\Code\\\\ThrowableBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/ThrowableBuilder.php',\n        'PHPUnit\\\\Event\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 75,
                "context": "it/phpunit/src/Event/Value/ThrowableBuilder.php',\n        'PHPUnit\\\\Event\\\\CollectingDispatcher' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Dispatcher/CollectingDispatcher.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 76,
                "context": "it/src/Event/Dispatcher/CollectingDispatcher.php',\n        'PHPUnit\\\\Event\\\\DeferringDispatcher' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Dispatcher/DeferringDispatcher.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 77,
                "context": "hpunit/src/Event/Dispatcher/DeferringDispatcher.php',\n        'PHPUnit\\\\Event\\\\DirectDispatcher' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Dispatcher/DirectDispatcher.php',\n        'PHPUnit\\\\Ev"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 78,
                "context": "phpunit/phpunit/src/Event/Dispatcher/DirectDispatcher.php',\n        'PHPUnit\\\\Event\\\\Dispatcher' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Dispatcher/Dispatcher.php',\n        'PHPUnit\\\\Event\\\\D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 79,
                "context": "punit/phpunit/src/Event/Dispatcher/Dispatcher.php',\n        'PHPUnit\\\\Event\\\\DispatchingEmitter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Emitter/DispatchingEmitter.php',\n        'PHPUnit\\\\Eve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 80,
                "context": ". '/phpunit/phpunit/src/Event/Emitter/DispatchingEmitter.php',\n        'PHPUnit\\\\Event\\\\Emitter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Emitter/Emitter.php',\n        'PHPUnit\\\\Event\\\\Event' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 81,
                "context": "IR__ . '/..' . '/phpunit/phpunit/src/Event/Emitter/Emitter.php',\n        'PHPUnit\\\\Event\\\\Event' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Event.php',\n        'PHPUnit\\\\Event\\\\EventAlrea"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 82,
                "context": "nit/phpunit/src/Event/Events/Event.php',\n        'PHPUnit\\\\Event\\\\EventAlreadyAssignedException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/EventAlreadyAssignedException.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 83,
                "context": "rc/Event/Exception/EventAlreadyAssignedException.php',\n        'PHPUnit\\\\Event\\\\EventCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/EventCollection.php',\n        'PHPUnit\\\\Event\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 84,
                "context": "phpunit/src/Event/Events/EventCollection.php',\n        'PHPUnit\\\\Event\\\\EventCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/EventCollectionIterator.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 85,
                "context": "vent/Events/EventCollectionIterator.php',\n        'PHPUnit\\\\Event\\\\EventFacadeIsSealedException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/EventFacadeIsSealedException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 86,
                "context": "punit/src/Event/Exception/EventFacadeIsSealedException.php',\n        'PHPUnit\\\\Event\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/Exception.php',\n        'PHPUnit\\\\Event\\\\Fac"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 87,
                "context": ". '/..' . '/phpunit/phpunit/src/Event/Exception/Exception.php',\n        'PHPUnit\\\\Event\\\\Facade' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Facade.php',\n        'PHPUnit\\\\Event\\\\InvalidArgumentE"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 88,
                "context": ".' . '/phpunit/phpunit/src/Event/Facade.php',\n        'PHPUnit\\\\Event\\\\InvalidArgumentException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/InvalidArgumentException.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 89,
                "context": "c/Event/Exception/InvalidArgumentException.php',\n        'PHPUnit\\\\Event\\\\InvalidEventException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/InvalidEventException.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 90,
                "context": "Event/Exception/InvalidEventException.php',\n        'PHPUnit\\\\Event\\\\InvalidSubscriberException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/InvalidSubscriberException.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 91,
                "context": "/phpunit/src/Event/Exception/InvalidSubscriberException.php',\n        'PHPUnit\\\\Event\\\\MapError' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/MapError.php',\n        'PHPUnit\\\\Event\\\\NoPr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 92,
                "context": "hpunit/src/Event/Exception/MapError.php',\n        'PHPUnit\\\\Event\\\\NoPreviousThrowableException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/NoPreviousThrowableException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 93,
                "context": "rc/Event/Exception/NoPreviousThrowableException.php',\n        'PHPUnit\\\\Event\\\\RuntimeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/RuntimeException.php',\n        'PHPUnit\\\\Eve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 94,
                "context": "it/src/Event/Exception/RuntimeException.php',\n        'PHPUnit\\\\Event\\\\Runtime\\\\OperatingSystem' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Runtime/OperatingSystem.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 95,
                "context": "nit/phpunit/src/Event/Value/Runtime/OperatingSystem.php',\n        'PHPUnit\\\\Event\\\\Runtime\\\\PHP' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Runtime/PHP.php',\n        'PHPUnit\\\\Event\\\\Runti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 96,
                "context": ". '/phpunit/phpunit/src/Event/Value/Runtime/PHP.php',\n        'PHPUnit\\\\Event\\\\Runtime\\\\PHPUnit' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Runtime/PHPUnit.php',\n        'PHPUnit\\\\Event\\\\R"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 97,
                "context": "phpunit/phpunit/src/Event/Value/Runtime/PHPUnit.php',\n        'PHPUnit\\\\Event\\\\Runtime\\\\Runtime' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Runtime/Runtime.php',\n        'PHPUnit\\\\Event\\\\S"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 98,
                "context": "t/phpunit/src/Event/Value/Runtime/Runtime.php',\n        'PHPUnit\\\\Event\\\\SubscribableDispatcher' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Dispatcher/SubscribableDispatcher.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 99,
                "context": "t/phpunit/src/Event/Dispatcher/SubscribableDispatcher.php',\n        'PHPUnit\\\\Event\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Subscriber.php',\n        'PHPUnit\\\\Event\\\\SubscriberTy"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 100,
                "context": "it/src/Event/Subscriber.php',\n        'PHPUnit\\\\Event\\\\SubscriberTypeAlreadyRegisteredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/SubscriberTypeAlreadyRegisteredException.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 101,
                "context": "ion/SubscriberTypeAlreadyRegisteredException.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\Duration' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/Duration.php',\n        'PHPUnit\\\\Event"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 102,
                "context": "Event/Value/Telemetry/Duration.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\GarbageCollectorStatus' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/GarbageCollectorStatus.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 103,
                "context": "GarbageCollectorStatus.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\GarbageCollectorStatusProvider' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/GarbageCollectorStatusProvider.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 104,
                "context": "Value/Telemetry/GarbageCollectorStatusProvider.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\HRTime' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/HRTime.php',\n        'PHPUnit\\\\Event\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 105,
                "context": "phpunit/phpunit/src/Event/Value/Telemetry/HRTime.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\Info' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/Info.php',\n        'PHPUnit\\\\Event\\\\Te"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 106,
                "context": "it/phpunit/src/Event/Value/Telemetry/Info.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\MemoryMeter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/MemoryMeter.php',\n        'PHPUnit\\\\Ev"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 107,
                "context": "nit/src/Event/Value/Telemetry/MemoryMeter.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\MemoryUsage' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/MemoryUsage.php',\n        'PHPUnit\\\\Ev"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 108,
                "context": "hpunit/src/Event/Value/Telemetry/MemoryUsage.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\Snapshot' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/Snapshot.php',\n        'PHPUnit\\\\Event"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 109,
                "context": "/phpunit/src/Event/Value/Telemetry/Snapshot.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\StopWatch' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/StopWatch.php',\n        'PHPUnit\\\\Even"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 110,
                "context": "it/phpunit/src/Event/Value/Telemetry/StopWatch.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\System' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/System.php',\n        'PHPUnit\\\\Event\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 111,
                "context": "Telemetry/System.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\SystemGarbageCollectorStatusProvider' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/SystemGarbageCollectorStatusProvider.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 112,
                "context": "ystemGarbageCollectorStatusProvider.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\SystemMemoryMeter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/SystemMemoryMeter.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 113,
                "context": "ent/Value/Telemetry/SystemMemoryMeter.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\SystemStopWatch' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/SystemStopWatch.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 114,
                "context": "e/Telemetry/SystemStopWatch.php',\n        'PHPUnit\\\\Event\\\\Telemetry\\\\SystemStopWatchWithOffset' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Telemetry/SystemStopWatchWithOffset.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 115,
                "context": "lemetry/SystemStopWatchWithOffset.php',\n        'PHPUnit\\\\Event\\\\TestData\\\\DataFromDataProvider' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestData/DataFromDataProvider.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 116,
                "context": "t/TestData/DataFromDataProvider.php',\n        'PHPUnit\\\\Event\\\\TestData\\\\DataFromTestDependency' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestData/DataFromTestDependency.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 117,
                "context": "aFromTestDependency.php',\n        'PHPUnit\\\\Event\\\\TestData\\\\NoDataSetFromDataProviderException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/NoDataSetFromDataProviderException.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 118,
                "context": "/Exception/NoDataSetFromDataProviderException.php',\n        'PHPUnit\\\\Event\\\\TestData\\\\TestData' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestData/TestData.php',\n        'PHPUnit\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 119,
                "context": "/Event/Value/Test/TestData/TestData.php',\n        'PHPUnit\\\\Event\\\\TestData\\\\TestDataCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestData/TestDataCollection.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 120,
                "context": "TestData/TestDataCollection.php',\n        'PHPUnit\\\\Event\\\\TestData\\\\TestDataCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/Test/TestData/TestDataCollectionIterator.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 121,
                "context": "estData/TestDataCollectionIterator.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\BootstrapFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/BootstrapFinished.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 122,
                "context": "Runner/BootstrapFinished.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\BootstrapFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/BootstrapFinishedSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 123,
                "context": "ner/BootstrapFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ChildProcessFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ChildProcessFinished.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 124,
                "context": "/ChildProcessFinished.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ChildProcessFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ChildProcessFinishedSubscriber.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 125,
                "context": "r/ChildProcessFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ChildProcessStarted' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ChildProcessStarted.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 126,
                "context": "er/ChildProcessStarted.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ChildProcessStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ChildProcessStartedSubscriber.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 127,
                "context": "/TestRunner/ChildProcessStartedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\Configured' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/Configured.php',\n        'PHPUnit\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 128,
                "context": "nt/Events/TestRunner/Configured.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ConfiguredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ConfiguredSubscriber.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 129,
                "context": "TestRunner/ConfiguredSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\DeprecationTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/DeprecationTriggered.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 130,
                "context": "/DeprecationTriggered.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\DeprecationTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/DeprecationTriggeredSubscriber.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 131,
                "context": "ner/DeprecationTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\EventFacadeSealed' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/EventFacadeSealed.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 132,
                "context": "Runner/EventFacadeSealed.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\EventFacadeSealedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/EventFacadeSealedSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 133,
                "context": "tRunner/EventFacadeSealedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExecutionAborted' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExecutionAborted.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 134,
                "context": "stRunner/ExecutionAborted.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExecutionAbortedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExecutionAbortedSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 135,
                "context": "tRunner/ExecutionAbortedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExecutionFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExecutionFinished.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 136,
                "context": "Runner/ExecutionFinished.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExecutionFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExecutionFinishedSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 137,
                "context": "tRunner/ExecutionFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExecutionStarted' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExecutionStarted.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 138,
                "context": "stRunner/ExecutionStarted.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExecutionStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExecutionStartedSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 139,
                "context": "ner/ExecutionStartedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExtensionBootstrapped' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExtensionBootstrapped.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 140,
                "context": "xtensionBootstrapped.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExtensionBootstrappedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExtensionBootstrappedSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 141,
                "context": "ensionBootstrappedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExtensionLoadedFromPhar' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExtensionLoadedFromPhar.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 142,
                "context": "sionLoadedFromPhar.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\ExtensionLoadedFromPharSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/ExtensionLoadedFromPharSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 143,
                "context": "estRunner/ExtensionLoadedFromPharSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\Finished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/Finished.php',\n        'PHPUnit\\\\Eve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 144,
                "context": "/Event/Events/TestRunner/Finished.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\FinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/FinishedSubscriber.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 145,
                "context": "tRunner/FinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\GarbageCollectionDisabled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/GarbageCollectionDisabled.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 146,
                "context": "llectionDisabled.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\GarbageCollectionDisabledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/GarbageCollectionDisabledSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 147,
                "context": "ollectionDisabledSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\GarbageCollectionEnabled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/GarbageCollectionEnabled.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 148,
                "context": "CollectionEnabled.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\GarbageCollectionEnabledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/GarbageCollectionEnabledSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 149,
                "context": "llectionEnabledSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\GarbageCollectionTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/GarbageCollectionTriggered.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 150,
                "context": "ectionTriggered.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\GarbageCollectionTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/GarbageCollectionTriggeredSubscriber"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 151,
                "context": "GarbageCollectionTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\NoticeTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/NoticeTriggered.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 152,
                "context": "TestRunner/NoticeTriggered.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\NoticeTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/NoticeTriggeredSubscriber.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 153,
                "context": "/Events/TestRunner/NoticeTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\Started' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/Started.php',\n        'PHPUnit\\\\Even"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 154,
                "context": "rc/Event/Events/TestRunner/Started.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\StartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/StartedSubscriber.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 155,
                "context": "rtedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\StaticAnalysisForCodeCoverageFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/StaticAnalysisForCodeCoverageFinishe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 156,
                "context": "shed.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\StaticAnalysisForCodeCoverageFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/StaticAnalysisForCodeCoverageFinishe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 157,
                "context": "ishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\StaticAnalysisForCodeCoverageStarted' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/StaticAnalysisForCodeCoverageStarted"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 158,
                "context": "arted.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\StaticAnalysisForCodeCoverageStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/StaticAnalysisForCodeCoverageStarted"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 159,
                "context": "sisForCodeCoverageStartedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\WarningTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/WarningTriggered.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 160,
                "context": "stRunner/WarningTriggered.php',\n        'PHPUnit\\\\Event\\\\TestRunner\\\\WarningTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestRunner/WarningTriggeredSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 161,
                "context": "Events/TestRunner/WarningTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\Filtered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/Filtered.php',\n        'PHPUnit\\\\Even"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 162,
                "context": "rc/Event/Events/TestSuite/Filtered.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\FilteredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/FilteredSubscriber.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 163,
                "context": "rc/Event/Events/TestSuite/FilteredSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\Finished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/Finished.php',\n        'PHPUnit\\\\Even"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 164,
                "context": "rc/Event/Events/TestSuite/Finished.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\FinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/FinishedSubscriber.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 165,
                "context": "/src/Event/Events/TestSuite/FinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\Loaded' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/Loaded.php',\n        'PHPUnit\\\\Event\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 166,
                "context": "it/src/Event/Events/TestSuite/Loaded.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\LoadedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/LoadedSubscriber.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 167,
                "context": "t/src/Event/Events/TestSuite/LoadedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\Skipped' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/Skipped.php',\n        'PHPUnit\\\\Event"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 168,
                "context": "/src/Event/Events/TestSuite/Skipped.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\SkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/SkippedSubscriber.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 169,
                "context": "t/src/Event/Events/TestSuite/SkippedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\Sorted' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/Sorted.php',\n        'PHPUnit\\\\Event\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 170,
                "context": "it/src/Event/Events/TestSuite/Sorted.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\SortedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/SortedSubscriber.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 171,
                "context": "t/src/Event/Events/TestSuite/SortedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\Started' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/Started.php',\n        'PHPUnit\\\\Event"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 172,
                "context": "/src/Event/Events/TestSuite/Started.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\StartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/TestSuite/StartedSubscriber.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 173,
                "context": "rc/Event/Events/TestSuite/StartedSubscriber.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\TestSuite' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/TestSuite/TestSuite.php',\n        'PHPUnit\\\\Even"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 174,
                "context": "/src/Event/Value/TestSuite/TestSuite.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\TestSuiteBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/TestSuite/TestSuiteBuilder.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 175,
                "context": "alue/TestSuite/TestSuiteBuilder.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\TestSuiteForTestClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/TestSuite/TestSuiteForTestClass.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 176,
                "context": "teForTestClass.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\TestSuiteForTestMethodWithDataProvider' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/TestSuite/TestSuiteForTestMethodWithDataProvider"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 177,
                "context": "tSuiteForTestMethodWithDataProvider.php',\n        'PHPUnit\\\\Event\\\\TestSuite\\\\TestSuiteWithName' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Value/TestSuite/TestSuiteWithName.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 178,
                "context": "alue/TestSuite/TestSuiteWithName.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterLastTestMethodCalled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodCalled.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 179,
                "context": "erLastTestMethodCalled.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterLastTestMethodCalledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodCalledSubscr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 180,
                "context": "rLastTestMethodCalledSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterLastTestMethodErrored' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodErrored.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 181,
                "context": "LastTestMethodErrored.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterLastTestMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodErroredSubsc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 182,
                "context": "astTestMethodErroredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterLastTestMethodFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodFinished.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 183,
                "context": "stTestMethodFinished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterLastTestMethodFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodFinishedSubs"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 184,
                "context": "fterLastTestMethodFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterTestMethodCalled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodCalled.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 185,
                "context": "thod/AfterTestMethodCalled.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterTestMethodCalledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodCalledSubscriber"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 186,
                "context": "hod/AfterTestMethodCalledSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterTestMethodErrored' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodErrored.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 187,
                "context": "od/AfterTestMethodErrored.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterTestMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodErroredSubscribe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 188,
                "context": "d/AfterTestMethodErroredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterTestMethodFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodFinished.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 189,
                "context": "/AfterTestMethodFinished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\AfterTestMethodFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodFinishedSubscrib"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 190,
                "context": "erTestMethodFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeFirstTestMethodCalled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodCalled.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 191,
                "context": "irstTestMethodCalled.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeFirstTestMethodCalledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodCalledSubs"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 192,
                "context": "rstTestMethodCalledSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeFirstTestMethodErrored' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodErrored.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 193,
                "context": "stTestMethodErrored.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeFirstTestMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodErroredSub"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 194,
                "context": "tTestMethodErroredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeFirstTestMethodFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodFinished.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 195,
                "context": "TestMethodFinished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeFirstTestMethodFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodFinishedSu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 196,
                "context": "reFirstTestMethodFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeTestMethodCalled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodCalled.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 197,
                "context": "od/BeforeTestMethodCalled.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeTestMethodCalledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodCalledSubscribe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 198,
                "context": "d/BeforeTestMethodCalledSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeTestMethodErrored' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodErrored.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 199,
                "context": "/BeforeTestMethodErrored.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeTestMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodErroredSubscrib"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 200,
                "context": "BeforeTestMethodErroredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeTestMethodFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodFinished.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 201,
                "context": "eforeTestMethodFinished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\BeforeTestMethodFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodFinishedSubscri"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 202,
                "context": "od/BeforeTestMethodFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\ComparatorRegistered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/ComparatorRegistered.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 203,
                "context": "s/Test/ComparatorRegistered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\ComparatorRegisteredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/ComparatorRegisteredSubscriber.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 204,
                "context": "Events/Test/ComparatorRegisteredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\ConsideredRisky' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/ConsideredRisky.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 205,
                "context": "vents/Test/Issue/ConsideredRisky.php',\n        'PHPUnit\\\\Event\\\\Test\\\\ConsideredRiskySubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/ConsideredRiskySubscriber.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 206,
                "context": "t/Issue/ConsideredRiskySubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\DataProviderMethodCalled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/DataProviderMethodCalled.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 207,
                "context": "ataProviderMethodCalled.php',\n        'PHPUnit\\\\Event\\\\Test\\\\DataProviderMethodCalledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/DataProviderMethodCalledSubscrib"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 208,
                "context": "aProviderMethodCalledSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\DataProviderMethodFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/DataProviderMethodFinished.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 209,
                "context": "roviderMethodFinished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\DataProviderMethodFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/DataProviderMethodFinishedSubscr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 210,
                "context": "/DataProviderMethodFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\DeprecationTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/DeprecationTriggered.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 211,
                "context": "/Issue/DeprecationTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\DeprecationTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/DeprecationTriggeredSubscriber.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 212,
                "context": "s/Test/Issue/DeprecationTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\ErrorTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/ErrorTriggered.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 213,
                "context": "/Events/Test/Issue/ErrorTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\ErrorTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/ErrorTriggeredSubscriber.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 214,
                "context": "c/Event/Events/Test/Issue/ErrorTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\Errored' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/Errored.php',\n        'PHPUnit\\\\Ev"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 215,
                "context": "it/src/Event/Events/Test/Outcome/Errored.php',\n        'PHPUnit\\\\Event\\\\Test\\\\ErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/ErroredSubscriber.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 216,
                "context": "nit/src/Event/Events/Test/Outcome/ErroredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\Failed' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/Failed.php',\n        'PHPUnit\\\\Eve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 217,
                "context": "unit/src/Event/Events/Test/Outcome/Failed.php',\n        'PHPUnit\\\\Event\\\\Test\\\\FailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/FailedSubscriber.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 218,
                "context": "it/src/Event/Events/Test/Outcome/FailedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\Finished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/Finished.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 219,
                "context": "rc/Event/Events/Test/Lifecycle/Finished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\FinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/FinishedSubscriber.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 220,
                "context": "/Events/Test/Lifecycle/FinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\MarkedIncomplete' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/MarkedIncomplete.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 221,
                "context": "s/Test/Outcome/MarkedIncomplete.php',\n        'PHPUnit\\\\Event\\\\Test\\\\MarkedIncompleteSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/MarkedIncompleteSubscriber.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 222,
                "context": "/Test/Outcome/MarkedIncompleteSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\MockObjectCreated' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/MockObjectCreated.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 223,
                "context": "t/TestDouble/MockObjectCreated.php',\n        'PHPUnit\\\\Event\\\\Test\\\\MockObjectCreatedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/MockObjectCreatedSubscriber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 224,
                "context": "tedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\MockObjectForIntersectionOfInterfacesCreated' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/MockObjectForIntersectionOfInte"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 225,
                "context": "ted.php',\n        'PHPUnit\\\\Event\\\\Test\\\\MockObjectForIntersectionOfInterfacesCreatedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/MockObjectForIntersectionOfInte"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 226,
                "context": "OfInterfacesCreatedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\NoComparisonFailureException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/NoComparisonFailureException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 227,
                "context": "ent/Exception/NoComparisonFailureException.php',\n        'PHPUnit\\\\Event\\\\Test\\\\NoticeTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/NoticeTriggered.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 228,
                "context": "vents/Test/Issue/NoticeTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\NoticeTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/NoticeTriggeredSubscriber.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 229,
                "context": "t/Issue/NoticeTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PartialMockObjectCreated' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/PartialMockObjectCreated.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 230,
                "context": "artialMockObjectCreated.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PartialMockObjectCreatedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/PartialMockObjectCreatedSubscri"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 231,
                "context": "/Test/TestDouble/PartialMockObjectCreatedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\Passed' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/Passed.php',\n        'PHPUnit\\\\Eve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 232,
                "context": "unit/src/Event/Events/Test/Outcome/Passed.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PassedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/PassedSubscriber.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 233,
                "context": "ents/Test/Outcome/PassedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpDeprecationTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpDeprecationTriggered.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 234,
                "context": "/PhpDeprecationTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpDeprecationTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpDeprecationTriggeredSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 235,
                "context": "Issue/PhpDeprecationTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpNoticeTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpNoticeTriggered.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 236,
                "context": "Test/Issue/PhpNoticeTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpNoticeTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpNoticeTriggeredSubscriber.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 237,
                "context": "est/Issue/PhpNoticeTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpWarningTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpWarningTriggered.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 238,
                "context": "st/Issue/PhpWarningTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpWarningTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpWarningTriggeredSubscriber.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 239,
                "context": "/PhpWarningTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitDeprecationTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitDeprecationTriggered.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 240,
                "context": "DeprecationTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitDeprecationTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitDeprecationTriggeredSubscribe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 241,
                "context": "hpunitDeprecationTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitErrorTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitErrorTriggered.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 242,
                "context": "ssue/PhpunitErrorTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitErrorTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitErrorTriggeredSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 243,
                "context": "sue/PhpunitErrorTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitNoticeTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitNoticeTriggered.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 244,
                "context": "ue/PhpunitNoticeTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitNoticeTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitNoticeTriggeredSubscriber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 245,
                "context": "e/PhpunitNoticeTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitWarningTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitWarningTriggered.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 246,
                "context": "/PhpunitWarningTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PhpunitWarningTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitWarningTriggeredSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 247,
                "context": "ssue/PhpunitWarningTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PostConditionCalled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionCalled.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 248,
                "context": "okMethod/PostConditionCalled.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PostConditionCalledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionCalledSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 249,
                "context": "kMethod/PostConditionCalledSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PostConditionErrored' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionErrored.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 250,
                "context": "Method/PostConditionErrored.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PostConditionErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionErroredSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 251,
                "context": "ethod/PostConditionErroredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PostConditionFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionFinished.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 252,
                "context": "thod/PostConditionFinished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PostConditionFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionFinishedSubscriber"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 253,
                "context": "kMethod/PostConditionFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreConditionCalled' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionCalled.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 254,
                "context": "HookMethod/PreConditionCalled.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreConditionCalledSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionCalledSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 255,
                "context": "ookMethod/PreConditionCalledSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreConditionErrored' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionErrored.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 256,
                "context": "okMethod/PreConditionErrored.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreConditionErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionErroredSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 257,
                "context": "kMethod/PreConditionErroredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreConditionFinished' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionFinished.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 258,
                "context": "Method/PreConditionFinished.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreConditionFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionFinishedSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 259,
                "context": "ookMethod/PreConditionFinishedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreparationFailed' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/PreparationFailed.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 260,
                "context": "st/Lifecycle/PreparationFailed.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreparationFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/PreparationFailedSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 261,
                "context": "t/Lifecycle/PreparationFailedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreparationStarted' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/PreparationStarted.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 262,
                "context": "/Lifecycle/PreparationStarted.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreparationStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/PreparationStartedSubscriber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 263,
                "context": "vents/Test/Lifecycle/PreparationStartedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\Prepared' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/Prepared.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 264,
                "context": "rc/Event/Events/Test/Lifecycle/Prepared.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Lifecycle/PreparedSubscriber.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 265,
                "context": "/Test/Lifecycle/PreparedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PrintedUnexpectedOutput' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/PrintedUnexpectedOutput.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 266,
                "context": "/PrintedUnexpectedOutput.php',\n        'PHPUnit\\\\Event\\\\Test\\\\PrintedUnexpectedOutputSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/PrintedUnexpectedOutputSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 267,
                "context": "vent/Events/Test/PrintedUnexpectedOutputSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\Skipped' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/Skipped.php',\n        'PHPUnit\\\\Ev"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 268,
                "context": "it/src/Event/Events/Test/Outcome/Skipped.php',\n        'PHPUnit\\\\Event\\\\Test\\\\SkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Outcome/SkippedSubscriber.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 269,
                "context": "vent/Events/Test/Outcome/SkippedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\TestStubCreated' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/TestStubCreated.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 270,
                "context": "/Test/TestDouble/TestStubCreated.php',\n        'PHPUnit\\\\Event\\\\Test\\\\TestStubCreatedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/TestStubCreatedSubscriber.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 271,
                "context": "eatedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\TestStubForIntersectionOfInterfacesCreated' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/TestStubForIntersectionOfInterf"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 272,
                "context": "eated.php',\n        'PHPUnit\\\\Event\\\\Test\\\\TestStubForIntersectionOfInterfacesCreatedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/TestDouble/TestStubForIntersectionOfInterf"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 273,
                "context": "IntersectionOfInterfacesCreatedSubscriber.php',\n        'PHPUnit\\\\Event\\\\Test\\\\WarningTriggered' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/WarningTriggered.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 274,
                "context": "nts/Test/Issue/WarningTriggered.php',\n        'PHPUnit\\\\Event\\\\Test\\\\WarningTriggeredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Events/Test/Issue/WarningTriggeredSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 275,
                "context": "vent/Events/Test/Issue/WarningTriggeredSubscriber.php',\n        'PHPUnit\\\\Event\\\\Tracer\\\\Tracer' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Tracer.php',\n        'PHPUnit\\\\Event\\\\TypeMap' => __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 276,
                "context": " => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Tracer.php',\n        'PHPUnit\\\\Event\\\\TypeMap' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/TypeMap.php',\n        'PHPUnit\\\\Event\\\\UnknownEventExc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 277,
                "context": "/..' . '/phpunit/phpunit/src/Event/TypeMap.php',\n        'PHPUnit\\\\Event\\\\UnknownEventException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/UnknownEventException.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 278,
                "context": "/Event/Exception/UnknownEventException.php',\n        'PHPUnit\\\\Event\\\\UnknownEventTypeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/UnknownEventTypeException.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 279,
                "context": "t/Exception/UnknownEventTypeException.php',\n        'PHPUnit\\\\Event\\\\UnknownSubscriberException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/UnknownSubscriberException.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 280,
                "context": "eption/UnknownSubscriberException.php',\n        'PHPUnit\\\\Event\\\\UnknownSubscriberTypeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Event/Exception/UnknownSubscriberTypeException.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 281,
                "context": "it/phpunit/src/Event/Exception/UnknownSubscriberTypeException.php',\n        'PHPUnit\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Exception.php',\n        'PHPUnit\\\\Framework\\\\ActualValueIsNo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 282,
                "context": "unit/phpunit/src/Exception.php',\n        'PHPUnit\\\\Framework\\\\ActualValueIsNotAnObjectException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ActualValueIsNotAnObjectExc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 283,
                "context": "eption/ObjectEquals/ActualValueIsNotAnObjectException.php',\n        'PHPUnit\\\\Framework\\\\Assert' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Assert.php',\n        'PHPUnit\\\\Framework\\\\Assertio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 284,
                "context": " '/phpunit/phpunit/src/Framework/Assert.php',\n        'PHPUnit\\\\Framework\\\\AssertionFailedError' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/AssertionFailedError.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 285,
                "context": "c/Framework/Exception/AssertionFailedError.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\After' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/After.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 286,
                "context": "hpunit/src/Framework/Attributes/After.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\AfterClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/AfterClass.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 287,
                "context": "rc/Framework/Attributes/AfterClass.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\BackupGlobals' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/BackupGlobals.php',\n        'PHPUnit\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 288,
                "context": "/Attributes/BackupGlobals.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\BackupStaticProperties' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/BackupStaticProperties.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 289,
                "context": "amework/Attributes/BackupStaticProperties.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Before' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Before.php',\n        'PHPUnit\\\\Framewor"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 290,
                "context": "unit/src/Framework/Attributes/Before.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\BeforeClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/BeforeClass.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 291,
                "context": "src/Framework/Attributes/BeforeClass.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversClass.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 292,
                "context": "ributes/CoversClass.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversClassesThatExtendClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversClassesThatExtendClass.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 293,
                "context": "tExtendClass.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversClassesThatImplementInterface' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversClassesThatImplementInterface.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 294,
                "context": "versClassesThatImplementInterface.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversFunction' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversFunction.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 295,
                "context": "Framework/Attributes/CoversFunction.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversMethod.php',\n        'PHPUnit\\\\Fr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 296,
                "context": "ramework/Attributes/CoversMethod.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversNamespace' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversNamespace.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 297,
                "context": "amework/Attributes/CoversNamespace.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversNothing' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversNothing.php',\n        'PHPUnit\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 298,
                "context": "c/Framework/Attributes/CoversNothing.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\CoversTrait' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/CoversTrait.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 299,
                "context": "rc/Framework/Attributes/CoversTrait.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DataProvider' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DataProvider.php',\n        'PHPUnit\\\\Fr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 300,
                "context": "ork/Attributes/DataProvider.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DataProviderExternal' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DataProviderExternal.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 301,
                "context": "ramework/Attributes/DataProviderExternal.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Depends' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Depends.php',\n        'PHPUnit\\\\Framewo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 302,
                "context": "src/Framework/Attributes/Depends.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsExternal' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsExternal.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 303,
                "context": "es/DependsExternal.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsExternalUsingDeepClone' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsExternalUsingDeepClone.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 304,
                "context": "lUsingDeepClone.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsExternalUsingShallowClone' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsExternalUsingShallowClone.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 305,
                "context": "/DependsExternalUsingShallowClone.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsOnClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsOnClass.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 306,
                "context": "utes/DependsOnClass.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsOnClassUsingDeepClone' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsOnClassUsingDeepClone.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 307,
                "context": "ssUsingDeepClone.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsOnClassUsingShallowClone' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsOnClassUsingShallowClone.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 308,
                "context": "dsOnClassUsingShallowClone.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsUsingDeepClone' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsUsingDeepClone.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 309,
                "context": "s/DependsUsingDeepClone.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DependsUsingShallowClone' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DependsUsingShallowClone.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 310,
                "context": "Clone.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DisableReturnValueGenerationForTestDoubles' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DisableReturnValueGenerationForTestDoub"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 311,
                "context": "enerationForTestDoubles.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\DoesNotPerformAssertions' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/DoesNotPerformAssertions.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 312,
                "context": "erformAssertions.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\ExcludeGlobalVariableFromBackup' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/ExcludeGlobalVariableFromBackup.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 313,
                "context": "riableFromBackup.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\ExcludeStaticPropertyFromBackup' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/ExcludeStaticPropertyFromBackup.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 314,
                "context": "Attributes/ExcludeStaticPropertyFromBackup.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Group' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Group.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 315,
                "context": "rc/Framework/Attributes/Group.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\IgnoreDeprecations' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/IgnoreDeprecations.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 316,
                "context": "tes/IgnoreDeprecations.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\IgnorePhpunitDeprecations' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/IgnorePhpunitDeprecations.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 317,
                "context": "ework/Attributes/IgnorePhpunitDeprecations.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Large' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Large.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 318,
                "context": "it/phpunit/src/Framework/Attributes/Large.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Medium' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Medium.php',\n        'PHPUnit\\\\Framewor"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 319,
                "context": "it/src/Framework/Attributes/Medium.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\PostCondition' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/PostCondition.php',\n        'PHPUnit\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 320,
                "context": "/Framework/Attributes/PostCondition.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\PreCondition' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/PreCondition.php',\n        'PHPUnit\\\\Fr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 321,
                "context": "work/Attributes/PreCondition.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\PreserveGlobalState' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/PreserveGlobalState.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 322,
                "context": "/PreserveGlobalState.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresEnvironmentVariable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresEnvironmentVariable.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 323,
                "context": "tes/RequiresEnvironmentVariable.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresFunction' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresFunction.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 324,
                "context": "ework/Attributes/RequiresFunction.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresMethod.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 325,
                "context": "ttributes/RequiresMethod.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresOperatingSystem' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresOperatingSystem.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 326,
                "context": "resOperatingSystem.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresOperatingSystemFamily' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresOperatingSystemFamily.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 327,
                "context": "ibutes/RequiresOperatingSystemFamily.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresPhp' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresPhp.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 328,
                "context": "work/Attributes/RequiresPhp.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresPhpExtension' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresPhpExtension.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 329,
                "context": "/Attributes/RequiresPhpExtension.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresPhpunit' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresPhpunit.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 330,
                "context": "ributes/RequiresPhpunit.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresPhpunitExtension' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresPhpunitExtension.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 331,
                "context": "ributes/RequiresPhpunitExtension.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RequiresSetting' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RequiresSetting.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 332,
                "context": "ibutes/RequiresSetting.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RunClassInSeparateProcess' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RunClassInSeparateProcess.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 333,
                "context": "s/RunClassInSeparateProcess.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RunInSeparateProcess' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RunInSeparateProcess.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 334,
                "context": "RunInSeparateProcess.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\RunTestsInSeparateProcesses' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/RunTestsInSeparateProcesses.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 335,
                "context": "ork/Attributes/RunTestsInSeparateProcesses.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Small' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Small.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 336,
                "context": "unit/phpunit/src/Framework/Attributes/Small.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Test' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Test.php',\n        'PHPUnit\\\\Framework\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 337,
                "context": "it/phpunit/src/Framework/Attributes/Test.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\TestDox' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/TestDox.php',\n        'PHPUnit\\\\Framewo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 338,
                "context": "hpunit/src/Framework/Attributes/TestDox.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\TestWith' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/TestWith.php',\n        'PHPUnit\\\\Framew"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 339,
                "context": "t/src/Framework/Attributes/TestWith.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\TestWithJson' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/TestWithJson.php',\n        'PHPUnit\\\\Fr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 340,
                "context": "nit/src/Framework/Attributes/TestWithJson.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\Ticket' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/Ticket.php',\n        'PHPUnit\\\\Framewor"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 341,
                "context": "hpunit/src/Framework/Attributes/Ticket.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\UsesClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/UsesClass.php',\n        'PHPUnit\\\\Frame"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 342,
                "context": "/Attributes/UsesClass.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\UsesClassesThatExtendClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/UsesClassesThatExtendClass.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 343,
                "context": "hatExtendClass.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\UsesClassesThatImplementInterface' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/UsesClassesThatImplementInterface.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 344,
                "context": "s/UsesClassesThatImplementInterface.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\UsesFunction' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/UsesFunction.php',\n        'PHPUnit\\\\Fr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 345,
                "context": "src/Framework/Attributes/UsesFunction.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\UsesMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/UsesMethod.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 346,
                "context": "rc/Framework/Attributes/UsesMethod.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\UsesNamespace' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/UsesNamespace.php',\n        'PHPUnit\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 347,
                "context": "src/Framework/Attributes/UsesNamespace.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\UsesTrait' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/UsesTrait.php',\n        'PHPUnit\\\\Frame"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 348,
                "context": "ork/Attributes/UsesTrait.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\WithEnvironmentVariable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/WithEnvironmentVariable.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 349,
                "context": "utes/WithEnvironmentVariable.php',\n        'PHPUnit\\\\Framework\\\\Attributes\\\\WithoutErrorHandler' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Attributes/WithoutErrorHandler.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 350,
                "context": "k/Attributes/WithoutErrorHandler.php',\n        'PHPUnit\\\\Framework\\\\ChildProcessResultProcessor' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestRunner/ChildProcessResultProcessor.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 351,
                "context": "rocessor.php',\n        'PHPUnit\\\\Framework\\\\ComparisonMethodDoesNotAcceptParameterTypeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotAcce"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 352,
                "context": "eption.php',\n        'PHPUnit\\\\Framework\\\\ComparisonMethodDoesNotDeclareBoolReturnTypeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotDecl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 353,
                "context": "n.php',\n        'PHPUnit\\\\Framework\\\\ComparisonMethodDoesNotDeclareExactlyOneParameterException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotDecl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 354,
                "context": "ception.php',\n        'PHPUnit\\\\Framework\\\\ComparisonMethodDoesNotDeclareParameterTypeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotDecl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 355,
                "context": "ParameterTypeException.php',\n        'PHPUnit\\\\Framework\\\\ComparisonMethodDoesNotExistException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotExis"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 356,
                "context": "omparisonMethodDoesNotExistException.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\ArrayHasKey' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Traversable/ArrayHasKey.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 357,
                "context": "onstraint/Traversable/ArrayHasKey.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\BinaryOperator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Operator/BinaryOperator.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 358,
                "context": "work/Constraint/Operator/BinaryOperator.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\Callback' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Callback.php',\n        'PHPUnit\\\\Framew"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 359,
                "context": "nit/src/Framework/Constraint/Callback.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\Constraint' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Constraint.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 360,
                "context": "hpunit/src/Framework/Constraint/Constraint.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\Count' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Cardinality/Count.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 361,
                "context": "ork/Constraint/Cardinality/Count.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\DirectoryExists' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Filesystem/DirectoryExists.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 362,
                "context": "/Constraint/Filesystem/DirectoryExists.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Exception/Exception.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 363,
                "context": "ork/Constraint/Exception/Exception.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\ExceptionCode' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Exception/ExceptionCode.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 364,
                "context": "ption/ExceptionCode.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\ExceptionMessageIsOrContains' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Exception/ExceptionMessageIsOrContains."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 365,
                "context": "ontains.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\ExceptionMessageMatchesRegularExpression' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Exception/ExceptionMessageMatchesRegula"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 366,
                "context": "eptionMessageMatchesRegularExpression.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\FileExists' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Filesystem/FileExists.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 367,
                "context": "ork/Constraint/Filesystem/FileExists.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\GreaterThan' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Cardinality/GreaterThan.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 368,
                "context": "rk/Constraint/Cardinality/GreaterThan.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsAnything' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/IsAnything.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 369,
                "context": "unit/src/Framework/Constraint/IsAnything.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsEmpty' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Cardinality/IsEmpty.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 370,
                "context": "Framework/Constraint/Cardinality/IsEmpty.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsEqual' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqual.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 371,
                "context": "onstraint/Equality/IsEqual.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsEqualCanonicalizing' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqualCanonicalizing.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 372,
                "context": "uality/IsEqualCanonicalizing.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsEqualIgnoringCase' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqualIgnoringCase.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 373,
                "context": "nt/Equality/IsEqualIgnoringCase.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsEqualWithDelta' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqualWithDelta.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 374,
                "context": "ork/Constraint/Equality/IsEqualWithDelta.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsFalse' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Boolean/IsFalse.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 375,
                "context": "rc/Framework/Constraint/Boolean/IsFalse.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsFinite' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Math/IsFinite.php',\n        'PHPUnit\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 376,
                "context": "c/Framework/Constraint/Math/IsFinite.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsIdentical' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/IsIdentical.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 377,
                "context": "/src/Framework/Constraint/IsIdentical.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsInfinite' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Math/IsInfinite.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 378,
                "context": "ramework/Constraint/Math/IsInfinite.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsInstanceOf' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Type/IsInstanceOf.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 379,
                "context": "rc/Framework/Constraint/Type/IsInstanceOf.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsJson' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/String/IsJson.php',\n        'PHPUnit\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 380,
                "context": "it/src/Framework/Constraint/String/IsJson.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsList' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Traversable/IsList.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 381,
                "context": "rc/Framework/Constraint/Traversable/IsList.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsNan' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Math/IsNan.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 382,
                "context": "punit/src/Framework/Constraint/Math/IsNan.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsNull' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Type/IsNull.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 383,
                "context": "/src/Framework/Constraint/Type/IsNull.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsReadable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Filesystem/IsReadable.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 384,
                "context": "ramework/Constraint/Filesystem/IsReadable.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsTrue' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Boolean/IsTrue.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 385,
                "context": "t/src/Framework/Constraint/Boolean/IsTrue.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsType' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Type/IsType.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 386,
                "context": "/src/Framework/Constraint/Type/IsType.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\IsWritable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Filesystem/IsWritable.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 387,
                "context": "ork/Constraint/Filesystem/IsWritable.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\JsonMatches' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/JsonMatches.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 388,
                "context": "it/src/Framework/Constraint/JsonMatches.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\LessThan' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Cardinality/LessThan.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 389,
                "context": "ework/Constraint/Cardinality/LessThan.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\LogicalAnd' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Operator/LogicalAnd.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 390,
                "context": "mework/Constraint/Operator/LogicalAnd.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\LogicalNot' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Operator/LogicalNot.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 391,
                "context": "amework/Constraint/Operator/LogicalNot.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\LogicalOr' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Operator/LogicalOr.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 392,
                "context": "amework/Constraint/Operator/LogicalOr.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\LogicalXor' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Operator/LogicalXor.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 393,
                "context": "work/Constraint/Operator/LogicalXor.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\ObjectEquals' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Object/ObjectEquals.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 394,
                "context": "Constraint/Object/ObjectEquals.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\ObjectHasProperty' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Object/ObjectHasProperty.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 395,
                "context": "ork/Constraint/Object/ObjectHasProperty.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\Operator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Operator/Operator.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 396,
                "context": "k/Constraint/Operator/Operator.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\RegularExpression' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/String/RegularExpression.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 397,
                "context": "ork/Constraint/String/RegularExpression.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\SameSize' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Cardinality/SameSize.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 398,
                "context": "k/Constraint/Cardinality/SameSize.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\StringContains' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/String/StringContains.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 399,
                "context": "/Constraint/String/StringContains.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\StringEndsWith' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/String/StringEndsWith.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 400,
                "context": "ngEndsWith.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\StringEqualsStringIgnoringLineEndings' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/String/StringEqualsStringIgnoringLineEn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 401,
                "context": "noringLineEndings.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\StringMatchesFormatDescription' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/String/StringMatchesFormatDescription.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 402,
                "context": "/StringMatchesFormatDescription.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\StringStartsWith' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/String/StringStartsWith.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 403,
                "context": "aint/String/StringStartsWith.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\TraversableContains' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Traversable/TraversableContains.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 404,
                "context": "ble/TraversableContains.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\TraversableContainsEqual' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Traversable/TraversableContainsEqual.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 405,
                "context": "rsableContainsEqual.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\TraversableContainsIdentical' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Traversable/TraversableContainsIdentica"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 406,
                "context": "ersableContainsIdentical.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\TraversableContainsOnly' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Traversable/TraversableContainsOnly.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 407,
                "context": "raversable/TraversableContainsOnly.php',\n        'PHPUnit\\\\Framework\\\\Constraint\\\\UnaryOperator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Constraint/Operator/UnaryOperator.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 408,
                "context": "work/Constraint/Operator/UnaryOperator.php',\n        'PHPUnit\\\\Framework\\\\DataProviderTestSuite' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/DataProviderTestSuite.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 409,
                "context": "nit/src/Framework/DataProviderTestSuite.php',\n        'PHPUnit\\\\Framework\\\\EmptyStringException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/EmptyStringException.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 410,
                "context": "punit/src/Framework/Exception/EmptyStringException.php',\n        'PHPUnit\\\\Framework\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/Exception.php',\n        'PHPUnit\\\\Framew"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 411,
                "context": "t/src/Framework/Exception/Exception.php',\n        'PHPUnit\\\\Framework\\\\ExecutionOrderDependency' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/ExecutionOrderDependency.php',\n        'PHPUnit\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 412,
                "context": "ramework/ExecutionOrderDependency.php',\n        'PHPUnit\\\\Framework\\\\ExpectationFailedException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ExpectationFailedException.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 413,
                "context": "on/ExpectationFailedException.php',\n        'PHPUnit\\\\Framework\\\\GeneratorNotSupportedException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/GeneratorNotSupportedException.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 414,
                "context": "work/Exception/GeneratorNotSupportedException.php',\n        'PHPUnit\\\\Framework\\\\IncompleteTest' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/Incomplete/IncompleteTest.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 415,
                "context": "work/Exception/Incomplete/IncompleteTest.php',\n        'PHPUnit\\\\Framework\\\\IncompleteTestError' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/Incomplete/IncompleteTestError.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 416,
                "context": "tion/Incomplete/IncompleteTestError.php',\n        'PHPUnit\\\\Framework\\\\InvalidArgumentException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/InvalidArgumentException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 417,
                "context": "eption/InvalidArgumentException.php',\n        'PHPUnit\\\\Framework\\\\InvalidDataProviderException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/InvalidDataProviderException.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 418,
                "context": "tion/InvalidDataProviderException.php',\n        'PHPUnit\\\\Framework\\\\InvalidDependencyException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/InvalidDependencyException.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 419,
                "context": "work/Exception/InvalidDependencyException.php',\n        'PHPUnit\\\\Framework\\\\IsolatedTestRunner' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestRunner/IsolatedTestRunner.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 420,
                "context": "ork/TestRunner/IsolatedTestRunner.php',\n        'PHPUnit\\\\Framework\\\\IsolatedTestRunnerRegistry' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestRunner/IsolatedTestRunnerRegistry.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 421,
                "context": "solatedTestRunnerRegistry.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\BadMethodCallException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/BadMethodCallException.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 422,
                "context": "ethodCallException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\CannotUseOnlyMethodsException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/CannotUseOnlyMethodsException"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 423,
                "context": "CannotUseOnlyMethodsException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\ConfigurableMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/ConfigurableMethod.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 424,
                "context": "MockObject/ConfigurableMethod.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\DoubledCloneMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Api/DoubledCloneMethod.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 425,
                "context": "kObject/Runtime/Api/DoubledCloneMethod.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/Exception.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 426,
                "context": "Exception.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\ClassIsEnumerationException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/ClassIsEnumerationE"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 427,
                "context": "rationException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\ClassIsFinalException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/ClassIsFinalExcepti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 428,
                "context": "on/ClassIsFinalException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\DoubledClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/DoubledClass.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 429,
                "context": "/Generator/DoubledClass.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\DoubledMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/DoubledMethod.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 430,
                "context": "erator/DoubledMethod.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\DoubledMethodSet' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/DoubledMethodSet.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 431,
                "context": "ledMethodSet.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\DuplicateMethodException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/DuplicateMethodExce"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 432,
                "context": "on/DuplicateMethodException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/Exception.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 433,
                "context": "nerator/Exception/Exception.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\Generator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Generator.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 434,
                "context": "ct/Generator/Generator.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\HookedProperty' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/HookedProperty.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 435,
                "context": "ookedProperty.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\HookedPropertyGenerator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/HookedPropertyGenerator.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 436,
                "context": "yGenerator.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\InvalidMethodNameException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/InvalidMethodNameEx"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 437,
                "context": "eException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\MethodNamedMethodException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/MethodNamedMethodEx"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 438,
                "context": "odException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\NameAlreadyInUseException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/NameAlreadyInUseExc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 439,
                "context": "adyInUseException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\ReflectionException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/ReflectionException"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 440,
                "context": "/ReflectionException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\RuntimeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/RuntimeException.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 441,
                "context": "ption/RuntimeException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\TemplateLoader' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/TemplateLoader.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 442,
                "context": "r/TemplateLoader.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Generator\\\\UnknownTypeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Generator/Exception/UnknownTypeExceptio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 443,
                "context": "wnTypeException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\IncompatibleReturnValueException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/IncompatibleReturnValueExcept"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 444,
                "context": "tion/IncompatibleReturnValueException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Invocation' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Invocation.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 445,
                "context": "/MockObject/Runtime/Invocation.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\InvocationHandler' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/InvocationHandler.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 446,
                "context": "ject/Runtime/InvocationHandler.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\InvocationStubber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Interface/InvocationStubber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 447,
                "context": "nvocationStubber.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\InvocationStubberImplementation' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/InvocationStubberImplementation"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 448,
                "context": "bberImplementation.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MatchBuilderNotFoundException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/MatchBuilderNotFoundException"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 449,
                "context": "/Exception/MatchBuilderNotFoundException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Matcher' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Matcher.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 450,
                "context": "untime/Matcher.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MatcherAlreadyRegisteredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/MatcherAlreadyRegisteredExcep"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 451,
                "context": "ception/MatcherAlreadyRegisteredException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Method' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Api/Method.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 452,
                "context": "ime/Api/Method.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MethodCannotBeConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/MethodCannotBeConfiguredExcep"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 453,
                "context": "edException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MethodNameAlreadyConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/MethodNameAlreadyConfiguredEx"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 454,
                "context": "eAlreadyConfiguredException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MethodNameConstraint' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/MethodNameConstraint.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 455,
                "context": "dNameConstraint.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MethodNameNotConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/MethodNameNotConfiguredExcept"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 456,
                "context": "ption.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MethodParametersAlreadyConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/MethodParametersAlreadyConfig"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 457,
                "context": "ParametersAlreadyConfiguredException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MockBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/MockBuilder.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 458,
                "context": "/src/Framework/MockObject/MockBuilder.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MockObject' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Interface/MockObject.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 459,
                "context": "bject/Runtime/Interface/MockObject.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MockObjectApi' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Api/MockObjectApi.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 460,
                "context": "ect/Runtime/Api/MockObjectApi.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\MockObjectInternal' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Interface/MockObjectInternal.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 461,
                "context": "MockObjectInternal.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\NeverReturningMethodException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/NeverReturningMethodException"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 462,
                "context": "dException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\NoMoreReturnValuesConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/NoMoreReturnValuesConfiguredE"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 463,
                "context": "turnValuesConfiguredException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\ProxiedCloneMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Api/ProxiedCloneMethod.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 464,
                "context": "time/Api/ProxiedCloneMethod.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\ReturnValueGenerator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/ReturnValueGenerator.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 465,
                "context": "ValueGenerator.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\ReturnValueNotConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/ReturnValueNotConfiguredExcep"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 466,
                "context": "alueNotConfiguredException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\AnyInvokedCount' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/AnyInvokedCount.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 467,
                "context": "Runtime/Rule/AnyInvokedCount.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\AnyParameters' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/AnyParameters.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 468,
                "context": "Runtime/Rule/AnyParameters.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\InvocationOrder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvocationOrder.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 469,
                "context": "e/Rule/InvocationOrder.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\InvokedAtLeastCount' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvokedAtLeastCount.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 470,
                "context": "ule/InvokedAtLeastCount.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\InvokedAtLeastOnce' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvokedAtLeastOnce.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 471,
                "context": "Rule/InvokedAtLeastOnce.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\InvokedAtMostCount' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvokedAtMostCount.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 472,
                "context": "ntime/Rule/InvokedAtMostCount.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\InvokedCount' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvokedCount.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 473,
                "context": "bject/Runtime/Rule/InvokedCount.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\MethodName' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/MethodName.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 474,
                "context": "kObject/Runtime/Rule/MethodName.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\Parameters' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/Parameters.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 475,
                "context": "ect/Runtime/Rule/Parameters.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Rule\\\\ParametersRule' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/ParametersRule.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 476,
                "context": "ect/Runtime/Rule/ParametersRule.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\RuntimeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Exception/RuntimeException.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 477,
                "context": "eption/RuntimeException.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Runtime\\\\PropertyGetHook' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/PropertyHook/PropertyGetHook.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 478,
                "context": "opertyHook/PropertyGetHook.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Runtime\\\\PropertyHook' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/PropertyHook/PropertyHook.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 479,
                "context": "opertyHook/PropertyHook.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Runtime\\\\PropertySetHook' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/PropertyHook/PropertySetHook.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 480,
                "context": "Object/Runtime/PropertyHook/PropertySetHook.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Interface/Stub.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 481,
                "context": "mework/MockObject/Runtime/Interface/Stub.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\StubApi' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Api/StubApi.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 482,
                "context": "work/MockObject/Runtime/Api/StubApi.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\StubInternal' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Interface/StubInternal.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 483,
                "context": "me/Interface/StubInternal.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\ConsecutiveCalls' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ConsecutiveCalls.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 484,
                "context": "ct/Runtime/Stub/ConsecutiveCalls.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/Exception.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 485,
                "context": "ject/Runtime/Stub/Exception.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\ReturnArgument' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ReturnArgument.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 486,
                "context": "Runtime/Stub/ReturnArgument.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\ReturnCallback' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ReturnCallback.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 487,
                "context": "untime/Stub/ReturnCallback.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\ReturnReference' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ReturnReference.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 488,
                "context": "ct/Runtime/Stub/ReturnReference.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\ReturnSelf' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ReturnSelf.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 489,
                "context": "kObject/Runtime/Stub/ReturnSelf.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\ReturnStub' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ReturnStub.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 490,
                "context": "ect/Runtime/Stub/ReturnStub.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\ReturnValueMap' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ReturnValueMap.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 491,
                "context": "ockObject/Runtime/Stub/ReturnValueMap.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\Stub\\\\Stub' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/Stub.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 492,
                "context": "ork/MockObject/Runtime/Stub/Stub.php',\n        'PHPUnit\\\\Framework\\\\MockObject\\\\TestDoubleState' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/MockObject/Runtime/Api/TestDoubleState.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 493,
                "context": "/Framework/MockObject/Runtime/Api/TestDoubleState.php',\n        'PHPUnit\\\\Framework\\\\NativeType' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/NativeType.php',\n        'PHPUnit\\\\Framework\\\\NoCh"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 494,
                "context": "t/phpunit/src/Framework/NativeType.php',\n        'PHPUnit\\\\Framework\\\\NoChildTestSuiteException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/NoChildTestSuiteException.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 495,
                "context": "Exception/NoChildTestSuiteException.php',\n        'PHPUnit\\\\Framework\\\\PhptAssertionFailedError' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/PhptAssertionFailedError.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 496,
                "context": "Exception/PhptAssertionFailedError.php',\n        'PHPUnit\\\\Framework\\\\ProcessIsolationException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/ProcessIsolationException.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 497,
                "context": "rc/Framework/Exception/ProcessIsolationException.php',\n        'PHPUnit\\\\Framework\\\\Reorderable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Reorderable.php',\n        'PHPUnit\\\\Framework\\\\Sel"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 498,
                "context": ". '/phpunit/phpunit/src/Framework/Reorderable.php',\n        'PHPUnit\\\\Framework\\\\SelfDescribing' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/SelfDescribing.php',\n        'PHPUnit\\\\Framework\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 499,
                "context": "punit/src/Framework/SelfDescribing.php',\n        'PHPUnit\\\\Framework\\\\SeparateProcessTestRunner' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestRunner/SeparateProcessTestRunner.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 500,
                "context": "c/Framework/TestRunner/SeparateProcessTestRunner.php',\n        'PHPUnit\\\\Framework\\\\SkippedTest' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/Skipped/SkippedTest.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 501,
                "context": "ramework/Exception/Skipped/SkippedTest.php',\n        'PHPUnit\\\\Framework\\\\SkippedTestSuiteError' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/Skipped/SkippedTestSuiteError.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 502,
                "context": "on/Skipped/SkippedTestSuiteError.php',\n        'PHPUnit\\\\Framework\\\\SkippedWithMessageException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/Skipped/SkippedWithMessageException.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 503,
                "context": "Framework/Exception/Skipped/SkippedWithMessageException.php',\n        'PHPUnit\\\\Framework\\\\Test' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Test.php',\n        'PHPUnit\\\\Framework\\\\TestBuilde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 504,
                "context": "_ . '/..' . '/phpunit/phpunit/src/Framework/Test.php',\n        'PHPUnit\\\\Framework\\\\TestBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestBuilder.php',\n        'PHPUnit\\\\Framework\\\\Tes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 505,
                "context": "'/..' . '/phpunit/phpunit/src/Framework/TestBuilder.php',\n        'PHPUnit\\\\Framework\\\\TestCase' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestCase.php',\n        'PHPUnit\\\\Framework\\\\TestRu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 506,
                "context": " '/..' . '/phpunit/phpunit/src/Framework/TestCase.php',\n        'PHPUnit\\\\Framework\\\\TestRunner' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestRunner/TestRunner.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 507,
                "context": "/phpunit/src/Framework/TestRunner/TestRunner.php',\n        'PHPUnit\\\\Framework\\\\TestSize\\\\Known' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSize/Known.php',\n        'PHPUnit\\\\Framework\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 508,
                "context": "phpunit/phpunit/src/Framework/TestSize/Known.php',\n        'PHPUnit\\\\Framework\\\\TestSize\\\\Large' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSize/Large.php',\n        'PHPUnit\\\\Framework\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 509,
                "context": "hpunit/phpunit/src/Framework/TestSize/Large.php',\n        'PHPUnit\\\\Framework\\\\TestSize\\\\Medium' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSize/Medium.php',\n        'PHPUnit\\\\Framework\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 510,
                "context": "hpunit/phpunit/src/Framework/TestSize/Medium.php',\n        'PHPUnit\\\\Framework\\\\TestSize\\\\Small' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSize/Small.php',\n        'PHPUnit\\\\Framework\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 511,
                "context": "unit/phpunit/src/Framework/TestSize/Small.php',\n        'PHPUnit\\\\Framework\\\\TestSize\\\\TestSize' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSize/TestSize.php',\n        'PHPUnit\\\\Framewor"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 512,
                "context": "it/phpunit/src/Framework/TestSize/TestSize.php',\n        'PHPUnit\\\\Framework\\\\TestSize\\\\Unknown' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSize/Unknown.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 513,
                "context": "punit/src/Framework/TestSize/Unknown.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Deprecation' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Deprecation.php',\n        'PHPUnit\\\\Fra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 514,
                "context": "punit/src/Framework/TestStatus/Deprecation.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Error' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Error.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 515,
                "context": "t/phpunit/src/Framework/TestStatus/Error.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Failure' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Failure.php',\n        'PHPUnit\\\\Framewo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 516,
                "context": "unit/src/Framework/TestStatus/Failure.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Incomplete' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Incomplete.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 517,
                "context": "hpunit/src/Framework/TestStatus/Incomplete.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Known' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Known.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 518,
                "context": "it/phpunit/src/Framework/TestStatus/Known.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Notice' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Notice.php',\n        'PHPUnit\\\\Framewor"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 519,
                "context": "it/phpunit/src/Framework/TestStatus/Notice.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Risky' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Risky.php',\n        'PHPUnit\\\\Framework"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 520,
                "context": "t/phpunit/src/Framework/TestStatus/Risky.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Skipped' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Skipped.php',\n        'PHPUnit\\\\Framewo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 521,
                "context": "phpunit/src/Framework/TestStatus/Skipped.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Success' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Success.php',\n        'PHPUnit\\\\Framewo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 522,
                "context": "unit/src/Framework/TestStatus/Success.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\TestStatus' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/TestStatus.php',\n        'PHPUnit\\\\Fram"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 523,
                "context": "unit/src/Framework/TestStatus/TestStatus.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Unknown' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Unknown.php',\n        'PHPUnit\\\\Framewo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 524,
                "context": "phpunit/src/Framework/TestStatus/Unknown.php',\n        'PHPUnit\\\\Framework\\\\TestStatus\\\\Warning' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestStatus/Warning.php',\n        'PHPUnit\\\\Framewo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 525,
                "context": "'/phpunit/phpunit/src/Framework/TestStatus/Warning.php',\n        'PHPUnit\\\\Framework\\\\TestSuite' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSuite.php',\n        'PHPUnit\\\\Framework\\\\TestS"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 526,
                "context": " '/phpunit/phpunit/src/Framework/TestSuite.php',\n        'PHPUnit\\\\Framework\\\\TestSuiteIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/TestSuiteIterator.php',\n        'PHPUnit\\\\Framewor"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 527,
                "context": "Framework/TestSuiteIterator.php',\n        'PHPUnit\\\\Framework\\\\UnknownClassOrInterfaceException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/UnknownClassOrInterfaceException.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 528,
                "context": "/UnknownClassOrInterfaceException.php',\n        'PHPUnit\\\\Framework\\\\UnknownNativeTypeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Framework/Exception/UnknownNativeTypeException.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 529,
                "context": "src/Framework/Exception/UnknownNativeTypeException.php',\n        'PHPUnit\\\\Logging\\\\EventLogger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/EventLogger.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 530,
                "context": "/phpunit/phpunit/src/Logging/EventLogger.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\JunitXmlLogger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/JunitXmlLogger.php',\n        'PHPUnit\\\\Logging"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 531,
                "context": "nit/phpunit/src/Logging/JUnit/JunitXmlLogger.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/Subscriber.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 532,
                "context": "gging/JUnit/Subscriber/Subscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestErroredSubscriber.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 533,
                "context": "t/Subscriber/TestErroredSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestFailedSubscriber.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 534,
                "context": "/Subscriber/TestFailedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestFinishedSubscriber.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 535,
                "context": "r/TestFinishedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestMarkedIncompleteSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestMarkedIncompleteSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 536,
                "context": "kedIncompleteSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestPreparationFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestPreparationFailedSubscriber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 537,
                "context": "rationFailedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestPreparationStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestPreparationStartedSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 538,
                "context": "TestPreparationStartedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestPreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestPreparedSubscriber.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 539,
                "context": "reparedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestPrintedUnexpectedOutputSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestPrintedUnexpectedOutputSubscrib"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 540,
                "context": "dOutputSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestRunnerExecutionFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestRunnerExecutionFinishedSubscrib"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 541,
                "context": "RunnerExecutionFinishedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestSkippedSubscriber.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 542,
                "context": "riber/TestSkippedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestSuiteFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestSuiteFinishedSubscriber.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 543,
                "context": "/TestSuiteFinishedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\JUnit\\\\TestSuiteStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/JUnit/Subscriber/TestSuiteStartedSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 544,
                "context": "nit/Subscriber/TestSuiteStartedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/Subscriber.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 545,
                "context": "ogging/TeamCity/Subscriber/Subscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TeamCityLogger' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/TeamCityLogger.php',\n        'PHPUnit\\\\Logg"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 546,
                "context": "eamCity/TeamCityLogger.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestConsideredRiskySubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestConsideredRiskySubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 547,
                "context": "/TestConsideredRiskySubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestErroredSubscriber.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 548,
                "context": "ubscriber/TestErroredSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestFailedSubscriber.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 549,
                "context": "bscriber/TestFailedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestFinishedSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 550,
                "context": "estFinishedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestMarkedIncompleteSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestMarkedIncompleteSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 551,
                "context": "estMarkedIncompleteSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestPreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestPreparedSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 552,
                "context": "aredSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestRunnerExecutionFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestRunnerExecutionFinishedSubsc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 553,
                "context": "nerExecutionFinishedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestSkippedSubscriber.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 554,
                "context": "iber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestSuiteBeforeFirstTestMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestSuiteBeforeFirstTestMethodEr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 555,
                "context": "tMethodErroredSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestSuiteFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestSuiteFinishedSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 556,
                "context": "stSuiteFinishedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestSuiteSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestSuiteSkippedSubscriber.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 557,
                "context": "estSuiteSkippedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TeamCity\\\\TestSuiteStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TeamCity/Subscriber/TestSuiteStartedSubscriber.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 558,
                "context": "ty/Subscriber/TestSuiteStartedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\HtmlRenderer' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/HtmlRenderer.php',\n        'PHPUnit\\\\Logging"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 559,
                "context": "punit/src/Logging/TestDox/HtmlRenderer.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\NamePrettifier' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/NamePrettifier.php',\n        'PHPUnit\\\\Loggi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 560,
                "context": "/src/Logging/TestDox/NamePrettifier.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\PlainTextRenderer' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/PlainTextRenderer.php',\n        'PHPUnit\\\\Lo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 561,
                "context": "unit/src/Logging/TestDox/PlainTextRenderer.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/Subscriber.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 562,
                "context": "t/Subscriber/Subscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestConsideredRiskySubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestConsideredRiskySub"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 563,
                "context": "r/TestConsideredRiskySubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestErroredSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 564,
                "context": "Subscriber/TestErroredSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestFailedSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 565,
                "context": "ubscriber/TestFailedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestFinishedSubscriber"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 566,
                "context": "TestFinishedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestMarkedIncompleteSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestMarkedIncompleteSu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 567,
                "context": "r/TestMarkedIncompleteSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestPassedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestPassedSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 568,
                "context": "ubscriber/TestPassedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestPreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestPreparedSubscriber"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 569,
                "context": "stResult/Subscriber/TestPreparedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestResult' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/TestResult.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 570,
                "context": "ng/TestDox/TestResult/TestResult.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestResultCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/TestResultCollection.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 571,
                "context": "ult/TestResultCollection.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestResultCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/TestResultCollectionIterator.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 572,
                "context": "sult/TestResultCollectionIterator.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestResultCollector' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/TestResultCollector.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 573,
                "context": "/TestResult/TestResultCollector.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestSkippedSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 574,
                "context": "tSkippedSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredDeprecati"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 575,
                "context": "edDeprecationSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredNoticeSub"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 576,
                "context": "oticeSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredPhpDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredPhpDeprec"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 577,
                "context": "eprecationSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredPhpNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredPhpNotice"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 578,
                "context": "PhpNoticeSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredPhpWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredPhpWarnin"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 579,
                "context": "gSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredPhpunitDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredPhpunitDe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 580,
                "context": "ecationSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredPhpunitErrorSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredPhpunitEr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 581,
                "context": "ErrorSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredPhpunitWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredPhpunitWa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 582,
                "context": "punitWarningSubscriber.php',\n        'PHPUnit\\\\Logging\\\\TestDox\\\\TestTriggeredWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Logging/TestDox/TestResult/Subscriber/TestTriggeredWarningSu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 583,
                "context": "ox/TestResult/Subscriber/TestTriggeredWarningSubscriber.php',\n        'PHPUnit\\\\Metadata\\\\After' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/After.php',\n        'PHPUnit\\\\Metadata\\\\AfterClass'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 584,
                "context": "R__ . '/..' . '/phpunit/phpunit/src/Metadata/After.php',\n        'PHPUnit\\\\Metadata\\\\AfterClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/AfterClass.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 585,
                "context": ". '/phpunit/phpunit/src/Metadata/AfterClass.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\CodeCoverage' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Api/CodeCoverage.php',\n        'PHPUnit\\\\Metadata\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 586,
                "context": "punit/phpunit/src/Metadata/Api/CodeCoverage.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\DataProvider' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Api/DataProvider.php',\n        'PHPUnit\\\\Metadata\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 587,
                "context": "punit/phpunit/src/Metadata/Api/DataProvider.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\Dependencies' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Api/Dependencies.php',\n        'PHPUnit\\\\Metadata\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 588,
                "context": ". '/phpunit/phpunit/src/Metadata/Api/Dependencies.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\Groups' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Api/Groups.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\H"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 589,
                "context": " . '/phpunit/phpunit/src/Metadata/Api/Groups.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\HookMethods' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Api/HookMethods.php',\n        'PHPUnit\\\\Metadata\\\\A"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 590,
                "context": "hpunit/phpunit/src/Metadata/Api/HookMethods.php',\n        'PHPUnit\\\\Metadata\\\\Api\\\\Requirements' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Api/Requirements.php',\n        'PHPUnit\\\\Metadata\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 591,
                "context": "'/phpunit/phpunit/src/Metadata/Api/Requirements.php',\n        'PHPUnit\\\\Metadata\\\\BackupGlobals' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/BackupGlobals.php',\n        'PHPUnit\\\\Metadata\\\\Bac"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 592,
                "context": "nit/phpunit/src/Metadata/BackupGlobals.php',\n        'PHPUnit\\\\Metadata\\\\BackupStaticProperties' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/BackupStaticProperties.php',\n        'PHPUnit\\\\Meta"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 593,
                "context": " '/phpunit/phpunit/src/Metadata/BackupStaticProperties.php',\n        'PHPUnit\\\\Metadata\\\\Before' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Before.php',\n        'PHPUnit\\\\Metadata\\\\BeforeClas"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 594,
                "context": "_ . '/..' . '/phpunit/phpunit/src/Metadata/Before.php',\n        'PHPUnit\\\\Metadata\\\\BeforeClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/BeforeClass.php',\n        'PHPUnit\\\\Metadata\\\\Cover"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 595,
                "context": "/..' . '/phpunit/phpunit/src/Metadata/BeforeClass.php',\n        'PHPUnit\\\\Metadata\\\\CoversClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversClass.php',\n        'PHPUnit\\\\Metadata\\\\Cover"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 596,
                "context": "phpunit/src/Metadata/CoversClass.php',\n        'PHPUnit\\\\Metadata\\\\CoversClassesThatExtendClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversClassesThatExtendClass.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 597,
                "context": "ersClassesThatExtendClass.php',\n        'PHPUnit\\\\Metadata\\\\CoversClassesThatImplementInterface' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversClassesThatImplementInterface.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 598,
                "context": "c/Metadata/CoversClassesThatImplementInterface.php',\n        'PHPUnit\\\\Metadata\\\\CoversFunction' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversFunction.php',\n        'PHPUnit\\\\Metadata\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 599,
                "context": " . '/phpunit/phpunit/src/Metadata/CoversFunction.php',\n        'PHPUnit\\\\Metadata\\\\CoversMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversMethod.php',\n        'PHPUnit\\\\Metadata\\\\Cove"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 600,
                "context": ". '/phpunit/phpunit/src/Metadata/CoversMethod.php',\n        'PHPUnit\\\\Metadata\\\\CoversNamespace' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversNamespace.php',\n        'PHPUnit\\\\Metadata\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 601,
                "context": " '/phpunit/phpunit/src/Metadata/CoversNamespace.php',\n        'PHPUnit\\\\Metadata\\\\CoversNothing' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversNothing.php',\n        'PHPUnit\\\\Metadata\\\\Cov"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 602,
                "context": ".' . '/phpunit/phpunit/src/Metadata/CoversNothing.php',\n        'PHPUnit\\\\Metadata\\\\CoversTrait' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/CoversTrait.php',\n        'PHPUnit\\\\Metadata\\\\DataP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 603,
                "context": "..' . '/phpunit/phpunit/src/Metadata/CoversTrait.php',\n        'PHPUnit\\\\Metadata\\\\DataProvider' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/DataProvider.php',\n        'PHPUnit\\\\Metadata\\\\Depe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 604,
                "context": " . '/phpunit/phpunit/src/Metadata/DataProvider.php',\n        'PHPUnit\\\\Metadata\\\\DependsOnClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/DependsOnClass.php',\n        'PHPUnit\\\\Metadata\\\\De"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 605,
                "context": "'/phpunit/phpunit/src/Metadata/DependsOnClass.php',\n        'PHPUnit\\\\Metadata\\\\DependsOnMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/DependsOnMethod.php',\n        'PHPUnit\\\\Metadata\\\\D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 606,
                "context": "ta/DependsOnMethod.php',\n        'PHPUnit\\\\Metadata\\\\DisableReturnValueGenerationForTestDoubles' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/DisableReturnValueGenerationForTestDoubles.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 607,
                "context": "eReturnValueGenerationForTestDoubles.php',\n        'PHPUnit\\\\Metadata\\\\DoesNotPerformAssertions' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/DoesNotPerformAssertions.php',\n        'PHPUnit\\\\Me"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 608,
                "context": "punit/phpunit/src/Metadata/DoesNotPerformAssertions.php',\n        'PHPUnit\\\\Metadata\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Exception/Exception.php',\n        'PHPUnit\\\\Metadat"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 609,
                "context": "/Metadata/Exception/Exception.php',\n        'PHPUnit\\\\Metadata\\\\ExcludeGlobalVariableFromBackup' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/ExcludeGlobalVariableFromBackup.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 610,
                "context": "cludeGlobalVariableFromBackup.php',\n        'PHPUnit\\\\Metadata\\\\ExcludeStaticPropertyFromBackup' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/ExcludeStaticPropertyFromBackup.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 611,
                "context": "it/phpunit/src/Metadata/ExcludeStaticPropertyFromBackup.php',\n        'PHPUnit\\\\Metadata\\\\Group' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Group.php',\n        'PHPUnit\\\\Metadata\\\\IgnoreDepre"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 612,
                "context": "..' . '/phpunit/phpunit/src/Metadata/Group.php',\n        'PHPUnit\\\\Metadata\\\\IgnoreDeprecations' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/IgnoreDeprecations.php',\n        'PHPUnit\\\\Metadata"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 613,
                "context": "nit/src/Metadata/IgnoreDeprecations.php',\n        'PHPUnit\\\\Metadata\\\\IgnorePhpunitDeprecations' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/IgnorePhpunitDeprecations.php',\n        'PHPUnit\\\\M"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 614,
                "context": "/Metadata/IgnorePhpunitDeprecations.php',\n        'PHPUnit\\\\Metadata\\\\InvalidAttributeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Exception/InvalidAttributeException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 615,
                "context": "/InvalidAttributeException.php',\n        'PHPUnit\\\\Metadata\\\\InvalidVersionRequirementException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Exception/InvalidVersionRequirementException.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 616,
                "context": "etadata/Exception/InvalidVersionRequirementException.php',\n        'PHPUnit\\\\Metadata\\\\Metadata' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Metadata.php',\n        'PHPUnit\\\\Metadata\\\\Metadata"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 617,
                "context": " . '/phpunit/phpunit/src/Metadata/Metadata.php',\n        'PHPUnit\\\\Metadata\\\\MetadataCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/MetadataCollection.php',\n        'PHPUnit\\\\Metadata"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 618,
                "context": "it/src/Metadata/MetadataCollection.php',\n        'PHPUnit\\\\Metadata\\\\MetadataCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/MetadataCollectionIterator.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 619,
                "context": "data/MetadataCollectionIterator.php',\n        'PHPUnit\\\\Metadata\\\\NoVersionRequirementException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Exception/NoVersionRequirementException.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 620,
                "context": "ception/NoVersionRequirementException.php',\n        'PHPUnit\\\\Metadata\\\\Parser\\\\AttributeParser' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Parser/AttributeParser.php',\n        'PHPUnit\\\\Meta"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 621,
                "context": "nit/src/Metadata/Parser/AttributeParser.php',\n        'PHPUnit\\\\Metadata\\\\Parser\\\\CachingParser' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Parser/CachingParser.php',\n        'PHPUnit\\\\Metada"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 622,
                "context": "unit/phpunit/src/Metadata/Parser/CachingParser.php',\n        'PHPUnit\\\\Metadata\\\\Parser\\\\Parser' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Parser/Parser.php',\n        'PHPUnit\\\\Metadata\\\\Par"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 623,
                "context": "'/phpunit/phpunit/src/Metadata/Parser/Parser.php',\n        'PHPUnit\\\\Metadata\\\\Parser\\\\Registry' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Parser/Registry.php',\n        'PHPUnit\\\\Metadata\\\\P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 624,
                "context": " '/phpunit/phpunit/src/Metadata/Parser/Registry.php',\n        'PHPUnit\\\\Metadata\\\\PostCondition' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/PostCondition.php',\n        'PHPUnit\\\\Metadata\\\\Pre"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 625,
                "context": "' . '/phpunit/phpunit/src/Metadata/PostCondition.php',\n        'PHPUnit\\\\Metadata\\\\PreCondition' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/PreCondition.php',\n        'PHPUnit\\\\Metadata\\\\Pres"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 626,
                "context": "phpunit/phpunit/src/Metadata/PreCondition.php',\n        'PHPUnit\\\\Metadata\\\\PreserveGlobalState' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/PreserveGlobalState.php',\n        'PHPUnit\\\\Metadat"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 627,
                "context": "/src/Metadata/PreserveGlobalState.php',\n        'PHPUnit\\\\Metadata\\\\RequiresEnvironmentVariable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresEnvironmentVariable.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 628,
                "context": "nit/src/Metadata/RequiresEnvironmentVariable.php',\n        'PHPUnit\\\\Metadata\\\\RequiresFunction' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresFunction.php',\n        'PHPUnit\\\\Metadata\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 629,
                "context": "/phpunit/phpunit/src/Metadata/RequiresFunction.php',\n        'PHPUnit\\\\Metadata\\\\RequiresMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresMethod.php',\n        'PHPUnit\\\\Metadata\\\\Re"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 630,
                "context": "t/phpunit/src/Metadata/RequiresMethod.php',\n        'PHPUnit\\\\Metadata\\\\RequiresOperatingSystem' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresOperatingSystem.php',\n        'PHPUnit\\\\Met"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 631,
                "context": "etadata/RequiresOperatingSystem.php',\n        'PHPUnit\\\\Metadata\\\\RequiresOperatingSystemFamily' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresOperatingSystemFamily.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 632,
                "context": "hpunit/src/Metadata/RequiresOperatingSystemFamily.php',\n        'PHPUnit\\\\Metadata\\\\RequiresPhp' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresPhp.php',\n        'PHPUnit\\\\Metadata\\\\Requi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 633,
                "context": "phpunit/phpunit/src/Metadata/RequiresPhp.php',\n        'PHPUnit\\\\Metadata\\\\RequiresPhpExtension' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresPhpExtension.php',\n        'PHPUnit\\\\Metada"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 634,
                "context": "nit/phpunit/src/Metadata/RequiresPhpExtension.php',\n        'PHPUnit\\\\Metadata\\\\RequiresPhpunit' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresPhpunit.php',\n        'PHPUnit\\\\Metadata\\\\R"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 635,
                "context": "phpunit/src/Metadata/RequiresPhpunit.php',\n        'PHPUnit\\\\Metadata\\\\RequiresPhpunitExtension' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresPhpunitExtension.php',\n        'PHPUnit\\\\Me"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 636,
                "context": "phpunit/src/Metadata/RequiresPhpunitExtension.php',\n        'PHPUnit\\\\Metadata\\\\RequiresSetting' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RequiresSetting.php',\n        'PHPUnit\\\\Metadata\\\\R"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 637,
                "context": "hpunit/src/Metadata/RequiresSetting.php',\n        'PHPUnit\\\\Metadata\\\\RunClassInSeparateProcess' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RunClassInSeparateProcess.php',\n        'PHPUnit\\\\M"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 638,
                "context": "t/src/Metadata/RunClassInSeparateProcess.php',\n        'PHPUnit\\\\Metadata\\\\RunInSeparateProcess' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RunInSeparateProcess.php',\n        'PHPUnit\\\\Metada"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 639,
                "context": "src/Metadata/RunInSeparateProcess.php',\n        'PHPUnit\\\\Metadata\\\\RunTestsInSeparateProcesses' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/RunTestsInSeparateProcesses.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 640,
                "context": "phpunit/phpunit/src/Metadata/RunTestsInSeparateProcesses.php',\n        'PHPUnit\\\\Metadata\\\\Test' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Test.php',\n        'PHPUnit\\\\Metadata\\\\TestDox' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 641,
                "context": "__DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Test.php',\n        'PHPUnit\\\\Metadata\\\\TestDox' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/TestDox.php',\n        'PHPUnit\\\\Metadata\\\\TestWith'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 642,
                "context": "R__ . '/..' . '/phpunit/phpunit/src/Metadata/TestDox.php',\n        'PHPUnit\\\\Metadata\\\\TestWith' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/TestWith.php',\n        'PHPUnit\\\\Metadata\\\\UsesClas"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 643,
                "context": "_ . '/..' . '/phpunit/phpunit/src/Metadata/TestWith.php',\n        'PHPUnit\\\\Metadata\\\\UsesClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/UsesClass.php',\n        'PHPUnit\\\\Metadata\\\\UsesCla"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 644,
                "context": "nit/phpunit/src/Metadata/UsesClass.php',\n        'PHPUnit\\\\Metadata\\\\UsesClassesThatExtendClass' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/UsesClassesThatExtendClass.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 645,
                "context": "/UsesClassesThatExtendClass.php',\n        'PHPUnit\\\\Metadata\\\\UsesClassesThatImplementInterface' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/UsesClassesThatImplementInterface.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 646,
                "context": "t/src/Metadata/UsesClassesThatImplementInterface.php',\n        'PHPUnit\\\\Metadata\\\\UsesFunction' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/UsesFunction.php',\n        'PHPUnit\\\\Metadata\\\\Uses"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 647,
                "context": "/..' . '/phpunit/phpunit/src/Metadata/UsesFunction.php',\n        'PHPUnit\\\\Metadata\\\\UsesMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/UsesMethod.php',\n        'PHPUnit\\\\Metadata\\\\UsesNa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 648,
                "context": "..' . '/phpunit/phpunit/src/Metadata/UsesMethod.php',\n        'PHPUnit\\\\Metadata\\\\UsesNamespace' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/UsesNamespace.php',\n        'PHPUnit\\\\Metadata\\\\Use"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 649,
                "context": "/..' . '/phpunit/phpunit/src/Metadata/UsesNamespace.php',\n        'PHPUnit\\\\Metadata\\\\UsesTrait' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/UsesTrait.php',\n        'PHPUnit\\\\Metadata\\\\Version"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 650,
                "context": "phpunit/src/Metadata/UsesTrait.php',\n        'PHPUnit\\\\Metadata\\\\Version\\\\ComparisonRequirement' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Version/ComparisonRequirement.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 651,
                "context": "/Version/ComparisonRequirement.php',\n        'PHPUnit\\\\Metadata\\\\Version\\\\ConstraintRequirement' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Version/ConstraintRequirement.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 652,
                "context": "c/Metadata/Version/ConstraintRequirement.php',\n        'PHPUnit\\\\Metadata\\\\Version\\\\Requirement' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/Version/Requirement.php',\n        'PHPUnit\\\\Metadat"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 653,
                "context": "unit/src/Metadata/Version/Requirement.php',\n        'PHPUnit\\\\Metadata\\\\WithEnvironmentVariable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/WithEnvironmentVariable.php',\n        'PHPUnit\\\\Met"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 654,
                "context": "unit/src/Metadata/WithEnvironmentVariable.php',\n        'PHPUnit\\\\Metadata\\\\WithoutErrorHandler' => __DIR__ . '/..' . '/phpunit/phpunit/src/Metadata/WithoutErrorHandler.php',\n        'PHPUnit\\\\Runner\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 655,
                "context": "it/src/Metadata/WithoutErrorHandler.php',\n        'PHPUnit\\\\Runner\\\\BackedUpEnvironmentVariable' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/BackedUpEnvironmentVariable.php',\n        'PHPUnit\\\\R"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 656,
                "context": "punit/src/Runner/BackedUpEnvironmentVariable.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\Baseline' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Baseline.php',\n        'PHPUnit\\\\Runner\\\\Bas"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 657,
                "context": "/Runner/Baseline/Baseline.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\CannotLoadBaselineException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Exception/CannotLoadBaselineException.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 658,
                "context": "notLoadBaselineException.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\FileDoesNotHaveLineException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Exception/FileDoesNotHaveLineException.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 659,
                "context": "line/Exception/FileDoesNotHaveLineException.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\Generator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Generator.php',\n        'PHPUnit\\\\Runner\\\\Ba"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 660,
                "context": "'/phpunit/phpunit/src/Runner/Baseline/Generator.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\Issue' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Issue.php',\n        'PHPUnit\\\\Runner\\\\Baseli"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 661,
                "context": " . '/phpunit/phpunit/src/Runner/Baseline/Issue.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\Reader' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Reader.php',\n        'PHPUnit\\\\Runner\\\\Basel"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 662,
                "context": "nit/src/Runner/Baseline/Reader.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\RelativePathCalculator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/RelativePathCalculator.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 663,
                "context": "src/Runner/Baseline/RelativePathCalculator.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Subscriber/Subscriber.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 664,
                "context": "scriber/Subscriber.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\TestTriggeredDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Subscriber/TestTriggeredDeprecationSubscribe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 665,
                "context": "edDeprecationSubscriber.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\TestTriggeredNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Subscriber/TestTriggeredNoticeSubscriber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 666,
                "context": "oticeSubscriber.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\TestTriggeredPhpDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Subscriber/TestTriggeredPhpDeprecationSubscr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 667,
                "context": "eprecationSubscriber.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\TestTriggeredPhpNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Subscriber/TestTriggeredPhpNoticeSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 668,
                "context": "PhpNoticeSubscriber.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\TestTriggeredPhpWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Subscriber/TestTriggeredPhpWarningSubscriber"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 669,
                "context": "edPhpWarningSubscriber.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\TestTriggeredWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Subscriber/TestTriggeredWarningSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 670,
                "context": "line/Subscriber/TestTriggeredWarningSubscriber.php',\n        'PHPUnit\\\\Runner\\\\Baseline\\\\Writer' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Baseline/Writer.php',\n        'PHPUnit\\\\Runner\\\\Class"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 671,
                "context": "/phpunit/src/Runner/Baseline/Writer.php',\n        'PHPUnit\\\\Runner\\\\ClassCannotBeFoundException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/ClassCannotBeFoundException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 672,
                "context": "ClassCannotBeFoundException.php',\n        'PHPUnit\\\\Runner\\\\ClassDoesNotExtendTestCaseException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/ClassDoesNotExtendTestCaseException.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 673,
                "context": "on/ClassDoesNotExtendTestCaseException.php',\n        'PHPUnit\\\\Runner\\\\ClassIsAbstractException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/ClassIsAbstractException.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 674,
                "context": "unit/src/Runner/Exception/ClassIsAbstractException.php',\n        'PHPUnit\\\\Runner\\\\CodeCoverage' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/CodeCoverage.php',\n        'PHPUnit\\\\Runner\\\\Deprecat"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 675,
                "context": "phpunit/src/Runner/CodeCoverage.php',\n        'PHPUnit\\\\Runner\\\\DeprecationCollector\\\\Collector' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/DeprecationCollector/Collector.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 676,
                "context": "ner/DeprecationCollector/Collector.php',\n        'PHPUnit\\\\Runner\\\\DeprecationCollector\\\\Facade' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/DeprecationCollector/Facade.php',\n        'PHPUnit\\\\R"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 677,
                "context": "er/DeprecationCollector/Facade.php',\n        'PHPUnit\\\\Runner\\\\DeprecationCollector\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/DeprecationCollector/Subscriber/Subscriber.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 678,
                "context": "scriber/Subscriber.php',\n        'PHPUnit\\\\Runner\\\\DeprecationCollector\\\\TestPreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/DeprecationCollector/Subscriber/TestPreparedSubscribe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 679,
                "context": "criber.php',\n        'PHPUnit\\\\Runner\\\\DeprecationCollector\\\\TestTriggeredDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/DeprecationCollector/Subscriber/TestTriggeredDeprecat"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 680,
                "context": "stTriggeredDeprecationSubscriber.php',\n        'PHPUnit\\\\Runner\\\\DirectoryDoesNotExistException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/DirectoryDoesNotExistException.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 681,
                "context": "/Runner/Exception/DirectoryDoesNotExistException.php',\n        'PHPUnit\\\\Runner\\\\ErrorException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/ErrorException.php',\n        'PHPUnit\\\\Runn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 682,
                "context": "hpunit/phpunit/src/Runner/Exception/ErrorException.php',\n        'PHPUnit\\\\Runner\\\\ErrorHandler' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ErrorHandler.php',\n        'PHPUnit\\\\Runner\\\\Exceptio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 683,
                "context": "_ . '/..' . '/phpunit/phpunit/src/Runner/ErrorHandler.php',\n        'PHPUnit\\\\Runner\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/Exception.php',\n        'PHPUnit\\\\Runner\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 684,
                "context": "nit/phpunit/src/Runner/Exception/Exception.php',\n        'PHPUnit\\\\Runner\\\\Extension\\\\Extension' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Extension/Extension.php',\n        'PHPUnit\\\\Runner\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 685,
                "context": "src/Runner/Extension/Extension.php',\n        'PHPUnit\\\\Runner\\\\Extension\\\\ExtensionBootstrapper' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Extension/ExtensionBootstrapper.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 686,
                "context": "it/src/Runner/Extension/ExtensionBootstrapper.php',\n        'PHPUnit\\\\Runner\\\\Extension\\\\Facade' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Extension/Facade.php',\n        'PHPUnit\\\\Runner\\\\Exte"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 687,
                "context": "unit/src/Runner/Extension/Facade.php',\n        'PHPUnit\\\\Runner\\\\Extension\\\\ParameterCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Extension/ParameterCollection.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 688,
                "context": "/src/Runner/Extension/ParameterCollection.php',\n        'PHPUnit\\\\Runner\\\\Extension\\\\PharLoader' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Extension/PharLoader.php',\n        'PHPUnit\\\\Runner\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 689,
                "context": "punit/src/Runner/Extension/PharLoader.php',\n        'PHPUnit\\\\Runner\\\\FileDoesNotExistException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/FileDoesNotExistException.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 690,
                "context": "on/FileDoesNotExistException.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\ExcludeGroupFilterIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/ExcludeGroupFilterIterator.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 691,
                "context": "er/ExcludeGroupFilterIterator.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\ExcludeNameFilterIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/ExcludeNameFilterIterator.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 692,
                "context": "nit/src/Runner/Filter/ExcludeNameFilterIterator.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\Factory' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/Factory.php',\n        'PHPUnit\\\\Runner\\\\Filter"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 693,
                "context": "t/phpunit/src/Runner/Filter/Factory.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\GroupFilterIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/GroupFilterIterator.php',\n        'PHPUnit\\\\Ru"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 694,
                "context": "r/Filter/GroupFilterIterator.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\IncludeGroupFilterIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/IncludeGroupFilterIterator.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 695,
                "context": "er/IncludeGroupFilterIterator.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\IncludeNameFilterIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/IncludeNameFilterIterator.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 696,
                "context": "ner/Filter/IncludeNameFilterIterator.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\NameFilterIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/NameFilterIterator.php',\n        'PHPUnit\\\\Run"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 697,
                "context": "c/Runner/Filter/NameFilterIterator.php',\n        'PHPUnit\\\\Runner\\\\Filter\\\\TestIdFilterIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Filter/TestIdFilterIterator.php',\n        'PHPUnit\\\\R"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 698,
                "context": "IdFilterIterator.php',\n        'PHPUnit\\\\Runner\\\\GarbageCollection\\\\ExecutionFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/GarbageCollection/Subscriber/ExecutionFinishedSubscri"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 699,
                "context": "inishedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\GarbageCollection\\\\ExecutionStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/GarbageCollection/Subscriber/ExecutionStartedSubscrib"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 700,
                "context": "onStartedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\GarbageCollection\\\\GarbageCollectionHandler' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/GarbageCollection/GarbageCollectionHandler.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 701,
                "context": "llection/GarbageCollectionHandler.php',\n        'PHPUnit\\\\Runner\\\\GarbageCollection\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/GarbageCollection/Subscriber/Subscriber.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 702,
                "context": "Subscriber/Subscriber.php',\n        'PHPUnit\\\\Runner\\\\GarbageCollection\\\\TestFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/GarbageCollection/Subscriber/TestFinishedSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 703,
                "context": "/GarbageCollection/Subscriber/TestFinishedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\HookMethod' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/HookMethod/HookMethod.php',\n        'PHPUnit\\\\Runner\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 704,
                "context": "t/phpunit/src/Runner/HookMethod/HookMethod.php',\n        'PHPUnit\\\\Runner\\\\HookMethodCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/HookMethod/HookMethodCollection.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 705,
                "context": "rc/Runner/HookMethod/HookMethodCollection.php',\n        'PHPUnit\\\\Runner\\\\InvalidOrderException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/InvalidOrderException.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 706,
                "context": "Runner/Exception/InvalidOrderException.php',\n        'PHPUnit\\\\Runner\\\\InvalidPhptFileException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/InvalidPhptFileException.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 707,
                "context": "ception/InvalidPhptFileException.php',\n        'PHPUnit\\\\Runner\\\\ParameterDoesNotExistException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/ParameterDoesNotExistException.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 708,
                "context": "erDoesNotExistException.php',\n        'PHPUnit\\\\Runner\\\\PhptExternalFileCannotBeLoadedException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/PhptExternalFileCannotBeLoadedException.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 709,
                "context": "/Exception/PhptExternalFileCannotBeLoadedException.php',\n        'PHPUnit\\\\Runner\\\\PhptTestCase' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/PHPT/PhptTestCase.php',\n        'PHPUnit\\\\Runner\\\\Res"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 710,
                "context": "it/src/Runner/PHPT/PhptTestCase.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\DefaultResultCache' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/DefaultResultCache.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 711,
                "context": "ner/ResultCache/DefaultResultCache.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\NullResultCache' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/NullResultCache.php',\n        'PHPUnit\\\\R"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 712,
                "context": "src/Runner/ResultCache/NullResultCache.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\ResultCache' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/ResultCache.php',\n        'PHPUnit\\\\Runne"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 713,
                "context": "/Runner/ResultCache/ResultCache.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\ResultCacheHandler' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/ResultCacheHandler.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 714,
                "context": "c/Runner/ResultCache/ResultCacheHandler.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/Subscriber.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 715,
                "context": "ubscriber/Subscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestConsideredRiskySubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestConsideredRiskySubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 716,
                "context": "estConsideredRiskySubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestErroredSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 717,
                "context": "scriber/TestErroredSubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestFailedSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 718,
                "context": "criber/TestFailedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestFinishedSubscriber.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 719,
                "context": "tFinishedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestMarkedIncompleteSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestMarkedIncompleteSubscriber"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 720,
                "context": "tMarkedIncompleteSubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestPreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestPreparedSubscriber.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 721,
                "context": "riber/TestPreparedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestSkippedSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 722,
                "context": "/TestSkippedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestSuiteFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestSuiteFinishedSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 723,
                "context": "SuiteFinishedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\ResultCache\\\\TestSuiteStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/ResultCache/Subscriber/TestSuiteStartedSubscriber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 724,
                "context": "sultCache/Subscriber/TestSuiteStartedSubscriber.php',\n        'PHPUnit\\\\Runner\\\\TestSuiteLoader' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestSuiteLoader.php',\n        'PHPUnit\\\\Runner\\\\TestS"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 725,
                "context": " . '/phpunit/phpunit/src/Runner/TestSuiteLoader.php',\n        'PHPUnit\\\\Runner\\\\TestSuiteSorter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestSuiteSorter.php',\n        'PHPUnit\\\\Runner\\\\Unsup"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 726,
                "context": "unit/src/Runner/TestSuiteSorter.php',\n        'PHPUnit\\\\Runner\\\\UnsupportedPhptSectionException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Exception/UnsupportedPhptSectionException.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 727,
                "context": "it/src/Runner/Exception/UnsupportedPhptSectionException.php',\n        'PHPUnit\\\\Runner\\\\Version' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/Version.php',\n        'PHPUnit\\\\TestRunner\\\\IssueFilt"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 728,
                "context": " . '/..' . '/phpunit/phpunit/src/Runner/Version.php',\n        'PHPUnit\\\\TestRunner\\\\IssueFilter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/IssueFilter.php',\n        'PHPUnit\\\\TestRunner\\\\TestR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 729,
                "context": "sueFilter.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\AfterTestClassMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/AfterTestClassMethodErroredSubs"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 730,
                "context": "bscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\BeforeTestClassMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/BeforeTestClassMethodErroredSub"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 731,
                "context": "eforeTestClassMethodErroredSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\Collector' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Collector.php',\n        'PHPUnit\\\\TestRunn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 732,
                "context": "TestResult/Collector.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\ExecutionStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/ExecutionStartedSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 733,
                "context": "lt/Subscriber/ExecutionStartedSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\Facade' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Facade.php',\n        'PHPUnit\\\\TestRunner\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 734,
                "context": "unit/src/Runner/TestResult/Facade.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Issue.php',\n        'PHPUnit\\\\TestRunner\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 735,
                "context": "phpunit/src/Runner/TestResult/Issue.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\PassedTests' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/PassedTests.php',\n        'PHPUnit\\\\TestRu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 736,
                "context": "it/src/Runner/TestResult/PassedTests.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/Subscriber.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 737,
                "context": "criber/Subscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestConsideredRiskySubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestConsideredRiskySubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 738,
                "context": "ConsideredRiskySubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestErroredSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 739,
                "context": "iber/TestErroredSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestFailedSubscriber.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 740,
                "context": "ber/TestFailedSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestFinishedSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 741,
                "context": "nishedSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestMarkedIncompleteSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestMarkedIncompleteSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 742,
                "context": "rkedIncompleteSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestPreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestPreparedSubscriber.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 743,
                "context": "lt/Subscriber/TestPreparedSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/TestResult.php',\n        'PHPUnit\\\\TestRun"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 744,
                "context": "Result.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestRunnerTriggeredDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestRunnerTriggeredDeprecationS"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 745,
                "context": "nSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestRunnerTriggeredNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestRunnerTriggeredNoticeSubscr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 746,
                "context": "Subscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestRunnerTriggeredWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestRunnerTriggeredWarningSubsc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 747,
                "context": "riggeredWarningSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestSkippedSubscriber.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 748,
                "context": "stSkippedSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestSuiteFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestSuiteFinishedSubscriber.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 749,
                "context": "teFinishedSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestSuiteSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestSuiteSkippedSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 750,
                "context": "iteSkippedSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestSuiteStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestSuiteStartedSubscriber.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 751,
                "context": "edSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredDeprecationSubscri"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 752,
                "context": "recationSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredErrorSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredErrorSubscriber.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 753,
                "context": "edErrorSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredNoticeSubscriber.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 754,
                "context": "ubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredPhpDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredPhpDeprecationSubs"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 755,
                "context": "tionSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredPhpNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredPhpNoticeSubscribe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 756,
                "context": "iceSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredPhpWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredPhpWarningSubscrib"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 757,
                "context": "riber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredPhpunitDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredPhpunitDeprecation"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 758,
                "context": "nSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredPhpunitErrorSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredPhpunitErrorSubscr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 759,
                "context": "Subscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredPhpunitNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredPhpunitNoticeSubsc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 760,
                "context": "ubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredPhpunitWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredPhpunitWarningSubs"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 761,
                "context": "arningSubscriber.php',\n        'PHPUnit\\\\TestRunner\\\\TestResult\\\\TestTriggeredWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/Runner/TestResult/Subscriber/TestTriggeredWarningSubscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 762,
                "context": "estResult/Subscriber/TestTriggeredWarningSubscriber.php',\n        'PHPUnit\\\\TextUI\\\\Application' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Application.php',\n        'PHPUnit\\\\TextUI\\\\CannotOpe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 763,
                "context": "hpunit/phpunit/src/TextUI/Application.php',\n        'PHPUnit\\\\TextUI\\\\CannotOpenSocketException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Exception/CannotOpenSocketException.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 764,
                "context": "extUI/Exception/CannotOpenSocketException.php',\n        'PHPUnit\\\\TextUI\\\\CliArguments\\\\Builder' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Cli/Builder.php',\n        'PHPUnit\\\\Tex"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 765,
                "context": "rc/TextUI/Configuration/Cli/Builder.php',\n        'PHPUnit\\\\TextUI\\\\CliArguments\\\\Configuration' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Cli/Configuration.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 766,
                "context": "/TextUI/Configuration/Cli/Configuration.php',\n        'PHPUnit\\\\TextUI\\\\CliArguments\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Cli/Exception.php',\n        'PHPUnit\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 767,
                "context": "guration/Cli/Exception.php',\n        'PHPUnit\\\\TextUI\\\\CliArguments\\\\XmlConfigurationFileFinder' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Cli/XmlConfigurationFileFinder.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 768,
                "context": "n/Cli/XmlConfigurationFileFinder.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\AtLeastVersionCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/AtLeastVersionCommand.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 769,
                "context": "/TextUI/Command/Commands/AtLeastVersionCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\Command' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Command.php',\n        'PHPUnit\\\\TextUI\\\\Comma"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 770,
                "context": "rc/TextUI/Command/Command.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\GenerateConfigurationCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/GenerateConfigurationCommand.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 771,
                "context": "ommands/GenerateConfigurationCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\ListGroupsCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/ListGroupsCommand.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 772,
                "context": "ommand/Commands/ListGroupsCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\ListTestFilesCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/ListTestFilesCommand.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 773,
                "context": "nd/Commands/ListTestFilesCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\ListTestSuitesCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/ListTestSuitesCommand.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 774,
                "context": "/Commands/ListTestSuitesCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\ListTestsAsTextCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/ListTestsAsTextCommand.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 775,
                "context": "/Commands/ListTestsAsTextCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\ListTestsAsXmlCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/ListTestsAsXmlCommand.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 776,
                "context": "ands/ListTestsAsXmlCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\MigrateConfigurationCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/MigrateConfigurationCommand.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 777,
                "context": "UI/Command/Commands/MigrateConfigurationCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\Result' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Result.php',\n        'PHPUnit\\\\TextUI\\\\Comman"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 778,
                "context": "unit/phpunit/src/TextUI/Command/Result.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\ShowHelpCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/ShowHelpCommand.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 779,
                "context": "UI/Command/Commands/ShowHelpCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\ShowVersionCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/ShowVersionCommand.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 780,
                "context": "ommand/Commands/ShowVersionCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\VersionCheckCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/VersionCheckCommand.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 781,
                "context": "mands/VersionCheckCommand.php',\n        'PHPUnit\\\\TextUI\\\\Command\\\\WarmCodeCoverageCacheCommand' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Command/Commands/WarmCodeCoverageCacheCommand.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 782,
                "context": "nd/Commands/WarmCodeCoverageCacheCommand.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Builder' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Builder.php',\n        'PHPUnit\\\\TextUI\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 783,
                "context": "Configuration/Builder.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\CodeCoverageFilterRegistry' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/CodeCoverageFilterRegistry.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 784,
                "context": "egistry.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\CodeCoverageReportNotConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/CodeCoverageReportNotConfigur"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 785,
                "context": "verageReportNotConfiguredException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Configuration' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Configuration.php',\n        'PHPUnit\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 786,
                "context": "onfiguration.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\ConfigurationCannotBeBuiltException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/ConfigurationCannotBeBuiltExc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 787,
                "context": "ion/ConfigurationCannotBeBuiltException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Constant' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/Constant.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 788,
                "context": "/Configuration/Value/Constant.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\ConstantCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/ConstantCollection.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 789,
                "context": "ue/ConstantCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\ConstantCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/ConstantCollectionIterator.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 790,
                "context": "ation/Value/ConstantCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Directory' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/Directory.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 791,
                "context": "onfiguration/Value/Directory.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\DirectoryCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/DirectoryCollection.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 792,
                "context": "/DirectoryCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\DirectoryCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/DirectoryCollectionIterator.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 793,
                "context": "tion/Value/DirectoryCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/Exception.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 794,
                "context": "iguration/Exception/Exception.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\ExtensionBootstrap' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/ExtensionBootstrap.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 795,
                "context": "/ExtensionBootstrap.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\ExtensionBootstrapCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/ExtensionBootstrapCollection.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 796,
                "context": "pCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\ExtensionBootstrapCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/ExtensionBootstrapCollectionItera"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 797,
                "context": "/Value/ExtensionBootstrapCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\File' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/File.php',\n        'PHPUnit\\\\Text"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 798,
                "context": "c/TextUI/Configuration/Value/File.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\FileCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/FileCollection.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 799,
                "context": "tion/Value/FileCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\FileCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/FileCollectionIterator.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 800,
                "context": "ion/Value/FileCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\FilterDirectory' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/FilterDirectory.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 801,
                "context": "/Value/FilterDirectory.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\FilterDirectoryCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/FilterDirectoryCollection.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 802,
                "context": "toryCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\FilterDirectoryCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/FilterDirectoryCollectionIterator"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 803,
                "context": "yCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\FilterNotConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/FilterNotConfiguredException."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 804,
                "context": "ion/Exception/FilterNotConfiguredException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Group' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/Group.php',\n        'PHPUnit\\\\Tex"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 805,
                "context": "TextUI/Configuration/Value/Group.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\GroupCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/GroupCollection.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 806,
                "context": "on/Value/GroupCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\GroupCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/GroupCollectionIterator.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 807,
                "context": "uration/Value/GroupCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\IniSetting' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/IniSetting.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 808,
                "context": "figuration/Value/IniSetting.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\IniSettingCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/IniSettingCollection.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 809,
                "context": "niSettingCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\IniSettingCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/IniSettingCollectionIterator.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 810,
                "context": "CollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\LoggingNotConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/LoggingNotConfiguredException"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 811,
                "context": "n/Exception/LoggingNotConfiguredException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Merger' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Merger.php',\n        'PHPUnit\\\\TextUI\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 812,
                "context": "/TextUI/Configuration/Merger.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoBaselineException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoBaselineException.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 813,
                "context": "ception/NoBaselineException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoBootstrapException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoBootstrapException.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 814,
                "context": "n/NoBootstrapException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoCacheDirectoryException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoCacheDirectoryException.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 815,
                "context": "eDirectoryException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoConfigurationFileException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoConfigurationFileException."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 816,
                "context": "nFileException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoCoverageCacheDirectoryException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoCoverageCacheDirectoryExcep"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 817,
                "context": "CacheDirectoryException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoCustomCssFileException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoCustomCssFileException.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 818,
                "context": "stomCssFileException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoDefaultTestSuiteException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoDefaultTestSuiteException.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 819,
                "context": "SuiteException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\NoPharExtensionDirectoryException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/NoPharExtensionDirectoryExcep"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 820,
                "context": "/Exception/NoPharExtensionDirectoryException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Php' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/Php.php',\n        'PHPUnit\\\\TextU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 821,
                "context": "it/src/TextUI/Configuration/Value/Php.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\PhpHandler' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/PhpHandler.php',\n        'PHPUnit\\\\Text"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 822,
                "context": "nit/src/TextUI/Configuration/PhpHandler.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Registry' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Registry.php',\n        'PHPUnit\\\\TextUI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 823,
                "context": "phpunit/src/TextUI/Configuration/Registry.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Source' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/Source.php',\n        'PHPUnit\\\\Te"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 824,
                "context": "c/TextUI/Configuration/Value/Source.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\SourceFilter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/SourceFilter.php',\n        'PHPUnit\\\\Te"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 825,
                "context": "c/TextUI/Configuration/SourceFilter.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\SourceMapper' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/SourceMapper.php',\n        'PHPUnit\\\\Te"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 826,
                "context": "hp',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\SpecificDeprecationToStopOnNotConfiguredException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/SpecificDeprecationToStopOnNo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 827,
                "context": "tionToStopOnNotConfiguredException.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestDirectory' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestDirectory.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 828,
                "context": "tion/Value/TestDirectory.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestDirectoryCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestDirectoryCollection.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 829,
                "context": "ectoryCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestDirectoryCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestDirectoryCollectionIterator.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 830,
                "context": "n/Value/TestDirectoryCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestFile' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestFile.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 831,
                "context": "/Configuration/Value/TestFile.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestFileCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestFileCollection.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 832,
                "context": "ue/TestFileCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestFileCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestFileCollectionIterator.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 833,
                "context": "ation/Value/TestFileCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestSuite' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestSuite.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 834,
                "context": "I/Configuration/Value/TestSuite.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestSuiteBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/TestSuiteBuilder.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 835,
                "context": "nfiguration/TestSuiteBuilder.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestSuiteCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestSuiteCollection.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 836,
                "context": "/TestSuiteCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\TestSuiteCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/TestSuiteCollectionIterator.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 837,
                "context": "ation/Value/TestSuiteCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\Variable' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/Variable.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 838,
                "context": "/Configuration/Value/Variable.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\VariableCollection' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/VariableCollection.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 839,
                "context": "ue/VariableCollection.php',\n        'PHPUnit\\\\TextUI\\\\Configuration\\\\VariableCollectionIterator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Value/VariableCollectionIterator.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 840,
                "context": "TextUI/Configuration/Value/VariableCollectionIterator.php',\n        'PHPUnit\\\\TextUI\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Exception/Exception.php',\n        'PHPUnit\\\\TextUI\\\\H"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 841,
                "context": ". '/..' . '/phpunit/phpunit/src/TextUI/Exception/Exception.php',\n        'PHPUnit\\\\TextUI\\\\Help' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Help.php',\n        'PHPUnit\\\\TextUI\\\\InvalidSocketExc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 842,
                "context": "/..' . '/phpunit/phpunit/src/TextUI/Help.php',\n        'PHPUnit\\\\TextUI\\\\InvalidSocketException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Exception/InvalidSocketException.php',\n        'PHPUn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 843,
                "context": "/TextUI/Exception/InvalidSocketException.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\DefaultPrinter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Printer/DefaultPrinter.php',\n        'PHPUnit\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 844,
                "context": "     'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\BeforeTestClassMethodErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/BeforeTestC"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 845,
                "context": "redSubscriber.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\ProgressPrinter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/ProgressPrinter.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 846,
                "context": "er/ProgressPrinter.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\Subscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/Subscriber."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 847,
                "context": "php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestConsideredRiskySubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestConside"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 848,
                "context": "scriber.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestErroredSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestErrored"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 849,
                "context": "bscriber.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestFailedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestFailedS"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 850,
                "context": "criber.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestFinishedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestFinishe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 851,
                "context": "hp',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestMarkedIncompleteSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestMarkedI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 852,
                "context": "criber.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestPreparedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestPrepare"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 853,
                "context": "       'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestRunnerExecutionStartedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestRunnerE"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 854,
                "context": "scriber.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestSkippedSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestSkipped"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 855,
                "context": "\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 856,
                "context": ".php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredErrorSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 857,
                "context": "php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 858,
                "context": "      'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredPhpDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 859,
                "context": "',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredPhpNoticeSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 860,
                "context": ",\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredPhpWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 861,
                "context": "  'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredPhpunitDeprecationSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 862,
                "context": "      'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredPhpunitWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 863,
                "context": "hp',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ProgressPrinter\\\\TestTriggeredWarningSubscriber' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ProgressPrinter/Subscriber/TestTrigger"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 864,
                "context": "r/TestTriggeredWarningSubscriber.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\ResultPrinter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/ResultPrinter.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 865,
                "context": "/Default/ResultPrinter.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Default\\\\UnexpectedOutputPrinter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Default/UnexpectedOutputPrinter.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 866,
                "context": "rc/TextUI/Output/Default/UnexpectedOutputPrinter.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Facade' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Facade.php',\n        'PHPUnit\\\\TextUI\\\\Output\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 867,
                "context": " '/phpunit/phpunit/src/TextUI/Output/Facade.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\NullPrinter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Printer/NullPrinter.php',\n        'PHPUnit\\\\Te"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 868,
                "context": "t/phpunit/src/TextUI/Output/Printer/NullPrinter.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\Printer' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/Printer/Printer.php',\n        'PHPUnit\\\\TextUI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 869,
                "context": "hpunit/src/TextUI/Output/Printer/Printer.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\SummaryPrinter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/SummaryPrinter.php',\n        'PHPUnit\\\\TextUI\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 870,
                "context": "src/TextUI/Output/SummaryPrinter.php',\n        'PHPUnit\\\\TextUI\\\\Output\\\\TestDox\\\\ResultPrinter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Output/TestDox/ResultPrinter.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 871,
                "context": "hpunit/src/TextUI/Output/TestDox/ResultPrinter.php',\n        'PHPUnit\\\\TextUI\\\\RuntimeException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Exception/RuntimeException.php',\n        'PHPUnit\\\\Te"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 872,
                "context": "t/src/TextUI/Exception/RuntimeException.php',\n        'PHPUnit\\\\TextUI\\\\ShellExitCodeCalculator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/ShellExitCodeCalculator.php',\n        'PHPUnit\\\\TextU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 873,
                "context": "c/TextUI/ShellExitCodeCalculator.php',\n        'PHPUnit\\\\TextUI\\\\TestDirectoryNotFoundException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Exception/TestDirectoryNotFoundException.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 874,
                "context": "eption/TestDirectoryNotFoundException.php',\n        'PHPUnit\\\\TextUI\\\\TestFileNotFoundException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Exception/TestFileNotFoundException.php',\n        'PH"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 875,
                "context": "punit/src/TextUI/Exception/TestFileNotFoundException.php',\n        'PHPUnit\\\\TextUI\\\\TestRunner' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/TestRunner.php',\n        'PHPUnit\\\\TextUI\\\\TestSuiteF"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 876,
                "context": "/phpunit/phpunit/src/TextUI/TestRunner.php',\n        'PHPUnit\\\\TextUI\\\\TestSuiteFilterProcessor' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/TestSuiteFilterProcessor.php',\n        'PHPUnit\\\\Text"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 877,
                "context": "uiteFilterProcessor.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CannotFindSchemaException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Exception/CannotFindSchemaException.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 878,
                "context": "indSchemaException.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\CodeCoverage' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/CodeCoverage.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 879,
                "context": "age/CodeCoverage.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\Report\\\\Clover' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/Report/Clover.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 880,
                "context": "Report/Clover.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\Report\\\\Cobertura' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/Report/Cobertura.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 881,
                "context": "Report/Cobertura.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\Report\\\\Crap4j' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/Report/Crap4j.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 882,
                "context": "rage/Report/Crap4j.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\Report\\\\Html' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/Report/Html.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 883,
                "context": "overage/Report/Html.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\Report\\\\Php' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/Report/Php.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 884,
                "context": "overage/Report/Php.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\Report\\\\Text' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/Report/Text.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 885,
                "context": "overage/Report/Text.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CodeCoverage\\\\Report\\\\Xml' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/CodeCoverage/Report/Xml.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 886,
                "context": "ion/Xml/CodeCoverage/Report/Xml.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Configuration' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Configuration.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 887,
                "context": "nfiguration/Xml/Configuration.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\ConvertLogTypes' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/ConvertLogType"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 888,
                "context": "ations/ConvertLogTypes.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CoverageCloverToReport' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/CoverageClover"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 889,
                "context": "CoverageCloverToReport.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CoverageCrap4jToReport' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/CoverageCrap4j"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 890,
                "context": "s/CoverageCrap4jToReport.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CoverageHtmlToReport' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/CoverageHtmlTo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 891,
                "context": "ions/CoverageHtmlToReport.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CoveragePhpToReport' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/CoveragePhpToR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 892,
                "context": "ions/CoveragePhpToReport.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CoverageTextToReport' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/CoverageTextTo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 893,
                "context": "ions/CoverageTextToReport.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\CoverageXmlToReport' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/CoverageXmlToR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 894,
                "context": "ions/CoverageXmlToReport.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\DefaultConfiguration' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/DefaultConfiguration.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 895,
                "context": "figuration/Xml/DefaultConfiguration.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Exception.php',\n        'PHPUnit\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 896,
                "context": "ion/Xml/Exception.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\FailedSchemaDetectionResult' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/SchemaDetector/FailedSchemaDetectio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 897,
                "context": "etector/FailedSchemaDetectionResult.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Generator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Generator.php',\n        'PHPUnit\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 898,
                "context": "src/TextUI/Configuration/Xml/Generator.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Groups' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Groups.php',\n        'PHPUnit\\\\Text"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 899,
                "context": "n/Xml/Groups.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\IntroduceCacheDirectoryAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/IntroduceCache"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 900,
                "context": "heDirectoryAttribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\IntroduceCoverageElement' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/IntroduceCover"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 901,
                "context": "ceCoverageElement.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\LoadedFromFileConfiguration' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/LoadedFromFileConfiguration.php',\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 902,
                "context": "ration/Xml/LoadedFromFileConfiguration.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Loader' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Loader.php',\n        'PHPUnit\\\\Text"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 903,
                "context": "Configuration/Xml/Loader.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\LogToReportMigration' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/LogToReportMig"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 904,
                "context": "igrations/LogToReportMigration.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Logging\\\\Junit' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Logging/Junit.php',\n        'PHPUni"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 905,
                "context": "figuration/Xml/Logging/Junit.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Logging\\\\Logging' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Logging/Logging.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 906,
                "context": "uration/Xml/Logging/Logging.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Logging\\\\TeamCity' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Logging/TeamCity.php',\n        'PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 907,
                "context": "n/Xml/Logging/TeamCity.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Logging\\\\TestDox\\\\Html' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Logging/TestDox/Html.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 908,
                "context": "l/Logging/TestDox/Html.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Logging\\\\TestDox\\\\Text' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Logging/TestDox/Text.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 909,
                "context": "figuration/Xml/Logging/TestDox/Text.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Migration' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/Migration.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 910,
                "context": "gration/Migrations/Migration.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\MigrationBuilder' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/MigrationBuilder.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 911,
                "context": "Migration/MigrationBuilder.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\MigrationException' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/MigrationException.php',\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 912,
                "context": "ion/Xml/Migration/MigrationException.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Migrator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrator.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 913,
                "context": "r.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\MoveAttributesFromFilterWhitelistToCoverage' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/MoveAttributes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 914,
                "context": "stToCoverage.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\MoveAttributesFromRootToCoverage' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/MoveAttributes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 915,
                "context": "ootToCoverage.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\MoveCoverageDirectoriesToSource' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/MoveCoverageDi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 916,
                "context": "oriesToSource.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\MoveWhitelistExcludesToCoverage' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/MoveWhitelistE"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 917,
                "context": "desToCoverage.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\MoveWhitelistIncludesToCoverage' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/MoveWhitelistI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 918,
                "context": "tions/MoveWhitelistIncludesToCoverage.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\PHPUnit' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/PHPUnit.php',\n        'PHPUnit\\\\Tex"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 919,
                "context": "  'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveBeStrictAboutResourceUsageDuringSmallTestsAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveBeStrict"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 920,
                "context": "hp',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveBeStrictAboutTodoAnnotatedTestsAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveBeStrict"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 921,
                "context": "TestsAttribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveCacheResultFileAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveCacheRes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 922,
                "context": "esultFileAttribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveCacheTokensAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveCacheTok"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 923,
                "context": "ribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveConversionToExceptionsAttributes' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveConversi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 924,
                "context": ".php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveCoverageElementCacheDirectoryAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveCoverage"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 925,
                "context": "        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveCoverageElementProcessUncoveredFilesAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveCoverage"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 926,
                "context": "cessUncoveredFilesAttribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveEmptyFilter' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveEmptyFil"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 927,
                "context": "/Migrations/RemoveEmptyFilter.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveListeners' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveListener"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 928,
                "context": "ion/Migrations/RemoveListeners.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveLogTypes' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveLogTypes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 929,
                "context": "grations/RemoveLogTypes.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveLoggingElements' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveLoggingE"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 930,
                "context": "eLoggingElements.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveNoInteractionAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveNoIntera"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 931,
                "context": "oInteractionAttribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemovePrinterAttributes' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemovePrinterA"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 932,
                "context": "PUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveRegisterMockObjectsFromTestArgumentsRecursivelyAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveRegister"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 933,
                "context": "cursivelyAttribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveTestDoxGroupsElement' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveTestDoxG"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 934,
                "context": "GroupsElement.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveTestSuiteLoaderAttributes' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveTestSuit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 935,
                "context": "tSuiteLoaderAttributes.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RemoveVerboseAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveVerboseA"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 936,
                "context": "tribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RenameBackupStaticAttributesAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RenameBackupSt"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 937,
                "context": ".php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RenameBeStrictAboutCoversAnnotationAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RenameBeStrict"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 938,
                "context": "ttribute.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\RenameForceCoversAnnotationAttribute' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RenameForceCov"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 939,
                "context": ",\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\ReplaceRestrictDeprecationsWithIgnoreDeprecations' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/ReplaceRestric"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 940,
                "context": "sWithIgnoreDeprecations.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\SchemaDetectionResult' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/SchemaDetector/SchemaDetectionResul"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 941,
                "context": "Detector/SchemaDetectionResult.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\SchemaDetector' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/SchemaDetector/SchemaDetector.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 942,
                "context": "ml/SchemaDetector/SchemaDetector.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\SchemaFinder' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/SchemaFinder.php',\n        'PHPUnit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 943,
                "context": "nfiguration/Xml/SchemaFinder.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\SnapshotNodeList' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/SnapshotNodeList.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 944,
                "context": "pshotNodeList.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\SuccessfulSchemaDetectionResult' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/SchemaDetector/SuccessfulSchemaDete"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 945,
                "context": "ccessfulSchemaDetectionResult.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\TestSuiteMapper' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/TestSuiteMapper.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 946,
                "context": "tion/Xml/TestSuiteMapper.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\UpdateSchemaLocation' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/UpdateSchemaLo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 947,
                "context": "rations/UpdateSchemaLocation.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\ValidationResult' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Validator/ValidationResult.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 948,
                "context": "tion/Xml/Validator/ValidationResult.php',\n        'PHPUnit\\\\TextUI\\\\XmlConfiguration\\\\Validator' => __DIR__ . '/..' . '/phpunit/phpunit/src/TextUI/Configuration/Xml/Validator/Validator.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 949,
                "context": "it/phpunit/src/TextUI/Configuration/Xml/Validator/Validator.php',\n        'PHPUnit\\\\Util\\\\Color' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Color.php',\n        'PHPUnit\\\\Util\\\\Exception' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 950,
                "context": "' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Color.php',\n        'PHPUnit\\\\Util\\\\Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exception/Exception.php',\n        'PHPUnit\\\\Util\\\\Exclu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 951,
                "context": "/..' . '/phpunit/phpunit/src/Util/Exception/Exception.php',\n        'PHPUnit\\\\Util\\\\ExcludeList' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/ExcludeList.php',\n        'PHPUnit\\\\Util\\\\Exporter' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 952,
                "context": "__DIR__ . '/..' . '/phpunit/phpunit/src/Util/ExcludeList.php',\n        'PHPUnit\\\\Util\\\\Exporter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exporter.php',\n        'PHPUnit\\\\Util\\\\Filesystem' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 953,
                "context": " __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exporter.php',\n        'PHPUnit\\\\Util\\\\Filesystem' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Filesystem.php',\n        'PHPUnit\\\\Util\\\\Filter' => __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 954,
                "context": "=> __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Filesystem.php',\n        'PHPUnit\\\\Util\\\\Filter' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Filter.php',\n        'PHPUnit\\\\Util\\\\GlobalState' => __"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 955,
                "context": "> __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Filter.php',\n        'PHPUnit\\\\Util\\\\GlobalState' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/GlobalState.php',\n        'PHPUnit\\\\Util\\\\Http\\\\Downloa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 956,
                "context": ". '/..' . '/phpunit/phpunit/src/Util/GlobalState.php',\n        'PHPUnit\\\\Util\\\\Http\\\\Downloader' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Http/Downloader.php',\n        'PHPUnit\\\\Util\\\\Http\\\\Php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 957,
                "context": " . '/phpunit/phpunit/src/Util/Http/Downloader.php',\n        'PHPUnit\\\\Util\\\\Http\\\\PhpDownloader' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Http/PhpDownloader.php',\n        'PHPUnit\\\\Util\\\\Invali"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 958,
                "context": "nit/phpunit/src/Util/Http/PhpDownloader.php',\n        'PHPUnit\\\\Util\\\\InvalidDirectoryException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exception/InvalidDirectoryException.php',\n        'PHPU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 959,
                "context": "src/Util/Exception/InvalidDirectoryException.php',\n        'PHPUnit\\\\Util\\\\InvalidJsonException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exception/InvalidJsonException.php',\n        'PHPUnit\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 960,
                "context": "il/Exception/InvalidJsonException.php',\n        'PHPUnit\\\\Util\\\\InvalidVersionOperatorException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exception/InvalidVersionOperatorException.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 961,
                "context": "t/phpunit/src/Util/Exception/InvalidVersionOperatorException.php',\n        'PHPUnit\\\\Util\\\\Json' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Json.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\DefaultJobRunne"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 962,
                "context": "_ . '/..' . '/phpunit/phpunit/src/Util/Json.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\DefaultJobRunner' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/PHP/DefaultJobRunner.php',\n        'PHPUnit\\\\Util\\\\PHP\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 963,
                "context": " '/..' . '/phpunit/phpunit/src/Util/PHP/DefaultJobRunner.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\Job' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/PHP/Job.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\JobRunner' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 964,
                "context": "DIR__ . '/..' . '/phpunit/phpunit/src/Util/PHP/Job.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\JobRunner' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/PHP/JobRunner.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\JobRun"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 965,
                "context": ". '/phpunit/phpunit/src/Util/PHP/JobRunner.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\JobRunnerRegistry' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/PHP/JobRunnerRegistry.php',\n        'PHPUnit\\\\Util\\\\PHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 966,
                "context": "t/phpunit/src/Util/PHP/JobRunnerRegistry.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\PhpProcessException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exception/PhpProcessException.php',\n        'PHPUnit\\\\U"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 967,
                "context": "hpunit/phpunit/src/Util/Exception/PhpProcessException.php',\n        'PHPUnit\\\\Util\\\\PHP\\\\Result' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/PHP/Result.php',\n        'PHPUnit\\\\Util\\\\Reflection' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 968,
                "context": "_DIR__ . '/..' . '/phpunit/phpunit/src/Util/PHP/Result.php',\n        'PHPUnit\\\\Util\\\\Reflection' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Reflection.php',\n        'PHPUnit\\\\Util\\\\Test' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 969,
                "context": "' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Reflection.php',\n        'PHPUnit\\\\Util\\\\Test' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Test.php',\n        'PHPUnit\\\\Util\\\\ThrowableToStringMap"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 970,
                "context": ". '/..' . '/phpunit/phpunit/src/Util/Test.php',\n        'PHPUnit\\\\Util\\\\ThrowableToStringMapper' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/ThrowableToStringMapper.php',\n        'PHPUnit\\\\Util\\\\V"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 971,
                "context": "hpunit/src/Util/ThrowableToStringMapper.php',\n        'PHPUnit\\\\Util\\\\VersionComparisonOperator' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/VersionComparisonOperator.php',\n        'PHPUnit\\\\Util\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 972,
                "context": " '/..' . '/phpunit/phpunit/src/Util/VersionComparisonOperator.php',\n        'PHPUnit\\\\Util\\\\Xml' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Xml/Xml.php',\n        'PHPUnit\\\\Util\\\\Xml\\\\Loader' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 973,
                "context": " __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Xml/Xml.php',\n        'PHPUnit\\\\Util\\\\Xml\\\\Loader' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Xml/Loader.php',\n        'PHPUnit\\\\Util\\\\Xml\\\\XmlExcept"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 974,
                "context": ". '/..' . '/phpunit/phpunit/src/Util/Xml/Loader.php',\n        'PHPUnit\\\\Util\\\\Xml\\\\XmlException' => __DIR__ . '/..' . '/phpunit/phpunit/src/Util/Exception/XmlException.php',\n        'PharIo\\\\Manifest\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 975,
                "context": " '/phpunit/phpunit/src/Util/Exception/XmlException.php',\n        'PharIo\\\\Manifest\\\\Application' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Application.php',\n        'PharIo\\\\Manifest\\\\Applica"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 976,
                "context": ".' . '/phar-io/manifest/src/values/Application.php',\n        'PharIo\\\\Manifest\\\\ApplicationName' => __DIR__ . '/..' . '/phar-io/manifest/src/values/ApplicationName.php',\n        'PharIo\\\\Manifest\\\\Aut"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 977,
                "context": ". '/..' . '/phar-io/manifest/src/values/ApplicationName.php',\n        'PharIo\\\\Manifest\\\\Author' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Author.php',\n        'PharIo\\\\Manifest\\\\AuthorCollec"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 978,
                "context": " '/..' . '/phar-io/manifest/src/values/Author.php',\n        'PharIo\\\\Manifest\\\\AuthorCollection' => __DIR__ . '/..' . '/phar-io/manifest/src/values/AuthorCollection.php',\n        'PharIo\\\\Manifest\\\\Au"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 979,
                "context": "/manifest/src/values/AuthorCollection.php',\n        'PharIo\\\\Manifest\\\\AuthorCollectionIterator' => __DIR__ . '/..' . '/phar-io/manifest/src/values/AuthorCollectionIterator.php',\n        'PharIo\\\\Mani"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 980,
                "context": "-io/manifest/src/values/AuthorCollectionIterator.php',\n        'PharIo\\\\Manifest\\\\AuthorElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/AuthorElement.php',\n        'PharIo\\\\Manifest\\\\AuthorEl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 981,
                "context": "phar-io/manifest/src/xml/AuthorElement.php',\n        'PharIo\\\\Manifest\\\\AuthorElementCollection' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/AuthorElementCollection.php',\n        'PharIo\\\\Manifest"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 982,
                "context": "r-io/manifest/src/xml/AuthorElementCollection.php',\n        'PharIo\\\\Manifest\\\\BundledComponent' => __DIR__ . '/..' . '/phar-io/manifest/src/values/BundledComponent.php',\n        'PharIo\\\\Manifest\\\\Bu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 983,
                "context": "anifest/src/values/BundledComponent.php',\n        'PharIo\\\\Manifest\\\\BundledComponentCollection' => __DIR__ . '/..' . '/phar-io/manifest/src/values/BundledComponentCollection.php',\n        'PharIo\\\\Ma"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 984,
                "context": "/BundledComponentCollection.php',\n        'PharIo\\\\Manifest\\\\BundledComponentCollectionIterator' => __DIR__ . '/..' . '/phar-io/manifest/src/values/BundledComponentCollectionIterator.php',\n        'Ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 985,
                "context": "t/src/values/BundledComponentCollectionIterator.php',\n        'PharIo\\\\Manifest\\\\BundlesElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/BundlesElement.php',\n        'PharIo\\\\Manifest\\\\Compone"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 986,
                "context": "' . '/phar-io/manifest/src/xml/BundlesElement.php',\n        'PharIo\\\\Manifest\\\\ComponentElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ComponentElement.php',\n        'PharIo\\\\Manifest\\\\Compo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 987,
                "context": "o/manifest/src/xml/ComponentElement.php',\n        'PharIo\\\\Manifest\\\\ComponentElementCollection' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ComponentElementCollection.php',\n        'PharIo\\\\Manif"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 988,
                "context": "io/manifest/src/xml/ComponentElementCollection.php',\n        'PharIo\\\\Manifest\\\\ContainsElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ContainsElement.php',\n        'PharIo\\\\Manifest\\\\Copyri"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 989,
                "context": " . '/phar-io/manifest/src/xml/ContainsElement.php',\n        'PharIo\\\\Manifest\\\\CopyrightElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/CopyrightElement.php',\n        'PharIo\\\\Manifest\\\\Copyr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 990,
                "context": "phar-io/manifest/src/xml/CopyrightElement.php',\n        'PharIo\\\\Manifest\\\\CopyrightInformation' => __DIR__ . '/..' . '/phar-io/manifest/src/values/CopyrightInformation.php',\n        'PharIo\\\\Manifest"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 991,
                "context": "-io/manifest/src/values/CopyrightInformation.php',\n        'PharIo\\\\Manifest\\\\ElementCollection' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ElementCollection.php',\n        'PharIo\\\\Manifest\\\\Elem"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 992,
                "context": "/manifest/src/xml/ElementCollection.php',\n        'PharIo\\\\Manifest\\\\ElementCollectionException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/ElementCollectionException.php',\n        'PharIo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 993,
                "context": "ar-io/manifest/src/exceptions/ElementCollectionException.php',\n        'PharIo\\\\Manifest\\\\Email' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Email.php',\n        'PharIo\\\\Manifest\\\\Exception' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 994,
                "context": "_DIR__ . '/..' . '/phar-io/manifest/src/values/Email.php',\n        'PharIo\\\\Manifest\\\\Exception' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/Exception.php',\n        'PharIo\\\\Manifest\\\\ExtEl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 995,
                "context": "'/..' . '/phar-io/manifest/src/exceptions/Exception.php',\n        'PharIo\\\\Manifest\\\\ExtElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ExtElement.php',\n        'PharIo\\\\Manifest\\\\ExtElementC"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 996,
                "context": "' . '/phar-io/manifest/src/xml/ExtElement.php',\n        'PharIo\\\\Manifest\\\\ExtElementCollection' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ExtElementCollection.php',\n        'PharIo\\\\Manifest\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 997,
                "context": ".' . '/phar-io/manifest/src/xml/ExtElementCollection.php',\n        'PharIo\\\\Manifest\\\\Extension' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Extension.php',\n        'PharIo\\\\Manifest\\\\Extension"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 998,
                "context": "..' . '/phar-io/manifest/src/values/Extension.php',\n        'PharIo\\\\Manifest\\\\ExtensionElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ExtensionElement.php',\n        'PharIo\\\\Manifest\\\\Inval"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 999,
                "context": "ifest/src/xml/ExtensionElement.php',\n        'PharIo\\\\Manifest\\\\InvalidApplicationNameException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/InvalidApplicationNameException.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1000,
                "context": "ceptions/InvalidApplicationNameException.php',\n        'PharIo\\\\Manifest\\\\InvalidEmailException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/InvalidEmailException.php',\n        'PharIo\\\\Man"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1001,
                "context": "ifest/src/exceptions/InvalidEmailException.php',\n        'PharIo\\\\Manifest\\\\InvalidUrlException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/InvalidUrlException.php',\n        'PharIo\\\\Manif"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1002,
                "context": " '/phar-io/manifest/src/exceptions/InvalidUrlException.php',\n        'PharIo\\\\Manifest\\\\Library' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Library.php',\n        'PharIo\\\\Manifest\\\\License' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1003,
                "context": "_DIR__ . '/..' . '/phar-io/manifest/src/values/Library.php',\n        'PharIo\\\\Manifest\\\\License' => __DIR__ . '/..' . '/phar-io/manifest/src/values/License.php',\n        'PharIo\\\\Manifest\\\\LicenseElem"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1004,
                "context": ". '/..' . '/phar-io/manifest/src/values/License.php',\n        'PharIo\\\\Manifest\\\\LicenseElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/LicenseElement.php',\n        'PharIo\\\\Manifest\\\\Manifes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1005,
                "context": "_ . '/..' . '/phar-io/manifest/src/xml/LicenseElement.php',\n        'PharIo\\\\Manifest\\\\Manifest' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Manifest.php',\n        'PharIo\\\\Manifest\\\\ManifestDo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1006,
                "context": "/..' . '/phar-io/manifest/src/values/Manifest.php',\n        'PharIo\\\\Manifest\\\\ManifestDocument' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ManifestDocument.php',\n        'PharIo\\\\Manifest\\\\Manif"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1007,
                "context": "io/manifest/src/xml/ManifestDocument.php',\n        'PharIo\\\\Manifest\\\\ManifestDocumentException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/ManifestDocumentException.php',\n        'PharIo\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1008,
                "context": "ons/ManifestDocumentException.php',\n        'PharIo\\\\Manifest\\\\ManifestDocumentLoadingException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/ManifestDocumentLoadingException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1009,
                "context": "ptions/ManifestDocumentLoadingException.php',\n        'PharIo\\\\Manifest\\\\ManifestDocumentMapper' => __DIR__ . '/..' . '/phar-io/manifest/src/ManifestDocumentMapper.php',\n        'PharIo\\\\Manifest\\\\Man"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1010,
                "context": "est/src/ManifestDocumentMapper.php',\n        'PharIo\\\\Manifest\\\\ManifestDocumentMapperException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/ManifestDocumentMapperException.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1011,
                "context": "src/exceptions/ManifestDocumentMapperException.php',\n        'PharIo\\\\Manifest\\\\ManifestElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/ManifestElement.php',\n        'PharIo\\\\Manifest\\\\Manife"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1012,
                "context": "r-io/manifest/src/xml/ManifestElement.php',\n        'PharIo\\\\Manifest\\\\ManifestElementException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/ManifestElementException.php',\n        'PharIo\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1013,
                "context": "anifest/src/exceptions/ManifestElementException.php',\n        'PharIo\\\\Manifest\\\\ManifestLoader' => __DIR__ . '/..' . '/phar-io/manifest/src/ManifestLoader.php',\n        'PharIo\\\\Manifest\\\\ManifestLoa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1014,
                "context": " '/phar-io/manifest/src/ManifestLoader.php',\n        'PharIo\\\\Manifest\\\\ManifestLoaderException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/ManifestLoaderException.php',\n        'PharIo\\\\M"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1015,
                "context": "fest/src/exceptions/ManifestLoaderException.php',\n        'PharIo\\\\Manifest\\\\ManifestSerializer' => __DIR__ . '/..' . '/phar-io/manifest/src/ManifestSerializer.php',\n        'PharIo\\\\Manifest\\\\NoEmail"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1016,
                "context": "har-io/manifest/src/ManifestSerializer.php',\n        'PharIo\\\\Manifest\\\\NoEmailAddressException' => __DIR__ . '/..' . '/phar-io/manifest/src/exceptions/NoEmailAddressException.php',\n        'PharIo\\\\M"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1017,
                "context": "-io/manifest/src/exceptions/NoEmailAddressException.php',\n        'PharIo\\\\Manifest\\\\PhpElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/PhpElement.php',\n        'PharIo\\\\Manifest\\\\PhpExtensio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1018,
                "context": " '/phar-io/manifest/src/xml/PhpElement.php',\n        'PharIo\\\\Manifest\\\\PhpExtensionRequirement' => __DIR__ . '/..' . '/phar-io/manifest/src/values/PhpExtensionRequirement.php',\n        'PharIo\\\\Manif"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1019,
                "context": "ifest/src/values/PhpExtensionRequirement.php',\n        'PharIo\\\\Manifest\\\\PhpVersionRequirement' => __DIR__ . '/..' . '/phar-io/manifest/src/values/PhpVersionRequirement.php',\n        'PharIo\\\\Manifes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1020,
                "context": "/phar-io/manifest/src/values/PhpVersionRequirement.php',\n        'PharIo\\\\Manifest\\\\Requirement' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Requirement.php',\n        'PharIo\\\\Manifest\\\\Require"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1021,
                "context": "/phar-io/manifest/src/values/Requirement.php',\n        'PharIo\\\\Manifest\\\\RequirementCollection' => __DIR__ . '/..' . '/phar-io/manifest/src/values/RequirementCollection.php',\n        'PharIo\\\\Manifes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1022,
                "context": "src/values/RequirementCollection.php',\n        'PharIo\\\\Manifest\\\\RequirementCollectionIterator' => __DIR__ . '/..' . '/phar-io/manifest/src/values/RequirementCollectionIterator.php',\n        'PharIo\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1023,
                "context": "ifest/src/values/RequirementCollectionIterator.php',\n        'PharIo\\\\Manifest\\\\RequiresElement' => __DIR__ . '/..' . '/phar-io/manifest/src/xml/RequiresElement.php',\n        'PharIo\\\\Manifest\\\\Type' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1024,
                "context": "IR__ . '/..' . '/phar-io/manifest/src/xml/RequiresElement.php',\n        'PharIo\\\\Manifest\\\\Type' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Type.php',\n        'PharIo\\\\Manifest\\\\Url' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1025,
                "context": "e' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Type.php',\n        'PharIo\\\\Manifest\\\\Url' => __DIR__ . '/..' . '/phar-io/manifest/src/values/Url.php',\n        'PharIo\\\\Version\\\\AbstractVersionC"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1026,
                "context": "' . '/phar-io/manifest/src/values/Url.php',\n        'PharIo\\\\Version\\\\AbstractVersionConstraint' => __DIR__ . '/..' . '/phar-io/version/src/constraints/AbstractVersionConstraint.php',\n        'PharIo\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1027,
                "context": "constraints/AbstractVersionConstraint.php',\n        'PharIo\\\\Version\\\\AndVersionConstraintGroup' => __DIR__ . '/..' . '/phar-io/version/src/constraints/AndVersionConstraintGroup.php',\n        'PharIo\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1028,
                "context": "/src/constraints/AndVersionConstraintGroup.php',\n        'PharIo\\\\Version\\\\AnyVersionConstraint' => __DIR__ . '/..' . '/phar-io/version/src/constraints/AnyVersionConstraint.php',\n        'PharIo\\\\Vers"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1029,
                "context": "r-io/version/src/constraints/AnyVersionConstraint.php',\n        'PharIo\\\\Version\\\\BuildMetaData' => __DIR__ . '/..' . '/phar-io/version/src/BuildMetaData.php',\n        'PharIo\\\\Version\\\\ExactVersionCo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1030,
                "context": ".' . '/phar-io/version/src/BuildMetaData.php',\n        'PharIo\\\\Version\\\\ExactVersionConstraint' => __DIR__ . '/..' . '/phar-io/version/src/constraints/ExactVersionConstraint.php',\n        'PharIo\\\\Ve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1031,
                "context": "har-io/version/src/constraints/ExactVersionConstraint.php',\n        'PharIo\\\\Version\\\\Exception' => __DIR__ . '/..' . '/phar-io/version/src/exceptions/Exception.php',\n        'PharIo\\\\Version\\\\Greater"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1032,
                "context": "/src/exceptions/Exception.php',\n        'PharIo\\\\Version\\\\GreaterThanOrEqualToVersionConstraint' => __DIR__ . '/..' . '/phar-io/version/src/constraints/GreaterThanOrEqualToVersionConstraint.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1033,
                "context": "ThanOrEqualToVersionConstraint.php',\n        'PharIo\\\\Version\\\\InvalidPreReleaseSuffixException' => __DIR__ . '/..' . '/phar-io/version/src/exceptions/InvalidPreReleaseSuffixException.php',\n        'P"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1034,
                "context": "ptions/InvalidPreReleaseSuffixException.php',\n        'PharIo\\\\Version\\\\InvalidVersionException' => __DIR__ . '/..' . '/phar-io/version/src/exceptions/InvalidVersionException.php',\n        'PharIo\\\\Ve"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1035,
                "context": "src/exceptions/InvalidVersionException.php',\n        'PharIo\\\\Version\\\\NoBuildMetaDataException' => __DIR__ . '/..' . '/phar-io/version/src/exceptions/NoBuildMetaDataException.php',\n        'PharIo\\\\V"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1036,
                "context": "exceptions/NoBuildMetaDataException.php',\n        'PharIo\\\\Version\\\\NoPreReleaseSuffixException' => __DIR__ . '/..' . '/phar-io/version/src/exceptions/NoPreReleaseSuffixException.php',\n        'PharIo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1037,
                "context": "exceptions/NoPreReleaseSuffixException.php',\n        'PharIo\\\\Version\\\\OrVersionConstraintGroup' => __DIR__ . '/..' . '/phar-io/version/src/constraints/OrVersionConstraintGroup.php',\n        'PharIo\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1038,
                "context": "rsion/src/constraints/OrVersionConstraintGroup.php',\n        'PharIo\\\\Version\\\\PreReleaseSuffix' => __DIR__ . '/..' . '/phar-io/version/src/PreReleaseSuffix.php',\n        'PharIo\\\\Version\\\\SpecificMaj"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1039,
                "context": "ion/src/PreReleaseSuffix.php',\n        'PharIo\\\\Version\\\\SpecificMajorAndMinorVersionConstraint' => __DIR__ . '/..' . '/phar-io/version/src/constraints/SpecificMajorAndMinorVersionConstraint.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1040,
                "context": "icMajorAndMinorVersionConstraint.php',\n        'PharIo\\\\Version\\\\SpecificMajorVersionConstraint' => __DIR__ . '/..' . '/phar-io/version/src/constraints/SpecificMajorVersionConstraint.php',\n        'Ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1041,
                "context": "ficMajorVersionConstraint.php',\n        'PharIo\\\\Version\\\\UnsupportedVersionConstraintException' => __DIR__ . '/..' . '/phar-io/version/src/exceptions/UnsupportedVersionConstraintException.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1042,
                "context": "on/src/exceptions/UnsupportedVersionConstraintException.php',\n        'PharIo\\\\Version\\\\Version' => __DIR__ . '/..' . '/phar-io/version/src/Version.php',\n        'PharIo\\\\Version\\\\VersionConstraint' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1043,
                "context": "DIR__ . '/..' . '/phar-io/version/src/Version.php',\n        'PharIo\\\\Version\\\\VersionConstraint' => __DIR__ . '/..' . '/phar-io/version/src/constraints/VersionConstraint.php',\n        'PharIo\\\\Version"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1044,
                "context": "rsion/src/constraints/VersionConstraint.php',\n        'PharIo\\\\Version\\\\VersionConstraintParser' => __DIR__ . '/..' . '/phar-io/version/src/VersionConstraintParser.php',\n        'PharIo\\\\Version\\\\Vers"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1045,
                "context": "r-io/version/src/VersionConstraintParser.php',\n        'PharIo\\\\Version\\\\VersionConstraintValue' => __DIR__ . '/..' . '/phar-io/version/src/VersionConstraintValue.php',\n        'PharIo\\\\Version\\\\Versi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1046,
                "context": ".' . '/phar-io/version/src/VersionConstraintValue.php',\n        'PharIo\\\\Version\\\\VersionNumber' => __DIR__ . '/..' . '/phar-io/version/src/VersionNumber.php',\n        'SebastianBergmann\\\\CliParser\\\\A"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1047,
                "context": "version/src/VersionNumber.php',\n        'SebastianBergmann\\\\CliParser\\\\AmbiguousOptionException' => __DIR__ . '/..' . '/sebastian/cli-parser/src/exceptions/AmbiguousOptionException.php',\n        'Seba"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1048,
                "context": "/src/exceptions/AmbiguousOptionException.php',\n        'SebastianBergmann\\\\CliParser\\\\Exception' => __DIR__ . '/..' . '/sebastian/cli-parser/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1049,
                "context": "ions/Exception.php',\n        'SebastianBergmann\\\\CliParser\\\\OptionDoesNotAllowArgumentException' => __DIR__ . '/..' . '/sebastian/cli-parser/src/exceptions/OptionDoesNotAllowArgumentException.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1050,
                "context": "eptions/OptionDoesNotAllowArgumentException.php',\n        'SebastianBergmann\\\\CliParser\\\\Parser' => __DIR__ . '/..' . '/sebastian/cli-parser/src/Parser.php',\n        'SebastianBergmann\\\\CliParser\\\\Req"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1051,
                "context": "/src/Parser.php',\n        'SebastianBergmann\\\\CliParser\\\\RequiredOptionArgumentMissingException' => __DIR__ . '/..' . '/sebastian/cli-parser/src/exceptions/RequiredOptionArgumentMissingException.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1052,
                "context": "ionArgumentMissingException.php',\n        'SebastianBergmann\\\\CliParser\\\\UnknownOptionException' => __DIR__ . '/..' . '/sebastian/cli-parser/src/exceptions/UnknownOptionException.php',\n        'Sebast"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1053,
                "context": "tion.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\BranchAndPathCoverageNotSupportedException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/BranchAndPathCoverageNotSupportedExcepti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1054,
                "context": "dPathCoverageNotSupportedException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\CodeCoverage' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/CodeCoverage.php',\n        'SebastianBergmann\\\\Cod"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1055,
                "context": "rc/CodeCoverage.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Data\\\\ProcessedCodeCoverageData' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Data/ProcessedCodeCoverageData.php',\n        'Seba"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1056,
                "context": "essedCodeCoverageData.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Data\\\\RawCodeCoverageData' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Data/RawCodeCoverageData.php',\n        'SebastianB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1057,
                "context": "age/src/Data/RawCodeCoverageData.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\Driver' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Driver/Driver.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1058,
                "context": "er.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\PathExistsButIsNotDirectoryException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/PathExistsButIsNotDirectoryException.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1059,
                "context": "tsButIsNotDirectoryException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\PcovDriver' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Driver/PcovDriver.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1060,
                "context": "er/PcovDriver.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\PcovNotAvailableException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/PcovNotAvailableException.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1061,
                "context": "tion/PcovNotAvailableException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\Selector' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Driver/Selector.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1062,
                "context": "/Selector.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\WriteOperationFailedException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/WriteOperationFailedException.php',\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1063,
                "context": "teOperationFailedException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\XdebugDriver' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Driver/XdebugDriver.php',\n        'SebastianBergma"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1064,
                "context": "debugDriver.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\XdebugNotAvailableException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/XdebugNotAvailableException.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1065,
                "context": "ableException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\XdebugNotEnabledException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/XdebugNotEnabledException.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1066,
                "context": "tion.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\XdebugVersionNotSupportedException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/XdebugVersionNotSupportedException.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1067,
                "context": "on/XdebugVersionNotSupportedException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Exception' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/Exception.php',\n        'SebastianBergma"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1068,
                "context": "eption/Exception.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\FileCouldNotBeWrittenException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/FileCouldNotBeWrittenException.php',\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1069,
                "context": "Exception/FileCouldNotBeWrittenException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Filter' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Filter.php',\n        'SebastianBergmann\\\\CodeCover"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1070,
                "context": "de-coverage/src/Filter.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\InvalidArgumentException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/InvalidArgumentException.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1071,
                "context": "xception.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\NoCodeCoverageDriverAvailableException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/NoCodeCoverageDriverAvailableException.p"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1072,
                "context": "'SebastianBergmann\\\\CodeCoverage\\\\NoCodeCoverageDriverWithPathCoverageSupportAvailableException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/NoCodeCoverageDriverWithPathCoverageSupp"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1073,
                "context": "ageSupportAvailableException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Node\\\\AbstractNode' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Node/AbstractNode.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1074,
                "context": "de-coverage/src/Node/AbstractNode.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Node\\\\Builder' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Node/Builder.php',\n        'SebastianBergmann\\\\Cod"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1075,
                "context": "-code-coverage/src/Node/Builder.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Node\\\\CrapIndex' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Node/CrapIndex.php',\n        'SebastianBergmann\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1076,
                "context": "ode-coverage/src/Node/CrapIndex.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Node\\\\Directory' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Node/Directory.php',\n        'SebastianBergmann\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1077,
                "context": "php-code-coverage/src/Node/Directory.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Node\\\\File' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Node/File.php',\n        'SebastianBergmann\\\\CodeCo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1078,
                "context": "/php-code-coverage/src/Node/File.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Node\\\\Iterator' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Node/Iterator.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1079,
                "context": "code-coverage/src/Node/Iterator.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\ParserException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/ParserException.php',\n        'Sebastian"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1080,
                "context": "c/Exception/ParserException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\ReflectionException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/ReflectionException.php',\n        'Sebas"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1081,
                "context": "ectionException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\ReportAlreadyFinalizedException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/ReportAlreadyFinalizedException.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1082,
                "context": "/ReportAlreadyFinalizedException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Clover' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Clover.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1083,
                "context": "de-coverage/src/Report/Clover.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Cobertura' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Cobertura.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1084,
                "context": "de-coverage/src/Report/Cobertura.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Crap4j' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Crap4j.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1085,
                "context": "coverage/src/Report/Crap4j.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\Colors' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Html/Colors.php',\n        'SebastianBergman"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1086,
                "context": "/Report/Html/Colors.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\CustomCssFile' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Html/CustomCssFile.php',\n        'Sebastian"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1087,
                "context": "port/Html/CustomCssFile.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\Dashboard' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Html/Renderer/Dashboard.php',\n        'Seba"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1088,
                "context": "Html/Renderer/Dashboard.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\Directory' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Html/Renderer/Directory.php',\n        'Seba"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1089,
                "context": "rt/Html/Renderer/Directory.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\Facade' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Html/Facade.php',\n        'SebastianBergman"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1090,
                "context": "erage/src/Report/Html/Facade.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\File' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Html/Renderer/File.php',\n        'Sebastian"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1091,
                "context": "eport/Html/Renderer/File.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\Renderer' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Html/Renderer.php',\n        'SebastianBergm"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1092,
                "context": "e-coverage/src/Report/Html/Renderer.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\PHP' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/PHP.php',\n        'SebastianBergmann\\\\CodeC"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1093,
                "context": "t/php-code-coverage/src/Report/PHP.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Text' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Text.php',\n        'SebastianBergmann\\\\Code"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1094,
                "context": "ode-coverage/src/Report/Text.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Thresholds' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Thresholds.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1095,
                "context": "Report/Thresholds.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\BuildInformation' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/BuildInformation.php',\n        'Sebasti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1096,
                "context": "port/Xml/BuildInformation.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Coverage' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Coverage.php',\n        'SebastianBergma"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1097,
                "context": "/src/Report/Xml/Coverage.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Directory' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Directory.php',\n        'SebastianBergm"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1098,
                "context": "ge/src/Report/Xml/Directory.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Facade' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Facade.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1099,
                "context": "overage/src/Report/Xml/Facade.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\File' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/File.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1100,
                "context": "overage/src/Report/Xml/File.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Method' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Method.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1101,
                "context": "overage/src/Report/Xml/Method.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Node' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Node.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1102,
                "context": "verage/src/Report/Xml/Node.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Project' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Project.php',\n        'SebastianBergman"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1103,
                "context": "rage/src/Report/Xml/Project.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Report' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Report.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1104,
                "context": "erage/src/Report/Xml/Report.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Source' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Source.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1105,
                "context": "verage/src/Report/Xml/Source.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Tests' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Tests.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1106,
                "context": "verage/src/Report/Xml/Tests.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Totals' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Totals.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1107,
                "context": "overage/src/Report/Xml/Totals.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Xml\\\\Unit' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Report/Xml/Unit.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1108,
                "context": "/Unit.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysisCacheNotConfiguredException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/StaticAnalysisCacheNotConfiguredExceptio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1109,
                "context": "ConfiguredException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\CacheWarmer' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/CacheWarmer.php',\n        'Sebastia"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1110,
                "context": "CacheWarmer.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\CachingFileAnalyser' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/CachingFileAnalyser.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1111,
                "context": "ysis/CachingFileAnalyser.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\Class_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/Value/Class_.php',\n        'Sebasti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1112,
                "context": "e/Class_.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\CodeUnitFindingVisitor' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/CodeUnitFindingVisitor.php',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1113,
                "context": "r.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\ExecutableLinesFindingVisitor' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/ExecutableLinesFindingVisitor.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1114,
                "context": "inesFindingVisitor.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\FileAnalyser' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/FileAnalyser.php',\n        'Sebasti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1115,
                "context": "Analysis/FileAnalyser.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\Function_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/Value/Function_.php',\n        'Seba"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1116,
                "context": "ion_.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\IgnoredLinesFindingVisitor' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/IgnoredLinesFindingVisitor.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1117,
                "context": "dLinesFindingVisitor.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\Interface_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/Value/Interface_.php',\n        'Seb"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1118,
                "context": "is/Value/Interface_.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\LinesOfCode' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/Value/LinesOfCode.php',\n        'Se"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1119,
                "context": "alysis/Value/LinesOfCode.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\Method' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/Value/Method.php',\n        'Sebasti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1120,
                "context": "alue/Method.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\ParsingFileAnalyser' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/ParsingFileAnalyser.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1121,
                "context": "ysis/ParsingFileAnalyser.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\Trait_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/Value/Trait_.php',\n        'Sebasti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1122,
                "context": "nalysis/Value/Trait_.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\StaticAnalysis\\\\Visibility' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/StaticAnalysis/Value/Visibility.php',\n        'Seb"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1123,
                "context": "nalysis/Value/Visibility.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\TestIdMissingException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/TestIdMissingException.php',\n        'Se"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1124,
                "context": "ion/TestIdMissingException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\Class_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/Class_.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1125,
                "context": "get/Class_.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\ClassesThatExtendClass' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/ClassesThatExtendClass.php',\n        'Sebas"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1126,
                "context": "ass.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\ClassesThatImplementInterface' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/ClassesThatImplementInterface.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1127,
                "context": "sThatImplementInterface.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\Function_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/Function_.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1128,
                "context": "hp',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\InvalidCodeCoverageTargetException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/InvalidCodeCoverageTargetException.php',"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1129,
                "context": "overageTargetException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\MapBuilder' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/MapBuilder.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1130,
                "context": "rage/src/Target/MapBuilder.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\Mapper' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/Mapper.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1131,
                "context": "coverage/src/Target/Mapper.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\Method' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/Method.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1132,
                "context": "rage/src/Target/Method.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\Namespace_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/Namespace_.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1133,
                "context": "rage/src/Target/Namespace_.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\Target' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/Target.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1134,
                "context": "rc/Target/Target.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\TargetCollection' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/TargetCollection.php',\n        'SebastianBe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1135,
                "context": "llection.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\TargetCollectionIterator' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/TargetCollectionIterator.php',\n        'Seb"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1136,
                "context": "terator.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\TargetCollectionValidator' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/TargetCollectionValidator.php',\n        'Se"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1137,
                "context": "/TargetCollectionValidator.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\Trait_' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/Trait_.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1138,
                "context": "c/Target/Trait_.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\ValidationFailure' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/ValidationFailure.php',\n        'SebastianB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1139,
                "context": "alidationFailure.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\ValidationResult' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/ValidationResult.php',\n        'SebastianBe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1140,
                "context": "alidationResult.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\Target\\\\ValidationSuccess' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Target/ValidationSuccess.php',\n        'SebastianB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1141,
                "context": "/Target/ValidationSuccess.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestSize\\\\Known' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestSize/Known.php',\n        'SebastianBergmann\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1142,
                "context": "verage/src/TestSize/Known.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestSize\\\\Large' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestSize/Large.php',\n        'SebastianBergmann\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1143,
                "context": "erage/src/TestSize/Large.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestSize\\\\Medium' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestSize/Medium.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1144,
                "context": "erage/src/TestSize/Medium.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestSize\\\\Small' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestSize/Small.php',\n        'SebastianBergmann\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1145,
                "context": "age/src/TestSize/Small.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestSize\\\\TestSize' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestSize/TestSize.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1146,
                "context": "e/src/TestSize/TestSize.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestSize\\\\Unknown' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestSize/Unknown.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1147,
                "context": "/src/TestSize/Unknown.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestStatus\\\\Failure' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestStatus/Failure.php',\n        'SebastianBergman"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1148,
                "context": "/src/TestStatus/Failure.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestStatus\\\\Known' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestStatus/Known.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1149,
                "context": "/src/TestStatus/Known.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestStatus\\\\Success' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestStatus/Success.php',\n        'SebastianBergman"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1150,
                "context": "TestStatus/Success.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestStatus\\\\TestStatus' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestStatus/TestStatus.php',\n        'SebastianBerg"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1151,
                "context": "TestStatus/TestStatus.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Test\\\\TestStatus\\\\Unknown' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/TestStatus/Unknown.php',\n        'SebastianBergman"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1152,
                "context": "tus/Unknown.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\UnintentionallyCoveredCodeException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/UnintentionallyCoveredCodeException.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1153,
                "context": "ption.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Util\\\\DirectoryCouldNotBeCreatedException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/DirectoryCouldNotBeCreatedException.php'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1154,
                "context": "toryCouldNotBeCreatedException.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Util\\\\Filesystem' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Util/Filesystem.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1155,
                "context": "e-coverage/src/Util/Filesystem.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Util\\\\Percentage' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Util/Percentage.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1156,
                "context": "t/php-code-coverage/src/Util/Percentage.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\Version' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Version.php',\n        'SebastianBergmann\\\\CodeCove"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1157,
                "context": "unit/php-code-coverage/src/Version.php',\n        'SebastianBergmann\\\\CodeCoverage\\\\XmlException' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/Exception/XmlException.php',\n        'SebastianBer"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1158,
                "context": "verage/src/Exception/XmlException.php',\n        'SebastianBergmann\\\\Comparator\\\\ArrayComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/ArrayComparator.php',\n        'SebastianBergmann\\\\Compa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1159,
                "context": "bastian/comparator/src/ArrayComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\Comparator' => __DIR__ . '/..' . '/sebastian/comparator/src/Comparator.php',\n        'SebastianBergmann\\\\Comparator"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1160,
                "context": "stian/comparator/src/Comparator.php',\n        'SebastianBergmann\\\\Comparator\\\\ComparisonFailure' => __DIR__ . '/..' . '/sebastian/comparator/src/ComparisonFailure.php',\n        'SebastianBergmann\\\\Com"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1161,
                "context": "omparator/src/ComparisonFailure.php',\n        'SebastianBergmann\\\\Comparator\\\\DOMNodeComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/DOMNodeComparator.php',\n        'SebastianBergmann\\\\Com"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1162,
                "context": "mparator/src/DOMNodeComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\DateTimeComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/DateTimeComparator.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1163,
                "context": "ator/src/DateTimeComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\EnumerationComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/EnumerationComparator.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1164,
                "context": "an/comparator/src/EnumerationComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\Exception' => __DIR__ . '/..' . '/sebastian/comparator/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1165,
                "context": "ator/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\Comparator\\\\ExceptionComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/ExceptionComparator.php',\n        'SebastianBergmann\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1166,
                "context": "astian/comparator/src/ExceptionComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\Factory' => __DIR__ . '/..' . '/sebastian/comparator/src/Factory.php',\n        'SebastianBergmann\\\\Comparator\\\\M"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1167,
                "context": "stian/comparator/src/Factory.php',\n        'SebastianBergmann\\\\Comparator\\\\MockObjectComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/MockObjectComparator.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1168,
                "context": "parator/src/MockObjectComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\NumberComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/NumberComparator.php',\n        'SebastianBergmann\\\\Comp"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1169,
                "context": "comparator/src/NumberComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\NumericComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/NumericComparator.php',\n        'SebastianBergmann\\\\Com"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1170,
                "context": "comparator/src/NumericComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\ObjectComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/ObjectComparator.php',\n        'SebastianBergmann\\\\Comp"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1171,
                "context": "omparator/src/ObjectComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\ResourceComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/ResourceComparator.php',\n        'SebastianBergmann\\\\Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1172,
                "context": "omparator/src/ResourceComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\RuntimeException' => __DIR__ . '/..' . '/sebastian/comparator/src/exceptions/RuntimeException.php',\n        'SebastianBer"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1173,
                "context": "/src/exceptions/RuntimeException.php',\n        'SebastianBergmann\\\\Comparator\\\\ScalarComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/ScalarComparator.php',\n        'SebastianBergmann\\\\Comp"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1174,
                "context": "r/src/ScalarComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\SplObjectStorageComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/SplObjectStorageComparator.php',\n        'SebastianBerg"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1175,
                "context": "tor/src/SplObjectStorageComparator.php',\n        'SebastianBergmann\\\\Comparator\\\\TypeComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/TypeComparator.php',\n        'SebastianBergmann\\\\Comple"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1176,
                "context": "ebastian/comparator/src/TypeComparator.php',\n        'SebastianBergmann\\\\Complexity\\\\Calculator' => __DIR__ . '/..' . '/sebastian/complexity/src/Calculator.php',\n        'SebastianBergmann\\\\Complexity"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1177,
                "context": " '/sebastian/complexity/src/Calculator.php',\n        'SebastianBergmann\\\\Complexity\\\\Complexity' => __DIR__ . '/..' . '/sebastian/complexity/src/Complexity/Complexity.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1178,
                "context": "omplexity/Complexity.php',\n        'SebastianBergmann\\\\Complexity\\\\ComplexityCalculatingVisitor' => __DIR__ . '/..' . '/sebastian/complexity/src/Visitor/ComplexityCalculatingVisitor.php',\n        'Seb"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1179,
                "context": "ComplexityCalculatingVisitor.php',\n        'SebastianBergmann\\\\Complexity\\\\ComplexityCollection' => __DIR__ . '/..' . '/sebastian/complexity/src/Complexity/ComplexityCollection.php',\n        'Sebastia"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1180,
                "context": "ComplexityCollection.php',\n        'SebastianBergmann\\\\Complexity\\\\ComplexityCollectionIterator' => __DIR__ . '/..' . '/sebastian/complexity/src/Complexity/ComplexityCollectionIterator.php',\n        '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1181,
                "context": "onIterator.php',\n        'SebastianBergmann\\\\Complexity\\\\CyclomaticComplexityCalculatingVisitor' => __DIR__ . '/..' . '/sebastian/complexity/src/Visitor/CyclomaticComplexityCalculatingVisitor.php',\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1182,
                "context": "/CyclomaticComplexityCalculatingVisitor.php',\n        'SebastianBergmann\\\\Complexity\\\\Exception' => __DIR__ . '/..' . '/sebastian/complexity/src/Exception/Exception.php',\n        'SebastianBergmann\\\\C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1183,
                "context": "mplexity/src/Exception/Exception.php',\n        'SebastianBergmann\\\\Complexity\\\\RuntimeException' => __DIR__ . '/..' . '/sebastian/complexity/src/Exception/RuntimeException.php',\n        'SebastianBerg"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1184,
                "context": "bastian/complexity/src/Exception/RuntimeException.php',\n        'SebastianBergmann\\\\Diff\\\\Chunk' => __DIR__ . '/..' . '/sebastian/diff/src/Chunk.php',\n        'SebastianBergmann\\\\Diff\\\\ConfigurationEx"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1185,
                "context": "..' . '/sebastian/diff/src/Chunk.php',\n        'SebastianBergmann\\\\Diff\\\\ConfigurationException' => __DIR__ . '/..' . '/sebastian/diff/src/Exception/ConfigurationException.php',\n        'SebastianBerg"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1186,
                "context": "ebastian/diff/src/Exception/ConfigurationException.php',\n        'SebastianBergmann\\\\Diff\\\\Diff' => __DIR__ . '/..' . '/sebastian/diff/src/Diff.php',\n        'SebastianBergmann\\\\Diff\\\\Differ' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1187,
                "context": "' => __DIR__ . '/..' . '/sebastian/diff/src/Diff.php',\n        'SebastianBergmann\\\\Diff\\\\Differ' => __DIR__ . '/..' . '/sebastian/diff/src/Differ.php',\n        'SebastianBergmann\\\\Diff\\\\Exception' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1188,
                "context": "__DIR__ . '/..' . '/sebastian/diff/src/Differ.php',\n        'SebastianBergmann\\\\Diff\\\\Exception' => __DIR__ . '/..' . '/sebastian/diff/src/Exception/Exception.php',\n        'SebastianBergmann\\\\Diff\\\\I"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1189,
                "context": "n/diff/src/Exception/Exception.php',\n        'SebastianBergmann\\\\Diff\\\\InvalidArgumentException' => __DIR__ . '/..' . '/sebastian/diff/src/Exception/InvalidArgumentException.php',\n        'SebastianBe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1190,
                "context": "astian/diff/src/Exception/InvalidArgumentException.php',\n        'SebastianBergmann\\\\Diff\\\\Line' => __DIR__ . '/..' . '/sebastian/diff/src/Line.php',\n        'SebastianBergmann\\\\Diff\\\\LongestCommonSub"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1191,
                "context": "astian/diff/src/Line.php',\n        'SebastianBergmann\\\\Diff\\\\LongestCommonSubsequenceCalculator' => __DIR__ . '/..' . '/sebastian/diff/src/LongestCommonSubsequenceCalculator.php',\n        'SebastianBe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1192,
                "context": "lator.php',\n        'SebastianBergmann\\\\Diff\\\\MemoryEfficientLongestCommonSubsequenceCalculator' => __DIR__ . '/..' . '/sebastian/diff/src/MemoryEfficientLongestCommonSubsequenceCalculator.php',\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1193,
                "context": "ubsequenceCalculator.php',\n        'SebastianBergmann\\\\Diff\\\\Output\\\\AbstractChunkOutputBuilder' => __DIR__ . '/..' . '/sebastian/diff/src/Output/AbstractChunkOutputBuilder.php',\n        'SebastianBer"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1194,
                "context": "bstractChunkOutputBuilder.php',\n        'SebastianBergmann\\\\Diff\\\\Output\\\\DiffOnlyOutputBuilder' => __DIR__ . '/..' . '/sebastian/diff/src/Output/DiffOnlyOutputBuilder.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1195,
                "context": "iffOnlyOutputBuilder.php',\n        'SebastianBergmann\\\\Diff\\\\Output\\\\DiffOutputBuilderInterface' => __DIR__ . '/..' . '/sebastian/diff/src/Output/DiffOutputBuilderInterface.php',\n        'SebastianBer"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1196,
                "context": "BuilderInterface.php',\n        'SebastianBergmann\\\\Diff\\\\Output\\\\StrictUnifiedDiffOutputBuilder' => __DIR__ . '/..' . '/sebastian/diff/src/Output/StrictUnifiedDiffOutputBuilder.php',\n        'Sebastia"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1197,
                "context": "ifiedDiffOutputBuilder.php',\n        'SebastianBergmann\\\\Diff\\\\Output\\\\UnifiedDiffOutputBuilder' => __DIR__ . '/..' . '/sebastian/diff/src/Output/UnifiedDiffOutputBuilder.php',\n        'SebastianBergm"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1198,
                "context": "bastian/diff/src/Output/UnifiedDiffOutputBuilder.php',\n        'SebastianBergmann\\\\Diff\\\\Parser' => __DIR__ . '/..' . '/sebastian/diff/src/Parser.php',\n        'SebastianBergmann\\\\Diff\\\\TimeEfficientL"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1199,
                "context": "/Parser.php',\n        'SebastianBergmann\\\\Diff\\\\TimeEfficientLongestCommonSubsequenceCalculator' => __DIR__ . '/..' . '/sebastian/diff/src/TimeEfficientLongestCommonSubsequenceCalculator.php',\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1200,
                "context": "icientLongestCommonSubsequenceCalculator.php',\n        'SebastianBergmann\\\\Environment\\\\Console' => __DIR__ . '/..' . '/sebastian/environment/src/Console.php',\n        'SebastianBergmann\\\\Environment\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1201,
                "context": ".' . '/sebastian/environment/src/Console.php',\n        'SebastianBergmann\\\\Environment\\\\Runtime' => __DIR__ . '/..' . '/sebastian/environment/src/Runtime.php',\n        'SebastianBergmann\\\\Exporter\\\\Ex"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1202,
                "context": "/..' . '/sebastian/environment/src/Runtime.php',\n        'SebastianBergmann\\\\Exporter\\\\Exporter' => __DIR__ . '/..' . '/sebastian/exporter/src/Exporter.php',\n        'SebastianBergmann\\\\FileIterator\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1203,
                "context": "sebastian/exporter/src/Exporter.php',\n        'SebastianBergmann\\\\FileIterator\\\\ExcludeIterator' => __DIR__ . '/..' . '/phpunit/php-file-iterator/src/ExcludeIterator.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1204,
                "context": "it/php-file-iterator/src/ExcludeIterator.php',\n        'SebastianBergmann\\\\FileIterator\\\\Facade' => __DIR__ . '/..' . '/phpunit/php-file-iterator/src/Facade.php',\n        'SebastianBergmann\\\\FileItera"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1205,
                "context": " '/phpunit/php-file-iterator/src/Facade.php',\n        'SebastianBergmann\\\\FileIterator\\\\Factory' => __DIR__ . '/..' . '/phpunit/php-file-iterator/src/Factory.php',\n        'SebastianBergmann\\\\FileIter"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1206,
                "context": "/phpunit/php-file-iterator/src/Factory.php',\n        'SebastianBergmann\\\\FileIterator\\\\Iterator' => __DIR__ . '/..' . '/phpunit/php-file-iterator/src/Iterator.php',\n        'SebastianBergmann\\\\GlobalS"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1207,
                "context": "unit/php-file-iterator/src/Iterator.php',\n        'SebastianBergmann\\\\GlobalState\\\\CodeExporter' => __DIR__ . '/..' . '/sebastian/global-state/src/CodeExporter.php',\n        'SebastianBergmann\\\\Global"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1208,
                "context": "ebastian/global-state/src/CodeExporter.php',\n        'SebastianBergmann\\\\GlobalState\\\\Exception' => __DIR__ . '/..' . '/sebastian/global-state/src/exceptions/Exception.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1209,
                "context": "lobal-state/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\GlobalState\\\\ExcludeList' => __DIR__ . '/..' . '/sebastian/global-state/src/ExcludeList.php',\n        'SebastianBergmann\\\\GlobalS"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1210,
                "context": "/sebastian/global-state/src/ExcludeList.php',\n        'SebastianBergmann\\\\GlobalState\\\\Restorer' => __DIR__ . '/..' . '/sebastian/global-state/src/Restorer.php',\n        'SebastianBergmann\\\\GlobalStat"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1211,
                "context": "stian/global-state/src/Restorer.php',\n        'SebastianBergmann\\\\GlobalState\\\\RuntimeException' => __DIR__ . '/..' . '/sebastian/global-state/src/exceptions/RuntimeException.php',\n        'SebastianB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1212,
                "context": "l-state/src/exceptions/RuntimeException.php',\n        'SebastianBergmann\\\\GlobalState\\\\Snapshot' => __DIR__ . '/..' . '/sebastian/global-state/src/Snapshot.php',\n        'SebastianBergmann\\\\Invoker\\\\E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1213,
                "context": ".' . '/sebastian/global-state/src/Snapshot.php',\n        'SebastianBergmann\\\\Invoker\\\\Exception' => __DIR__ . '/..' . '/phpunit/php-invoker/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\I"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1214,
                "context": "phpunit/php-invoker/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\Invoker\\\\Invoker' => __DIR__ . '/..' . '/phpunit/php-invoker/src/Invoker.php',\n        'SebastianBergmann\\\\Invoker\\\\Proce"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1215,
                "context": "rc/Invoker.php',\n        'SebastianBergmann\\\\Invoker\\\\ProcessControlExtensionNotLoadedException' => __DIR__ . '/..' . '/phpunit/php-invoker/src/exceptions/ProcessControlExtensionNotLoadedException.php"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1216,
                "context": "sControlExtensionNotLoadedException.php',\n        'SebastianBergmann\\\\Invoker\\\\TimeoutException' => __DIR__ . '/..' . '/phpunit/php-invoker/src/exceptions/TimeoutException.php',\n        'SebastianBerg"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1217,
                "context": "-invoker/src/exceptions/TimeoutException.php',\n        'SebastianBergmann\\\\LinesOfCode\\\\Counter' => __DIR__ . '/..' . '/sebastian/lines-of-code/src/Counter.php',\n        'SebastianBergmann\\\\LinesOfCod"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1218,
                "context": " '/sebastian/lines-of-code/src/Counter.php',\n        'SebastianBergmann\\\\LinesOfCode\\\\Exception' => __DIR__ . '/..' . '/sebastian/lines-of-code/src/Exception/Exception.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1219,
                "context": "src/Exception/Exception.php',\n        'SebastianBergmann\\\\LinesOfCode\\\\IllogicalValuesException' => __DIR__ . '/..' . '/sebastian/lines-of-code/src/Exception/IllogicalValuesException.php',\n        'Se"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1220,
                "context": "ion/IllogicalValuesException.php',\n        'SebastianBergmann\\\\LinesOfCode\\\\LineCountingVisitor' => __DIR__ . '/..' . '/sebastian/lines-of-code/src/LineCountingVisitor.php',\n        'SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1221,
                "context": "ines-of-code/src/LineCountingVisitor.php',\n        'SebastianBergmann\\\\LinesOfCode\\\\LinesOfCode' => __DIR__ . '/..' . '/sebastian/lines-of-code/src/LinesOfCode.php',\n        'SebastianBergmann\\\\LinesO"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1222,
                "context": "n/lines-of-code/src/LinesOfCode.php',\n        'SebastianBergmann\\\\LinesOfCode\\\\RuntimeException' => __DIR__ . '/..' . '/sebastian/lines-of-code/src/Exception/RuntimeException.php',\n        'SebastianB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1223,
                "context": "e/src/Exception/RuntimeException.php',\n        'SebastianBergmann\\\\ObjectEnumerator\\\\Enumerator' => __DIR__ . '/..' . '/sebastian/object-enumerator/src/Enumerator.php',\n        'SebastianBergmann\\\\Obj"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1224,
                "context": "ct-enumerator/src/Enumerator.php',\n        'SebastianBergmann\\\\ObjectReflector\\\\ObjectReflector' => __DIR__ . '/..' . '/sebastian/object-reflector/src/ObjectReflector.php',\n        'SebastianBergmann\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1225,
                "context": "bject-reflector/src/ObjectReflector.php',\n        'SebastianBergmann\\\\RecursionContext\\\\Context' => __DIR__ . '/..' . '/sebastian/recursion-context/src/Context.php',\n        'SebastianBergmann\\\\Templa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1226,
                "context": "'/sebastian/recursion-context/src/Context.php',\n        'SebastianBergmann\\\\Template\\\\Exception' => __DIR__ . '/..' . '/phpunit/php-text-template/src/exceptions/Exception.php',\n        'SebastianBergm"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1227,
                "context": "e/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\Template\\\\InvalidArgumentException' => __DIR__ . '/..' . '/phpunit/php-text-template/src/exceptions/InvalidArgumentException.php',\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1228,
                "context": "xceptions/InvalidArgumentException.php',\n        'SebastianBergmann\\\\Template\\\\RuntimeException' => __DIR__ . '/..' . '/phpunit/php-text-template/src/exceptions/RuntimeException.php',\n        'Sebasti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1229,
                "context": "t-template/src/exceptions/RuntimeException.php',\n        'SebastianBergmann\\\\Template\\\\Template' => __DIR__ . '/..' . '/phpunit/php-text-template/src/Template.php',\n        'SebastianBergmann\\\\Timer\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1230,
                "context": ".' . '/phpunit/php-text-template/src/Template.php',\n        'SebastianBergmann\\\\Timer\\\\Duration' => __DIR__ . '/..' . '/phpunit/php-timer/src/Duration.php',\n        'SebastianBergmann\\\\Timer\\\\Exceptio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1231,
                "context": "_ . '/..' . '/phpunit/php-timer/src/Duration.php',\n        'SebastianBergmann\\\\Timer\\\\Exception' => __DIR__ . '/..' . '/phpunit/php-timer/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\Tim"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1232,
                "context": "-timer/src/exceptions/Exception.php',\n        'SebastianBergmann\\\\Timer\\\\NoActiveTimerException' => __DIR__ . '/..' . '/phpunit/php-timer/src/exceptions/NoActiveTimerException.php',\n        'Sebastian"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1233,
                "context": "ceptions/NoActiveTimerException.php',\n        'SebastianBergmann\\\\Timer\\\\ResourceUsageFormatter' => __DIR__ . '/..' . '/phpunit/php-timer/src/ResourceUsageFormatter.php',\n        'SebastianBergmann\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1234,
                "context": "Formatter.php',\n        'SebastianBergmann\\\\Timer\\\\TimeSinceStartOfRequestNotAvailableException' => __DIR__ . '/..' . '/phpunit/php-timer/src/exceptions/TimeSinceStartOfRequestNotAvailableException.ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1235,
                "context": "ons/TimeSinceStartOfRequestNotAvailableException.php',\n        'SebastianBergmann\\\\Timer\\\\Timer' => __DIR__ . '/..' . '/phpunit/php-timer/src/Timer.php',\n        'SebastianBergmann\\\\Type\\\\CallableType"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1236,
                "context": "__ . '/..' . '/phpunit/php-timer/src/Timer.php',\n        'SebastianBergmann\\\\Type\\\\CallableType' => __DIR__ . '/..' . '/sebastian/type/src/type/CallableType.php',\n        'SebastianBergmann\\\\Type\\\\Exc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1237,
                "context": "/..' . '/sebastian/type/src/type/CallableType.php',\n        'SebastianBergmann\\\\Type\\\\Exception' => __DIR__ . '/..' . '/sebastian/type/src/exception/Exception.php',\n        'SebastianBergmann\\\\Type\\\\F"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1238,
                "context": ".' . '/sebastian/type/src/exception/Exception.php',\n        'SebastianBergmann\\\\Type\\\\FalseType' => __DIR__ . '/..' . '/sebastian/type/src/type/FalseType.php',\n        'SebastianBergmann\\\\Type\\\\Generi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1239,
                "context": ". '/sebastian/type/src/type/FalseType.php',\n        'SebastianBergmann\\\\Type\\\\GenericObjectType' => __DIR__ . '/..' . '/sebastian/type/src/type/GenericObjectType.php',\n        'SebastianBergmann\\\\Type"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1240,
                "context": "astian/type/src/type/GenericObjectType.php',\n        'SebastianBergmann\\\\Type\\\\IntersectionType' => __DIR__ . '/..' . '/sebastian/type/src/type/IntersectionType.php',\n        'SebastianBergmann\\\\Type\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1241,
                "context": "'/sebastian/type/src/type/IntersectionType.php',\n        'SebastianBergmann\\\\Type\\\\IterableType' => __DIR__ . '/..' . '/sebastian/type/src/type/IterableType.php',\n        'SebastianBergmann\\\\Type\\\\Mix"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1242,
                "context": "/..' . '/sebastian/type/src/type/IterableType.php',\n        'SebastianBergmann\\\\Type\\\\MixedType' => __DIR__ . '/..' . '/sebastian/type/src/type/MixedType.php',\n        'SebastianBergmann\\\\Type\\\\NeverT"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1243,
                "context": ". '/..' . '/sebastian/type/src/type/MixedType.php',\n        'SebastianBergmann\\\\Type\\\\NeverType' => __DIR__ . '/..' . '/sebastian/type/src/type/NeverType.php',\n        'SebastianBergmann\\\\Type\\\\NullTy"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1244,
                "context": " . '/..' . '/sebastian/type/src/type/NeverType.php',\n        'SebastianBergmann\\\\Type\\\\NullType' => __DIR__ . '/..' . '/sebastian/type/src/type/NullType.php',\n        'SebastianBergmann\\\\Type\\\\ObjectT"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1245,
                "context": ". '/..' . '/sebastian/type/src/type/NullType.php',\n        'SebastianBergmann\\\\Type\\\\ObjectType' => __DIR__ . '/..' . '/sebastian/type/src/type/ObjectType.php',\n        'SebastianBergmann\\\\Type\\\\Param"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1246,
                "context": " '/..' . '/sebastian/type/src/type/ObjectType.php',\n        'SebastianBergmann\\\\Type\\\\Parameter' => __DIR__ . '/..' . '/sebastian/type/src/Parameter.php',\n        'SebastianBergmann\\\\Type\\\\ReflectionM"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1247,
                "context": "'/..' . '/sebastian/type/src/Parameter.php',\n        'SebastianBergmann\\\\Type\\\\ReflectionMapper' => __DIR__ . '/..' . '/sebastian/type/src/ReflectionMapper.php',\n        'SebastianBergmann\\\\Type\\\\Runt"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1248,
                "context": " '/sebastian/type/src/ReflectionMapper.php',\n        'SebastianBergmann\\\\Type\\\\RuntimeException' => __DIR__ . '/..' . '/sebastian/type/src/exception/RuntimeException.php',\n        'SebastianBergmann\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1249,
                "context": "ebastian/type/src/exception/RuntimeException.php',\n        'SebastianBergmann\\\\Type\\\\SimpleType' => __DIR__ . '/..' . '/sebastian/type/src/type/SimpleType.php',\n        'SebastianBergmann\\\\Type\\\\Stati"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1250,
                "context": "'/..' . '/sebastian/type/src/type/SimpleType.php',\n        'SebastianBergmann\\\\Type\\\\StaticType' => __DIR__ . '/..' . '/sebastian/type/src/type/StaticType.php',\n        'SebastianBergmann\\\\Type\\\\TrueT"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1251,
                "context": ". '/..' . '/sebastian/type/src/type/StaticType.php',\n        'SebastianBergmann\\\\Type\\\\TrueType' => __DIR__ . '/..' . '/sebastian/type/src/type/TrueType.php',\n        'SebastianBergmann\\\\Type\\\\Type' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1252,
                "context": "DIR__ . '/..' . '/sebastian/type/src/type/TrueType.php',\n        'SebastianBergmann\\\\Type\\\\Type' => __DIR__ . '/..' . '/sebastian/type/src/type/Type.php',\n        'SebastianBergmann\\\\Type\\\\TypeName' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1253,
                "context": "DIR__ . '/..' . '/sebastian/type/src/type/Type.php',\n        'SebastianBergmann\\\\Type\\\\TypeName' => __DIR__ . '/..' . '/sebastian/type/src/TypeName.php',\n        'SebastianBergmann\\\\Type\\\\UnionType' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1254,
                "context": "DIR__ . '/..' . '/sebastian/type/src/TypeName.php',\n        'SebastianBergmann\\\\Type\\\\UnionType' => __DIR__ . '/..' . '/sebastian/type/src/type/UnionType.php',\n        'SebastianBergmann\\\\Type\\\\Unknow"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1255,
                "context": "'/..' . '/sebastian/type/src/type/UnionType.php',\n        'SebastianBergmann\\\\Type\\\\UnknownType' => __DIR__ . '/..' . '/sebastian/type/src/type/UnknownType.php',\n        'SebastianBergmann\\\\Type\\\\Void"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1256,
                "context": " '/..' . '/sebastian/type/src/type/UnknownType.php',\n        'SebastianBergmann\\\\Type\\\\VoidType' => __DIR__ . '/..' . '/sebastian/type/src/type/VoidType.php',\n        'SebastianBergmann\\\\Version' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1257,
                "context": " __DIR__ . '/..' . '/sebastian/type/src/type/VoidType.php',\n        'SebastianBergmann\\\\Version' => __DIR__ . '/..' . '/sebastian/version/src/Version.php',\n        'TheSeer\\\\Tokenizer\\\\Exception' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1258,
                "context": " __DIR__ . '/..' . '/sebastian/version/src/Version.php',\n        'TheSeer\\\\Tokenizer\\\\Exception' => __DIR__ . '/..' . '/theseer/tokenizer/src/Exception.php',\n        'TheSeer\\\\Tokenizer\\\\NamespaceUri'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1259,
                "context": "R__ . '/..' . '/theseer/tokenizer/src/Exception.php',\n        'TheSeer\\\\Tokenizer\\\\NamespaceUri' => __DIR__ . '/..' . '/theseer/tokenizer/src/NamespaceUri.php',\n        'TheSeer\\\\Tokenizer\\\\NamespaceU"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1260,
                "context": ". '/theseer/tokenizer/src/NamespaceUri.php',\n        'TheSeer\\\\Tokenizer\\\\NamespaceUriException' => __DIR__ . '/..' . '/theseer/tokenizer/src/NamespaceUriException.php',\n        'TheSeer\\\\Tokenizer\\\\T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1261,
                "context": " '/..' . '/theseer/tokenizer/src/NamespaceUriException.php',\n        'TheSeer\\\\Tokenizer\\\\Token' => __DIR__ . '/..' . '/theseer/tokenizer/src/Token.php',\n        'TheSeer\\\\Tokenizer\\\\TokenCollection' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1262,
                "context": "IR__ . '/..' . '/theseer/tokenizer/src/Token.php',\n        'TheSeer\\\\Tokenizer\\\\TokenCollection' => __DIR__ . '/..' . '/theseer/tokenizer/src/TokenCollection.php',\n        'TheSeer\\\\Tokenizer\\\\TokenCo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1263,
                "context": "eseer/tokenizer/src/TokenCollection.php',\n        'TheSeer\\\\Tokenizer\\\\TokenCollectionException' => __DIR__ . '/..' . '/theseer/tokenizer/src/TokenCollectionException.php',\n        'TheSeer\\\\Tokenizer"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1264,
                "context": ". '/theseer/tokenizer/src/TokenCollectionException.php',\n        'TheSeer\\\\Tokenizer\\\\Tokenizer' => __DIR__ . '/..' . '/theseer/tokenizer/src/Tokenizer.php',\n        'TheSeer\\\\Tokenizer\\\\XMLSerializer"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1265,
                "context": "__ . '/..' . '/theseer/tokenizer/src/Tokenizer.php',\n        'TheSeer\\\\Tokenizer\\\\XMLSerializer' => __DIR__ . '/..' . '/theseer/tokenizer/src/XMLSerializer.php',\n        'staabm\\\\SideEffectsDetector\\\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1266,
                "context": " . '/theseer/tokenizer/src/XMLSerializer.php',\n        'staabm\\\\SideEffectsDetector\\\\SideEffect' => __DIR__ . '/..' . '/staabm/side-effects-detector/lib/SideEffect.php',\n        'staabm\\\\SideEffectsDe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 1267,
                "context": "effects-detector/lib/SideEffect.php',\n        'staabm\\\\SideEffectsDetector\\\\SideEffectsDetector' => __DIR__ . '/..' . '/staabm/side-effects-detector/lib/SideEffectsDetector.php',\n    );\n\n    public st"
            }
        ],
        "vendor/composer/autoload_real.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ClassLoader.php'",
                "line": 12,
                "context": "sLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/platform_check.php'",
                "line": 25,
                "context": "\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        require __DIR__ . '/platform_check.php';\n\n        spl_autoload_register(array('ComposerAutoloaderInita464da1"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/autoload_static.php'",
                "line": 31,
                "context": "ray('ComposerAutoloaderInita464da16afda6c051f07128e9453e2b9', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInita464da"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 32,
                "context": "51f07128e9453e2b9', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInita464da16afda6c051f07128e9453e2b9::getInitializer"
            }
        ],
        "vendor/composer/InstalledVersions.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 275,
                "context": "s/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '/installed.php';\n            } else {\n                self::$installed = array();\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 365,
                "context": " bool, replaced?: string[], provided?: string[]}>} $required */\n                $required = require __DIR__ . '/installed.php';\n                self::$installed = $required;\n            } else {\n     "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 68,
                "context": "unt($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    /**\n     * Returns a list of all packag"
            }
        ],
        "vendor/composer/installed.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 8,
                "context": ".0.0',\n        'reference' => null,\n        'type' => 'wordpress-plugin',\n        'install_path' => __DIR__ . '/../../',\n        'aliases' => array(),\n        'dev' => true,\n    ),\n    'versions' => a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 18,
                "context": "       'reference' => null,\n            'type' => 'wordpress-plugin',\n            'install_path' => __DIR__ . '/../../',\n            'aliases' => array(),\n            'dev_requirement' => false,\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../myclabs/deep-copy'",
                "line": 27,
                "context": "a478be9df5fdaca2c793f2232fe788e414',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../myclabs/deep-copy',\n            'aliases' => array(),\n            'dev_requirement' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../nikic/php-parser'",
                "line": 36,
                "context": "0a1f875a434d62f2a401f53b82a396e494',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../nikic/php-parser',\n            'aliases' => array(),\n            'dev_requirement' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phar-io/manifest'",
                "line": 45,
                "context": "f60c58e43759730615a392c31c80e23176',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phar-io/manifest',\n            'aliases' => array(),\n            'dev_requirement' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phar-io/version'",
                "line": 54,
                "context": "836c6f332bb2933569e566a0d6c4cbed74',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phar-io/version',\n            'aliases' => array(),\n            'dev_requirement' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpunit/php-code-coverage'",
                "line": 63,
                "context": "01a856f9f62488d144bafddc3d7b7a4ebb',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpunit/php-code-coverage',\n            'aliases' => array(),\n            'dev_requir"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpunit/php-file-iterator'",
                "line": 72,
                "context": "13d42fe24a257bfff826a5068079ac7782',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpunit/php-file-iterator',\n            'aliases' => array(),\n            'dev_requir"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpunit/php-invoker'",
                "line": 81,
                "context": "689b07a25a9b41e57736dfab6ec9ae5406',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpunit/php-invoker',\n            'aliases' => array(),\n            'dev_requirement'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpunit/php-text-template'",
                "line": 90,
                "context": "453f0eda562eedb4f659e13aa900d66c53',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpunit/php-text-template',\n            'aliases' => array(),\n            'dev_requir"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpunit/php-timer'",
                "line": 99,
                "context": "36aa457f3aa3339f9ed4c81fc66dc8c2cc',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpunit/php-timer',\n            'aliases' => array(),\n            'dev_requirement' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpunit/phpunit'",
                "line": 108,
                "context": "e817dd7d65356c16772c30f06c01a6fae2',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpunit/phpunit',\n            'aliases' => array(),\n            'dev_requirement' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/cli-parser'",
                "line": 117,
                "context": "727d9114bcdc14c86711cd1cad51778e7c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/cli-parser',\n            'aliases' => array(),\n            'dev_requirement"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/comparator'",
                "line": 126,
                "context": "4614f934e0291598d0c08cbaba9644bee5',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/comparator',\n            'aliases' => array(),\n            'dev_requirement"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/complexity'",
                "line": 135,
                "context": "6aba5303d0221f43f8cee37eb58d384bbb',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/complexity',\n            'aliases' => array(),\n            'dev_requirement"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/diff'",
                "line": 144,
                "context": "946c012266ca32390913653d844ecd085f',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/diff',\n            'aliases' => array(),\n            'dev_requirement' => t"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/environment'",
                "line": 153,
                "context": "1eca49171bf95405cc0078be9a3821f9f2',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/environment',\n            'aliases' => array(),\n            'dev_requiremen"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/exporter'",
                "line": 162,
                "context": "afc58d50691a00d86d0632f1217a47b688',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/exporter',\n            'aliases' => array(),\n            'dev_requirement' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/global-state'",
                "line": 171,
                "context": "eb26d40f057af686d63c4e99b075fb6cbc',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/global-state',\n            'aliases' => array(),\n            'dev_requireme"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/lines-of-code'",
                "line": 180,
                "context": "3bcfb5805568d6af7f0f893678fc076d2f',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/lines-of-code',\n            'aliases' => array(),\n            'dev_requirem"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/object-enumerator'",
                "line": 189,
                "context": "e9b8e068e9ae228e542d5d11b5d16db894',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/object-enumerator',\n            'aliases' => array(),\n            'dev_requ"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/object-reflector'",
                "line": 198,
                "context": "7c969c98be1e527abd576533293c634f6a',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/object-reflector',\n            'aliases' => array(),\n            'dev_requi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/recursion-context'",
                "line": 207,
                "context": "3a63e01b32eb71577f8ec1604e39858a7c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/recursion-context',\n            'aliases' => array(),\n            'dev_requ"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/type'",
                "line": 216,
                "context": "e514384c36d7a390347f57c385d4be6069',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/type',\n            'aliases' => array(),\n            'dev_requirement' => t"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../sebastian/version'",
                "line": 225,
                "context": "7657d4f0a59200564b08cead899313b53c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../sebastian/version',\n            'aliases' => array(),\n            'dev_requirement' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../squizlabs/php_codesniffer'",
                "line": 234,
                "context": "032d4b718f168c90a96e36c7d0eaacb2aa',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../squizlabs/php_codesniffer',\n            'aliases' => array(),\n            'dev_requir"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../staabm/side-effects-detector'",
                "line": 243,
                "context": "11a140ce329c13726d4a715adbddd0a163',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../staabm/side-effects-detector',\n            'aliases' => array(),\n            'dev_req"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../theseer/tokenizer'",
                "line": 252,
                "context": "637ed5e28c3413cb1ebe8bb52cbf1ca7a2',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../theseer/tokenizer',\n            'aliases' => array(),\n            'dev_requirement' ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../wp-coding-standards/wpcs'",
                "line": 261,
                "context": "6de00d141f27517b62',\n            'type' => 'phpcodesniffer-standard',\n            'install_path' => __DIR__ . '/../wp-coding-standards/wpcs',\n            'aliases' => array(),\n            'dev_require"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniff.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 1021,
                "context": " ( true === $is_error ) {\n\t\t\t$method .= 'Error';\n\t\t} else {\n\t\t\t$method .= 'Warning';\n\t\t}\n\n\t\treturn \\call_user_func( array( $this->phpcsFile, $method ), $message, $stackPtr, $code, $data, $severity );\n"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "WP_Ajax_UnitTestCase",
                "line": 866,
                "context": "ase_Base'                       => true,\n\t\t'WP_UnitTestCase'                            => true,\n\t\t'WP_Ajax_UnitTestCase'                       => true,\n\t\t'WP_Canonical_UnitTestCase'                  "
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Tests/NamingConventions/PrefixAllGlobalsUnitTest.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists( '\\IntlTimeZone'",
                "line": 58,
                "context": "ts( '\\array_column' ) ) ? 0 : 1,\n\t\t\t\t\t234 => ( \\defined( '\\E_DEPRECATED' ) ) ? 0 : 1,\n\t\t\t\t\t238 => ( class_exists( '\\IntlTimeZone' ) ) ? 0 : 1,\n\t\t\t\t\t318 => 1,\n\t\t\t\t\t339 => 1,\n\t\t\t\t\t343 => 1,\n\t\t\t\t\t344 => "
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/AbstractFunctionRestrictionsSniff.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 168,
                "context": ";\n\t\t}\n\n\t\t// Create one \"super-regex\" to allow for initial filtering.\n\t\t$all_items                = \\call_user_func_array( 'array_merge', $all_items );\n\t\t$all_items                = implode( '|', array"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/AbstractArrayAssignmentRestrictionsSniff.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 204,
                "context": "e;\n\n\t\t\t\t\tif ( ! \\in_array( $key, $group['keys'], true ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$output = \\call_user_func( $callback, $key, $val, $line, $group );\n\n\t\t\t\t\tif ( ! isset( $output ) || false === $"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniffs/WP/DeprecatedFunctionsSniff.php": [
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_wp_fullscreen_save_post",
                "line": 1205,
                "context": "sion' => '4.3.0',\n\t\t),\n\t\t// Verified; see https://core.trac.wordpress.org/ticket/41121, patch 3.\n\t\t'wp_ajax_wp_fullscreen_save_post' => array(\n\t\t\t'alt'     => '',\n\t\t\t'version' => '4.3.0',\n\t\t),\n\t\t'wp_h"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_press_this_add_category",
                "line": 1330,
                "context": ".9.0',\n\t\t),\n\t\t'is_user_option_local' => array(\n\t\t\t'alt'     => '',\n\t\t\t'version' => '4.9.0',\n\t\t),\n\t\t'wp_ajax_press_this_add_category' => array(\n\t\t\t'alt'     => '',\n\t\t\t'version' => '4.9.0',\n\t\t),\n\t\t'wp_a"
            },
            {
                "pattern": "wp_ajax_[a-zA-Z_]+",
                "match": "wp_ajax_press_this_save_post",
                "line": 1334,
                "context": "\n\t\t'wp_ajax_press_this_add_category' => array(\n\t\t\t'alt'     => '',\n\t\t\t'version' => '4.9.0',\n\t\t),\n\t\t'wp_ajax_press_this_save_post' => array(\n\t\t\t'alt'     => '',\n\t\t\t'version' => '4.9.0',\n\t\t),\n\n\t\t// WP 5"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniffs/Files/FileNameSniff.php": [
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$expected . '.php'",
                "line": 204,
                "context": " prepended. Expected %s, but found %s.',\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t'InvalidClassFileName',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t$expected . '.php',\n\t\t\t\t\t\t\t$fileName,\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tunset( $expected );\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniffs/DB/PreparedSQLPlaceholdersSniff.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf( 'query .... IN (%s) ...'",
                "line": 32,
                "context": "ecific pattern with a variable number of placeholders\n * created using code along the lines of:\n * `sprintf( 'query .... IN (%s) ...', implode( ',', array_fill( 0, count( $something ), '%s' ) ) )`.\n *"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniffs/NamingConventions/PrefixAllGlobalsSniff.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists( '\\\\'",
                "line": 419,
                "context": "lassFound';\n\n\t\t\t\t\tswitch ( $this->tokens[ $stackPtr ]['type'] ) {\n\t\t\t\t\t\tcase 'T_CLASS':\n\t\t\t\t\t\t\tif ( class_exists( '\\\\' . $item_name, false ) ) {\n\t\t\t\t\t\t\t\t// Backfill for PHP native class.\n\t\t\t\t\t\t\t\tretur"
            }
        ],
        "vendor/phpunit/php-timer/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/phpunit/php-timer/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/phpunit/php-timer/src/ResourceUsageFormatter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Time: %s, Memory: %s'",
                "line": 30,
                "context": "=> 1024,\n    ];\n\n    public function resourceUsage(Duration $duration): string\n    {\n        return sprintf(\n            'Time: %s, Memory: %s',\n            $duration->asString(),\n            $this->b"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%.2f %s'",
                "line": 65,
                "context": "reach (self::SIZES as $unit => $value) {\n            if ($bytes >= $value) {\n                return sprintf('%.2f %s', $bytes / $value, $unit);\n            }\n        }\n\n        // @codeCoverageIgnoreS"
            }
        ],
        "vendor/phpunit/phpunit/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/_files')\n    ->in(__DIR__ . '/tests/end-to-end')\n    ->"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/_files'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/_files')\n    ->in(__DIR__ . '/tests/end-to-end')\n    ->in(__DIR__ . '/tests/unit')"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/end-to-end'",
                "line": 15,
                "context": "der::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/_files')\n    ->in(__DIR__ . '/tests/end-to-end')\n    ->in(__DIR__ . '/tests/unit')\n    // *WithPropertyWith*Hook.php u"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/unit'",
                "line": 16,
                "context": "IR__ . '/src')\n    ->in(__DIR__ . '/tests/_files')\n    ->in(__DIR__ . '/tests/end-to-end')\n    ->in(__DIR__ . '/tests/unit')\n    // *WithPropertyWith*Hook.php use PHP 8.4 syntax that currently leads t"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 373,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/composer/autoload_real.php'",
                "line": 20,
                "context": "t()) {\n            echo $err;\n        }\n    }\n    throw new RuntimeException($err);\n}\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInitf9e7218f71d5874b5632927df4f72"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/autoload.php'",
                "line": 28,
                "context": "}\n\n\t\t\tif (self::$composerAutoloader === null) {\n\t\t\t\tself::$composerAutoloader = require 'phar://' . __DIR__ . '/phpstan.phar/vendor/autoload.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php'",
                "line": 29,
                "context": "r = require 'phar://' . __DIR__ . '/phpstan.phar/vendor/autoload.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php';\n\t\t\t\trequire_once 'ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php'",
                "line": 30,
                "context": " '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php';\n\t\t\t\trequire_once 'phar://' ."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/react/promise/src/functions_include.php'",
                "line": 31,
                "context": "_DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/react/promise/src/functions_include.php';\n\t\t\t}\n\t\t\tself::$composerAut"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php'",
                "line": 54,
                "context": "_composer_autoload_files']['a4a119a56e50fbb293281d9a48007e0e'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php';\n\t\t\t\trequire_once 'phar://' . __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/bootstrap.php'",
                "line": 55,
                "context": "' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tempty($GLOB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php'",
                "line": 63,
                "context": "_composer_autoload_files']['0e6d7bf4a5811bfa5cf40c5ccd6fae6a'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php';\n\t\t\t\trequire_once 'phar://' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/bootstrap.php'",
                "line": 64,
                "context": "DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tempty($G"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php'",
                "line": 72,
                "context": "_composer_autoload_files']['e69f7f6ee287b969198c3c9d6777bd38'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php';\n\t\t\t\trequire_once '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/bootstrap.php'",
                "line": 73,
                "context": "/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php'",
                "line": 82,
                "context": "_composer_autoload_files']['8825ede83f2f289127722d4e842cf7e8'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php';\n\t\t\t\trequire_once 'phar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/bootstrap.php'",
                "line": 83,
                "context": " . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tPHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php'",
                "line": 92,
                "context": "_composer_autoload_files']['23c18046f52bef3eea034657bafda50f'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php';\n\t\t\t\trequire_once 'phar://' . __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/bootstrap.php'",
                "line": 93,
                "context": "' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/bootstrap.php';\n\t\t\t}\n\t\t}\n\n\t\t$filename = str_r"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/'",
                "line": 100,
                "context": "\t\t\t$filename = substr($filename, strlen('PHPStan\\\\BetterReflection\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/' . $filename . '.php';\n\t\t} else "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/src/'",
                "line": 103,
                "context": ".php';\n\t\t} else {\n\t\t\t$filename = substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/src/' . $filename . '.php';\n\t\t}\n\n\t\tif (!file_exists($filepath)) {\n\t\t\treturn"
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$filename . '.php'",
                "line": 100,
                "context": ";\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/' . $filename . '.php';\n\t\t} else {\n\t\t\t$filename = substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath ="
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$filename . '.php'",
                "line": 103,
                "context": "substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/src/' . $filename . '.php';\n\t\t}\n\n\t\tif (!file_exists($filepath)) {\n\t\t\treturn;\n\t\t}\n\n\t\trequire $filepath;\n\t}\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/extension-installer/src/Plugin.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/GeneratedConfig.php'",
                "line": 103,
                "context": "oser();\n\t\t$installationManager = $composer->getInstallationManager();\n\n\t\t$generatedConfigFilePath = __DIR__ . '/GeneratedConfig.php';\n\t\t$oldGeneratedConfigFileHash = null;\n\t\tif (is_file($generatedConf"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <info>%s:</info> installed'",
                "line": 205,
                "context": "ileContents)) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach (array_keys($installedPackages) as $name) {\n\t\t\t$io->write(sprintf('> <info>%s:</info> installed', $name));\n\t\t}\n\n\t\tforeach (array_keys($notInstalledPackages) a"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <comment>%s:</comment> not supported'",
                "line": 209,
                "context": "o> installed', $name));\n\t\t}\n\n\t\tforeach (array_keys($notInstalledPackages) as $name) {\n\t\t\t$io->write(sprintf('> <comment>%s:</comment> not supported', $name));\n\t\t}\n\n\t\tforeach ($ignoredPackages as $name"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <comment>%s:</comment> ignored'",
                "line": 213,
                "context": "t>%s:</comment> not supported', $name));\n\t\t}\n\n\t\tforeach ($ignoredPackages as $name) {\n\t\t\t$io->write(sprintf('> <comment>%s:</comment> ignored', $name));\n\t\t}\n\t}\n\n\tprivate function constraintIntoString("
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t'%s%s, %s%s'",
                "line": 219,
                "context": "\t\t}\n\t}\n\n\tprivate function constraintIntoString(ConstraintInterface $constraint): string\n\t{\n\t\treturn sprintf(\n\t\t\t'%s%s, %s%s',\n\t\t\t$constraint->getLowerBound()->isInclusive() ? '>=' : '>',\n\t\t\t$constrain"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/ForeachLoop/OverwriteVariablesWithForeachRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Foreach overwrites $%s with its key variable.'",
                "line": 34,
                "context": " $scope->hasVariableType($node->keyVar->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('Foreach overwrites $%s with its key variable.', $node->keyVar->name))\n\t\t\t\t->identifier('for"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Foreach overwrites $%s with its value variable.'",
                "line": 57,
                "context": "e)\n\t\t\t&& $scope->hasVariableType($expr->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('Foreach overwrites $%s with its value variable.', $expr->name))\n\t\t\t\t->identifier('foreach.v"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Methods/IllegalConstructorStaticCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s::%s'",
                "line": 89,
                "context": "ts($functionName, $traitAliases)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $traitAliases[$functionName] === sprintf('%s::%s', $scope->getTraitReflection()->getName(), '__construct');\n\t}\n\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Methods/WrongCaseOfInheritedMethodRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t'Method %s::%s() does not match %s method name: %s::%s().'",
                "line": 76,
                "context": "$parentMethod->getName() === $methodName) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn RuleErrorBuilder::message(sprintf(\n\t\t\t'Method %s::%s() does not match %s method name: %s::%s().',\n\t\t\t$declaringClass->getDispl"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticModuloRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the left side.',\n\t\t\t\t$leftType->desc"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the right side.',\n\t\t\t\t$rightType->de"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticSubtractionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandInArithmeticIncrementOrDecrementRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %s, %s given.'",
                "line": 44,
                "context": "s->helper->isValidForDecrement($scope, $node->var)\n\t\t) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %s, %s given.',\n\t\t\t\t$this->describeOperation(),\n\t\t\t\t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.nonNumeric'",
                "line": 48,
                "context": "\t\t$this->describeOperation(),\n\t\t\t\t$varType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.nonNumeric', $this->getIdentifier()))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n\tabstract p"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticExponentiationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the left side.',\n\t\t\t\t$leftType->desc"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the right side.',\n\t\t\t\t$rightType->de"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticMultiplicationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticDivisionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticAdditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the left side.'",
                "line": 54,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the right side.'",
                "line": 60,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Classes/RequireParentConstructCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'%s::__construct() does not call parent constructor from %s.'",
                "line": 59,
                "context": "rClass($classReflection);\n\t\tif ($parentClass !== false) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'%s::__construct() does not call parent constructor from %s.',\n\t\t\t\t\t$classReflection->"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Cast/UselessCastRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Casting to %s something that\\'",
                "line": 70,
                "context": "rorBuilder->treatPhpDocTypesAsCertainTip();\n\t\t\t};\n\t\t\treturn [\n\t\t\t\t$addTip(RuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Casting to %s something that\\'s already %s.',\n\t\t\t\t\t$castType->describe(VerbosityLevel"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInElseIfConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in an elseif condition, %s given.'",
                "line": 40,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in an elseif condition, %s given.',\n\t\t\t\t$conditionExpression"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInDoWhileConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a do-while condition, %s given.'",
                "line": 39,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a do-while condition, %s given.',\n\t\t\t\t$conditionExpressio"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanAndRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.'",
                "line": 39,
                "context": ") {\n\t\t\t$leftType = $scope->getType($originalNode->left);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$left"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.leftNotBoolean'",
                "line": 43,
                "context": " left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$leftType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.leftNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\t$rightScope = $node->getRightScope()"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.'",
                "line": 49,
                "context": "$rightType = $rightScope->getType($originalNode->right);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rig"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.rightNotBoolean'",
                "line": 53,
                "context": "ight side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rightType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.rightNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanOrRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.'",
                "line": 39,
                "context": ") {\n\t\t\t$leftType = $scope->getType($originalNode->left);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$left"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.leftNotBoolean'",
                "line": 43,
                "context": " left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$leftType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.leftNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\t$rightScope = $node->getRightScope()"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.'",
                "line": 49,
                "context": "$rightType = $rightScope->getType($originalNode->right);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rig"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.rightNotBoolean'",
                "line": 53,
                "context": "ight side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rightType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.rightNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanNotRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a negated boolean, %s given.'",
                "line": 40,
                "context": "[];\n\t\t}\n\n\t\t$expressionType = $scope->getType($node->expr);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a negated boolean, %s given.',\n\t\t\t\t$expressionType->descr"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInTernaryOperatorRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a ternary operator condition, %s given.'",
                "line": 44,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a ternary operator condition, %s given.',\n\t\t\t\t$conditionE"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInIfConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in an if condition, %s given.'",
                "line": 40,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in an if condition, %s given.',\n\t\t\t\t$conditionExpressionType"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInWhileConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a while condition, %s given.'",
                "line": 39,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a while condition, %s given.',\n\t\t\t\t$conditionExpressionTy"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/DisallowedConstructs/DisallowedImplicitArrayCreationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Implicit array creation is not allowed - variable $%s does not exist.'",
                "line": 48,
                "context": "->hasVariableType($node->name);\n\t\tif ($certainty->no()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf('Implicit array creation is not allowed - variable $%s does not exist.', $node->name))\n\t\t\t\t\t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Implicit array creation is not allowed - variable $%s might not exist.'",
                "line": 56,
                "context": ")\n\t\t\t\t\t->build(),\n\t\t\t];\n\t\t}\n\n\t\tif ($certainty->maybe()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf('Implicit array creation is not allowed - variable $%s might not exist.', $node->name))\n\t\t\t\t"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/SwitchConditions/MatchingTypeInSwitchCaseConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Switch condition type (%s) does not match case condition %s (%s).'",
                "line": 46,
                "context": "e->isSuperTypeOf($caseType)->no()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Switch condition type (%s) does not match case condition %s (%s).',\n\t\t\t\t$conditionType"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/DynamicCallOnStaticMethodsRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().'",
                "line": 65,
                "context": "PStanTestCase::class,\n\t\t\t], true)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().',\n\t\t\t\t\t$methodReflection->getDeclaringClass()"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/DynamicCallOnStaticMethodsCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().'",
                "line": 54,
                "context": "od($name, $scope);\n\t\tif ($methodReflection->isStatic()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().',\n\t\t\t\t\t$methodReflection->getDeclaringClass()"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/StrictFunctionCallsRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be set.'",
                "line": 73,
                "context": "!array_key_exists($argumentPosition, $node->getArgs())) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be set.',\n\t\t\t\t\t$functionName,\n\t\t\t\t\t$a"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be true.'",
                "line": 85,
                "context": "\n\t\tif (!$trueType->isSuperTypeOf($argumentType)->yes()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be true.',\n\t\t\t\t\t$functionName,\n\t\t\t\t\t$"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/ForLoop/OverwriteVariablesWithForLoopInitRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('For loop initial assignment overwrites variable $%s.'",
                "line": 54,
                "context": "e)\n\t\t\t&& $scope->hasVariableType($expr->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('For loop initial assignment overwrites variable $%s.', $expr->name))\n\t\t\t\t->identifier('for."
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Functions/ClosureUsesThisRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Anonymous function uses $this assigned to variable $%s. Use $this directly in the function body.'",
                "line": 44,
                "context": "if (!$varType instanceof ThisType) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf('Anonymous function uses $this assigned to variable $%s. Use $this directly in the function "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticMethodCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static method call on %s.'",
                "line": 37,
                "context": "de->getClass())->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static method call on %s.',\n\t\t\t\t$methodCalledOn,\n\t\t\t))->identifier('staticMet"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableMethodCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable method call on %s.'",
                "line": 31,
                "context": ">getName() instanceof Node\\Identifier) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable method call on %s.',\n\t\t\t\t$scope->getType($node->getVar())->describe(Verbosity"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariablePropertyFetchRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable property access on %s.'",
                "line": 63,
                "context": "MLElement($classReflection)\n\t\t\t) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable property access on %s.',\n\t\t\t\t$fetchedOnType->describe(VerbosityLevel::typeOnl"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableMethodCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable method call on %s.'",
                "line": 31,
                "context": "node->name instanceof Node\\Identifier) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable method call on %s.',\n\t\t\t\t$scope->getType($node->var)->describe(VerbosityLevel"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticMethodCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static method call on %s.'",
                "line": 37,
                "context": "e($node->class)->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static method call on %s.',\n\t\t\t\t$methodCalledOn,\n\t\t\t))->identifier('staticMet"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticPropertyFetchRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static property access on %s.'",
                "line": 37,
                "context": "e($node->class)->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static property access on %s.',\n\t\t\t\t$propertyAccessedOn,\n\t\t\t))->identifier('s"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/composer/ClassLoader.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/component'",
                "line": 21,
                "context": "assLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/framework'",
                "line": 22,
                "context": "  $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     //"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 118,
                "context": "  public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return ar"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/composer/autoload_static.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 10,
                "context": "5632927df4f72bd7\n{\n    public static $files = array (\n        '9b38cf48e83f5d8f60375221cd213eee' => __DIR__ . '/..' . '/phpstan/phpstan/bootstrap.php',\n    );\n\n    public static $prefixLengthsPsr4 = a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 32,
                "context": "refixDirsPsr4 = array (\n        'TomasVotruba\\\\TypeCoverage\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/tomasvotruba/type-coverage/src',\n        ),\n        'PHPStan\\\\ExtensionInstaller"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 36,
                "context": "erage/src',\n        ),\n        'PHPStan\\\\ExtensionInstaller\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/phpstan/extension-installer/src',\n        ),\n        'PHPStan\\\\' => \n        arr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 40,
                "context": "pstan/extension-installer/src',\n        ),\n        'PHPStan\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/phpstan/phpstan-strict-rules/src',\n        ),\n        'Ergebnis\\\\PHPStan\\\\Rules\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 44,
                "context": "ct-rules/src',\n        ),\n        'Ergebnis\\\\PHPStan\\\\Rules\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/ergebnis/phpstan-rules/src',\n        ),\n    );\n\n    public static $classMap = ar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 49,
                "context": ",\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Nette\\\\ArgumentOutOfRangeException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 50,
                "context": "_DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Nette\\\\ArgumentOutOfRangeException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DeprecatedException' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 51,
                "context": "on' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DeprecatedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DirectoryNotFoundException' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 52,
                "context": "__DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DirectoryNotFoundException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\FileNotFoundException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 53,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\FileNotFoundException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\HtmlStringable' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 54,
                "context": "ception' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\HtmlStringable' => __DIR__ . '/..' . '/nette/utils/src/HtmlStringable.php',\n        'Nette\\\\IOException' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 55,
                "context": "ngable' => __DIR__ . '/..' . '/nette/utils/src/HtmlStringable.php',\n        'Nette\\\\IOException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidArgumentException' => __"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 56,
                "context": "> __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidArgumentException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidStateException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 57,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidStateException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Iterators\\\\CachingIterator' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 58,
                "context": "__DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Iterators\\\\CachingIterator' => __DIR__ . '/..' . '/nette/utils/src/Iterators/CachingIterator.php',\n        'Nette\\\\Iterators\\\\Mappe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 59,
                "context": "_ . '/..' . '/nette/utils/src/Iterators/CachingIterator.php',\n        'Nette\\\\Iterators\\\\Mapper' => __DIR__ . '/..' . '/nette/utils/src/Iterators/Mapper.php',\n        'Nette\\\\Localization\\\\ITranslator"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 60,
                "context": "__ . '/..' . '/nette/utils/src/Iterators/Mapper.php',\n        'Nette\\\\Localization\\\\ITranslator' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Localization\\\\Translator' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 61,
                "context": "_DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Localization\\\\Translator' => __DIR__ . '/..' . '/nette/utils/src/Translator.php',\n        'Nette\\\\MemberAccessException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 62,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Translator.php',\n        'Nette\\\\MemberAccessException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotImplementedException' => __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 63,
                "context": "=> __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotImplementedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotSupportedException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 64,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotSupportedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\OutOfRangeException' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 65,
                "context": "on' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\OutOfRangeException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\ShouldNotHappenException' => __"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 66,
                "context": "> __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\ShouldNotHappenException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\SmartObject' => __DIR__ . '/..'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 67,
                "context": "nException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\SmartObject' => __DIR__ . '/..' . '/nette/utils/src/SmartObject.php',\n        'Nette\\\\StaticClass' => __DIR__ . '/.."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 68,
                "context": "artObject' => __DIR__ . '/..' . '/nette/utils/src/SmartObject.php',\n        'Nette\\\\StaticClass' => __DIR__ . '/..' . '/nette/utils/src/StaticClass.php',\n        'Nette\\\\UnexpectedValueException' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 69,
                "context": " __DIR__ . '/..' . '/nette/utils/src/StaticClass.php',\n        'Nette\\\\UnexpectedValueException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Utils\\\\ArrayHash' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 70,
                "context": "ption' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Utils\\\\ArrayHash' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayHash.php',\n        'Nette\\\\Utils\\\\ArrayList' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 71,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayHash.php',\n        'Nette\\\\Utils\\\\ArrayList' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayList.php',\n        'Nette\\\\Utils\\\\Arrays' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 72,
                "context": "ist' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayList.php',\n        'Nette\\\\Utils\\\\Arrays' => __DIR__ . '/..' . '/nette/utils/src/Utils/Arrays.php',\n        'Nette\\\\Utils\\\\AssertionException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 73,
                "context": "_DIR__ . '/..' . '/nette/utils/src/Utils/Arrays.php',\n        'Nette\\\\Utils\\\\AssertionException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Callback' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 74,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Callback' => __DIR__ . '/..' . '/nette/utils/src/Utils/Callback.php',\n        'Nette\\\\Utils\\\\DateTime' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 75,
                "context": "ck' => __DIR__ . '/..' . '/nette/utils/src/Utils/Callback.php',\n        'Nette\\\\Utils\\\\DateTime' => __DIR__ . '/..' . '/nette/utils/src/Utils/DateTime.php',\n        'Nette\\\\Utils\\\\FileInfo' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 76,
                "context": "me' => __DIR__ . '/..' . '/nette/utils/src/Utils/DateTime.php',\n        'Nette\\\\Utils\\\\FileInfo' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileInfo.php',\n        'Nette\\\\Utils\\\\FileSystem' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 77,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileInfo.php',\n        'Nette\\\\Utils\\\\FileSystem' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileSystem.php',\n        'Nette\\\\Utils\\\\Finder' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 78,
                "context": "em' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileSystem.php',\n        'Nette\\\\Utils\\\\Finder' => __DIR__ . '/..' . '/nette/utils/src/Utils/Finder.php',\n        'Nette\\\\Utils\\\\Floats' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 79,
                "context": "Finder' => __DIR__ . '/..' . '/nette/utils/src/Utils/Finder.php',\n        'Nette\\\\Utils\\\\Floats' => __DIR__ . '/..' . '/nette/utils/src/Utils/Floats.php',\n        'Nette\\\\Utils\\\\Helpers' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 80,
                "context": "loats' => __DIR__ . '/..' . '/nette/utils/src/Utils/Floats.php',\n        'Nette\\\\Utils\\\\Helpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/Helpers.php',\n        'Nette\\\\Utils\\\\Html' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 81,
                "context": "Helpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/Helpers.php',\n        'Nette\\\\Utils\\\\Html' => __DIR__ . '/..' . '/nette/utils/src/Utils/Html.php',\n        'Nette\\\\Utils\\\\IHtmlString' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 82,
                "context": "tml' => __DIR__ . '/..' . '/nette/utils/src/Utils/Html.php',\n        'Nette\\\\Utils\\\\IHtmlString' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Utils\\\\Image' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 83,
                "context": "String' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Utils\\\\Image' => __DIR__ . '/..' . '/nette/utils/src/Utils/Image.php',\n        'Nette\\\\Utils\\\\ImageColor' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 84,
                "context": "age' => __DIR__ . '/..' . '/nette/utils/src/Utils/Image.php',\n        'Nette\\\\Utils\\\\ImageColor' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageColor.php',\n        'Nette\\\\Utils\\\\ImageException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 85,
                "context": "_DIR__ . '/..' . '/nette/utils/src/Utils/ImageColor.php',\n        'Nette\\\\Utils\\\\ImageException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ImageType' => __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 86,
                "context": " => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ImageType' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageType.php',\n        'Nette\\\\Utils\\\\Iterables' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 87,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageType.php',\n        'Nette\\\\Utils\\\\Iterables' => __DIR__ . '/..' . '/nette/utils/src/Utils/Iterables.php',\n        'Nette\\\\Utils\\\\Json' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 88,
                "context": "ables' => __DIR__ . '/..' . '/nette/utils/src/Utils/Iterables.php',\n        'Nette\\\\Utils\\\\Json' => __DIR__ . '/..' . '/nette/utils/src/Utils/Json.php',\n        'Nette\\\\Utils\\\\JsonException' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 89,
                "context": "n' => __DIR__ . '/..' . '/nette/utils/src/Utils/Json.php',\n        'Nette\\\\Utils\\\\JsonException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ObjectHelpers' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 90,
                "context": "__DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ObjectHelpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/ObjectHelpers.php',\n        'Nette\\\\Utils\\\\Paginator' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 91,
                "context": " __DIR__ . '/..' . '/nette/utils/src/Utils/ObjectHelpers.php',\n        'Nette\\\\Utils\\\\Paginator' => __DIR__ . '/..' . '/nette/utils/src/Utils/Paginator.php',\n        'Nette\\\\Utils\\\\Random' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 92,
                "context": "tor' => __DIR__ . '/..' . '/nette/utils/src/Utils/Paginator.php',\n        'Nette\\\\Utils\\\\Random' => __DIR__ . '/..' . '/nette/utils/src/Utils/Random.php',\n        'Nette\\\\Utils\\\\Reflection' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 93,
                "context": "om' => __DIR__ . '/..' . '/nette/utils/src/Utils/Random.php',\n        'Nette\\\\Utils\\\\Reflection' => __DIR__ . '/..' . '/nette/utils/src/Utils/Reflection.php',\n        'Nette\\\\Utils\\\\ReflectionMethod' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 94,
                "context": "IR__ . '/..' . '/nette/utils/src/Utils/Reflection.php',\n        'Nette\\\\Utils\\\\ReflectionMethod' => __DIR__ . '/..' . '/nette/utils/src/Utils/ReflectionMethod.php',\n        'Nette\\\\Utils\\\\RegexpExcept"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 95,
                "context": ". '/..' . '/nette/utils/src/Utils/ReflectionMethod.php',\n        'Nette\\\\Utils\\\\RegexpException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Strings' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 96,
                "context": "n' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Strings' => __DIR__ . '/..' . '/nette/utils/src/Utils/Strings.php',\n        'Nette\\\\Utils\\\\Type' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 97,
                "context": "Strings' => __DIR__ . '/..' . '/nette/utils/src/Utils/Strings.php',\n        'Nette\\\\Utils\\\\Type' => __DIR__ . '/..' . '/nette/utils/src/Utils/Type.php',\n        'Nette\\\\Utils\\\\UnknownImageFileExceptio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 98,
                "context": "_ . '/..' . '/nette/utils/src/Utils/Type.php',\n        'Nette\\\\Utils\\\\UnknownImageFileException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Validators' => __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 99,
                "context": "=> __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Validators' => __DIR__ . '/..' . '/nette/utils/src/Utils/Validators.php',\n    );\n\n    public static function getIni"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/composer/autoload_real.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ClassLoader.php'",
                "line": 12,
                "context": "sLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/autoload_static.php'",
                "line": 29,
                "context": "ray('ComposerAutoloaderInitf9e7218f71d5874b5632927df4f72bd7', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9e721"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 30,
                "context": "b5632927df4f72bd7', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9e7218f71d5874b5632927df4f72bd7::getInitializer"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/composer/InstalledVersions.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 281,
                "context": "s/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '/installed.php';\n            } else {\n                self::$installed = array();\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 383,
                "context": " bool, replaced?: string[], provided?: string[]}>} $required */\n                $required = require __DIR__ . '/installed.php';\n                self::$installed = $required;\n            } else {\n     "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 74,
                "context": "unt($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    /**\n     * Returns a list of all packag"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/composer/installed.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 8,
                "context": " '1257cf02e51e2f7b6b84358ee1495ed8a21b188b',\n        'type' => 'library',\n        'install_path' => __DIR__ . '/../../',\n        'aliases' => array(),\n        'dev' => true,\n    ),\n    'versions' => a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 18,
                "context": "02e51e2f7b6b84358ee1495ed8a21b188b',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../../',\n            'aliases' => array(),\n            'dev_requirement' => false,\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../ergebnis/phpstan-rules'",
                "line": 27,
                "context": "73ef9cd355279fff5122e080',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../ergebnis/phpstan-rules',\n            'aliases' => array(),\n            'dev_requireme"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../nette/utils'",
                "line": 36,
                "context": "55043c7050eb050df361c5e313cf708309',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../nette/utils',\n            'aliases' => array(),\n            'dev_requirement' => true"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/extension-installer'",
                "line": 45,
                "context": "2326fba0403ec24fe912372936',\n            'type' => 'composer-plugin',\n            'install_path' => __DIR__ . '/../phpstan/extension-installer',\n            'aliases' => array(),\n            'dev_requ"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/phpstan'",
                "line": 54,
                "context": "9e967c0c22812bcfa7bda4ff82c09f3b0c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpstan/phpstan',\n            'aliases' => array(),\n            'dev_requirement' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/phpstan-strict-rules'",
                "line": 63,
                "context": "88e1dbe27ca50f31fdb6236a',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../phpstan/phpstan-strict-rules',\n            'aliases' => array(),\n            'dev_req"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../tomasvotruba/type-coverage'",
                "line": 72,
                "context": "da538fa44f2939236a990e0c',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../tomasvotruba/type-coverage',\n            'aliases' => array(),\n            'dev_requi"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/nette/utils/src/Utils/ArrayHash.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Key must be either a string or an integer, %s given.'",
                "line": 69,
                "context": "ue): void\n\t{\n\t\tif (!is_scalar($key)) { // prevents null\n\t\t\tthrow new Nette\\InvalidArgumentException(sprintf('Key must be either a string or an integer, %s given.', get_debug_type($key)));\n\t\t}\n\n\t\t$this"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/nette/utils/src/Utils/Strings.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Normalizer'",
                "line": 137,
                "context": " static function normalize(string $s): string\n\t{\n\t\t// convert to compressed normal form (NFC)\n\t\tif (class_exists('Normalizer', false) && ($n = \\Normalizer::normalize($s, \\Normalizer::FORM_C)) !== fals"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Transliterator'",
                "line": 191,
                "context": "CONV_IMPL, '\"\\'') : null;\n\t\tstatic $transliterator = null;\n\t\tif ($transliterator === null) {\n\t\t\tif (class_exists('Transliterator', false)) {\n\t\t\t\t$transliterator = \\Transliterator::create('Any-Latin; L"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Normalizer'",
                "line": 354,
                "context": "*/\n\tpublic static function compare(string $left, string $right, ?int $length = null): bool\n\t{\n\t\tif (class_exists('Normalizer', false)) {\n\t\t\t$left = \\Normalizer::normalize($left, \\Normalizer::FORM_D); "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/tomasvotruba/type-coverage/rector.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 9,
                "context": "es=1);\n\nuse Rector\\Config\\RectorConfig;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->withPhpSets()\n    ->withPreparedSets(dead"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 10,
                "context": "RectorConfig;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->withPhpSets()\n    ->withPreparedSets(deadCode: true, codeQuality: t"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoNullableReturnTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class has a nullable return type declaration.'",
                "line": 52,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class has a nullable return type declaration.',\n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() has a nullable return type declaration.'",
                "line": 64,
                "context": "aration()->toString())\n                    ->build(),\n            ];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() has a nullable return type declaration.',\n            $classRe"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithContainerTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class has a parameter $%s with a type declaration of %s, but containers should not be injected.'",
                "line": 155,
                "context": "ion\n    ): Rules\\RuleError {\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class has a parameter $%s with a type declaration"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() has a parameter $%s with a type declaration of %s, but containers should not be injected.'",
                "line": 167,
                "context": "thContainerTypeDeclaration()->toString())\n                ->build();\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() has a parameter $%s with a type declaration of %s, but contain"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/FinalInAbstractClassRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() is not final, but since the containing class is abstract, it should be.'",
                "line": 82,
                "context": "   if ('__construct' === $node->name->name) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() is not final, but since the containing class is abstract, it s"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoConstructorParameterWithDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Constructor in anonymous class has parameter $%s with default value.'",
                "line": 63,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Constructor in anonymous class has parameter $%s with default value.',"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Constructor in %s has parameter $%s with default value.'",
                "line": 83,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Constructor in %s has parameter $%s with default value.',\n                "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/PrivateInFinalClassRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class is protected, but since the containing class is final, it can be private.'",
                "line": 102,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class is protected, but since the containing clas"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() is protected, but since the containing class is final, it can be private.'",
                "line": 114,
                "context": "alClass()->toString())\n                    ->build(),\n            ];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() is protected, but since the containing class is final, it can "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s with a nullable type declaration.'",
                "line": 69,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s with a nullable type "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s with a nullable type declaration.'",
                "line": 90,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s with a nullable type declaration.',\n    "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s that is passed by reference.'",
                "line": 61,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s that is passed by ref"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s that is passed by reference.'",
                "line": 82,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s that is passed by reference.',\n         "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s with null as default value.'",
                "line": 69,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s with null as default "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s with null as default value.'",
                "line": 90,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s with null as default value.',\n          "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoReturnByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class returns by reference.'",
                "line": 46,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class returns by reference.',\n                $me"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() returns by reference.'",
                "line": 60,
                "context": "),\n            ];\n        }\n\n        $className = $classReflection->getName();\n\n        $message = \\sprintf(\n            'Method %s::%s() returns by reference.',\n            $className,\n            $m"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/ErrorIdentifier.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'ergebnis.%s'",
                "line": 125,
                "context": "new self('testCaseWithSuffix');\n    }\n\n    public function toString(): string\n    {\n        return \\sprintf(\n            'ergebnis.%s',\n            $this->value,\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Classes/PHPUnit/Framework/TestCaseWithSuffixRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Class %s extends %s, is concrete, but does not have a Test suffix.'",
                "line": 83,
                "context": "match('/Test$/', $fullyQualifiedClassName)) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Class %s extends %s, is concrete, but does not have a Test suffix.',\n         "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoNullableReturnTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Function %s() has a nullable return type declaration.'",
                "line": 51,
                "context": "bleTypeDeclaration($node->getReturnType())) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Function %s() has a nullable return type declaration.',\n            $node->nam"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s with a nullable type declaration.'",
                "line": 64,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s with a nullable type declaration.',\n      "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s that is passed by reference.'",
                "line": 56,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s that is passed by reference.',\n           "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s with null as default value.'",
                "line": 64,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s with null as default value.',\n            "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoReturnByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Function %s() returns by reference.'",
                "line": 39,
                "context": "array {\n        if (false === $node->byRef) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Function %s() returns by reference.',\n            $node->namespacedName,\n     "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s with a nullable type declaration.'",
                "line": 62,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s with a nullable type declaration.',\n            "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s that is passed by reference.'",
                "line": 54,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s that is passed by reference.',\n                $"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s with null as default value.'",
                "line": 62,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s with null as default value.',\n                $p"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/TextUI/Configuration/Xml/MigratorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/output-9.2.xml'",
                "line": 22,
                "context": "ic function provider(): array\n    {\n        return [\n            'PHPUnit 9.2' => [\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-9.2.xml',\n                __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/input-9.2.xml'",
                "line": 23,
                "context": "          __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-9.2.xml',\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/input-9.2.xml',\n            ],\n            "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/output-9.5.xml'",
                "line": 26,
                "context": "onfigurationMigration/input-9.2.xml',\n            ],\n            'PHPUnit 9.5' => [\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-9.5.xml',\n                __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/input-9.5.xml'",
                "line": 27,
                "context": "          __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-9.5.xml',\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/input-9.5.xml',\n            ],\n            "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/output-relative-schema-path.xml'",
                "line": 30,
                "context": "figurationMigration/input-9.5.xml',\n            ],\n            'Relative Path' => [\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-relative-schema-path.xml',\n         "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/input-relative-schema-path.xml'",
                "line": 31,
                "context": " . '/../../../../_files/XmlConfigurationMigration/output-relative-schema-path.xml',\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/input-relative-schema-path.xml',\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/output-issue-5859.xml'",
                "line": 34,
                "context": "ation/input-relative-schema-path.xml',\n            ],\n            'Issue 5859' => [\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-issue-5859.xml',\n                __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/input-issue-5859.xml'",
                "line": 35,
                "context": "   __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-issue-5859.xml',\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/input-issue-5859.xml',\n            ],\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/output-issue-6087.xml'",
                "line": 38,
                "context": "rationMigration/input-issue-5859.xml',\n            ],\n            'Issue 6087' => [\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-issue-6087.xml',\n                __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/XmlConfigurationMigration/input-issue-6087.xml'",
                "line": 39,
                "context": "   __DIR__ . '/../../../../_files/XmlConfigurationMigration/output-issue-6087.xml',\n                __DIR__ . '/../../../../_files/XmlConfigurationMigration/input-issue-6087.xml',\n            ],\n     "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/TextUI/Configuration/Xml/ValidatorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../../phpunit.xml'",
                "line": 27,
                "context": "lFile(): void\n    {\n        $result = (new Validator)->validate(\n            (new Loader)->loadFile(__DIR__ . '/../../../../../phpunit.xml'),\n            (new SchemaFinder)->find(Version::series()),\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../end-to-end/migration/_files/possibility-to-migrate-from-92-is-detected/phpunit.xml'",
                "line": 39,
                "context": " {\n        $result = (new Validator)->validate(\n            (new Loader)->loadFile(\n                __DIR__ . '/../../../../end-to-end/migration/_files/possibility-to-migrate-from-92-is-detected/phpun"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files/invalid-configuration.txt'",
                "line": 46,
                "context": "rrors());\n        $this->assertStringEqualsStringIgnoringLineEndings(\n            file_get_contents(__DIR__ . '/../../../../_files/invalid-configuration.txt'),\n            $result->asString(),\n       "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/TextUI/Configuration/Xml/LoaderTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../_files'",
                "line": 145,
                "context": ")->source();\n\n        $this->assertTrue($source->hasBaseline());\n        $this->assertSame(realpath(__DIR__ . '/../../../../_files') . DIRECTORY_SEPARATOR . '.phpunit/baseline.xml', $source->baseline("
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/TextUI/Output/Default/ResultPrinterTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/no_tests.txt'",
                "line": 64,
                "context": "tatic function provider(): array\n    {\n        return [\n            'no tests' => [\n                __DIR__ . '/expectations/no_tests.txt',\n                self::createTestResult(\n                    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_without_issues.txt'",
                "line": 71,
                "context": "               ),\n            ],\n\n            'successful test without issues' => [\n                __DIR__ . '/expectations/successful_test_without_issues.txt',\n                self::createTestResult"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/errored_test.txt'",
                "line": 76,
                "context": "          self::createTestResult(),\n            ],\n\n            'errored test' => [\n                __DIR__ . '/expectations/errored_test.txt',\n                self::createTestResult(\n                "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/failed_test.txt'",
                "line": 85,
                "context": "               ],\n                ),\n            ],\n\n            'failed test' => [\n                __DIR__ . '/expectations/failed_test.txt',\n                self::createTestResult(\n                 "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/incomplete_test.txt'",
                "line": 94,
                "context": "           ],\n                ),\n            ],\n\n            'incomplete test' => [\n                __DIR__ . '/expectations/incomplete_test.txt',\n                self::createTestResult(\n             "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/skipped_test.txt'",
                "line": 107,
                "context": "              ],\n                ),\n            ],\n\n            'skipped test' => [\n                __DIR__ . '/expectations/skipped_test.txt',\n                self::createTestResult(\n                "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/risky_test_single_line_message.txt'",
                "line": 120,
                "context": "          ),\n            ],\n\n            'risky test with single-line message' => [\n                __DIR__ . '/expectations/risky_test_single_line_message.txt',\n                self::createTestResult"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/risky_test_with_multiple_reasons_with_single_line_messages.txt'",
                "line": 131,
                "context": "  ],\n\n            'risky test with multiple reasons with single-line messages' => [\n                __DIR__ . '/expectations/risky_test_with_multiple_reasons_with_single_line_messages.txt',\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/risky_test_with_multiple_reasons_with_multi_line_messages_windows.txt'",
                "line": 144,
                "context": "with multi-line messages' => [\n                (stripos(PHP_OS, 'WIN') === 0) ?\n                    __DIR__ . '/expectations/risky_test_with_multiple_reasons_with_multi_line_messages_windows.txt' :\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/risky_test_with_multiple_reasons_with_multi_line_messages.txt'",
                "line": 145,
                "context": "ations/risky_test_with_multiple_reasons_with_multi_line_messages_windows.txt' :\n                    __DIR__ . '/expectations/risky_test_with_multiple_reasons_with_multi_line_messages.txt',\n           "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/errored_test_that_is_risky.txt'",
                "line": 157,
                "context": "],\n                ),\n            ],\n\n            'errored test that is risky' => [\n                __DIR__ . '/expectations/errored_test_that_is_risky.txt',\n                self::createTestResult(\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/failed_test_that_is_risky.txt'",
                "line": 171,
                "context": " ],\n                ),\n            ],\n\n            'failed test that is risky' => [\n                __DIR__ . '/expectations/failed_test_that_is_risky.txt',\n                self::createTestResult(\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_deprecation.txt'",
                "line": 185,
                "context": "      'successful test that triggers deprecation (do not display stack trace)' => [\n                __DIR__ . '/expectations/successful_test_with_deprecation.txt',\n                self::createTestResu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_deprecation_with_stack_trace.txt'",
                "line": 199,
                "context": "\n            'successful test that triggers deprecation (display stack trace)' => [\n                __DIR__ . '/expectations/successful_test_with_deprecation_with_stack_trace.txt',\n                sel"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_php_deprecation.txt'",
                "line": 215,
                "context": "e,\n            ],\n\n            'successful test that triggers PHP deprecation' => [\n                __DIR__ . '/expectations/successful_test_with_php_deprecation.txt',\n                self::createTest"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_php_deprecation_multiple.txt'",
                "line": 235,
                "context": "       'successful test that triggers the same PHP deprecation multiple times' => [\n                __DIR__ . '/expectations/successful_test_with_php_deprecation_multiple.txt',\n                self::c"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_phpunit_deprecation.txt'",
                "line": 242,
                "context": "           ],\n\n            'successful test that triggers PHPUnit deprecation' => [\n                __DIR__ . '/expectations/successful_test_with_phpunit_deprecation.txt',\n                self::create"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_error.txt'",
                "line": 263,
                "context": "          ),\n            ],\n\n            'successful test that triggers error' => [\n                __DIR__ . '/expectations/successful_test_with_error.txt',\n                self::createTestResult(\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_notice.txt'",
                "line": 277,
                "context": "         ),\n            ],\n\n            'successful test that triggers notice' => [\n                __DIR__ . '/expectations/successful_test_with_notice.txt',\n                self::createTestResult(\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_php_notice.txt'",
                "line": 291,
                "context": "     ),\n            ],\n\n            'successful test that triggers PHP notice' => [\n                __DIR__ . '/expectations/successful_test_with_php_notice.txt',\n                self::createTestResul"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_warning.txt'",
                "line": 305,
                "context": "        ),\n            ],\n\n            'successful test that triggers warning' => [\n                __DIR__ . '/expectations/successful_test_with_warning.txt',\n                self::createTestResult(\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_php_warning.txt'",
                "line": 319,
                "context": "    ),\n            ],\n\n            'successful test that triggers PHP warning' => [\n                __DIR__ . '/expectations/successful_test_with_php_warning.txt',\n                self::createTestResu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/test_with_phpunit_error.txt'",
                "line": 333,
                "context": "             ),\n            ],\n\n            'test that triggers PHPUnit error' => [\n                __DIR__ . '/expectations/test_with_phpunit_error.txt',\n                self::createTestResult(\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_and_phpunit_test_runner_notice.txt'",
                "line": 351,
                "context": ",\n            ],\n\n            'successful test and PHPUnit test runner notice' => [\n                __DIR__ . '/expectations/successful_test_and_phpunit_test_runner_notice.txt',\n                self::"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_phpunit_notice.txt'",
                "line": 363,
                "context": " ),\n            ],\n\n            'successful test that triggers PHPUnit notice' => [\n                __DIR__ . '/expectations/successful_test_with_phpunit_notice.txt',\n                self::createTestR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_phpunit_warning.txt'",
                "line": 378,
                "context": "),\n            ],\n\n            'successful test that triggers PHPUnit warning' => [\n                __DIR__ . '/expectations/successful_test_with_phpunit_warning.txt',\n                self::createTest"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_baseline_ignored_issue.txt'",
                "line": 393,
                "context": "        ],\n\n            'successful test that triggers baseline-ignored issue' => [\n                __DIR__ . '/expectations/successful_test_with_baseline_ignored_issue.txt',\n                self::cre"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectations/successful_test_with_baseline_ignored_issues.txt'",
                "line": 400,
                "context": "       ],\n\n            'successful test that triggers baseline-ignored issues' => [\n                __DIR__ . '/expectations/successful_test_with_baseline_ignored_issues.txt',\n                self::cr"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/TextUI/AbstractSouceFilterTestCase.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../..'",
                "line": 54,
                "context": "otected static function fixturePath(?string $subPath = null): string\n    {\n        $path = realpath(__DIR__ . '/../..') . '/_files/source-filter';\n\n        if ($subPath !== null) {\n            $path ="
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/TextUI/SourceFilterTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('expected match to return %s for: %s'",
                "line": 426,
                "context": "             (new SourceFilter((new SourceMapper)->map($source)))->includes($file),\n                sprintf('expected match to return %s for: %s', json_encode($shouldInclude), $file),\n            );\n "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Util/ReflectionTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/BankAccountTest.php'",
                "line": 27,
                "context": "ForMethod(): void\n    {\n        $this->assertSame(\n            [\n                'file' => realpath(__DIR__ . '/../../_files/BankAccountTest.php'),\n                'line' => 22,\n            ],\n       "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Util/Xml/LoaderTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/configuration.xml'",
                "line": 23,
                "context": "blic function testCanParseFileWithValidXml(): void\n    {\n        $document = (new Loader)->loadFile(__DIR__ . '/../../../_files/configuration.xml');\n\n        $this->assertInstanceOf(DOMDocument::class"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/empty.xml'",
                "line": 40,
                "context": "(): void\n    {\n        $this->expectException(XmlException::class);\n\n        (new Loader)->loadFile(__DIR__ . '/../../../_files/empty.xml');\n    }\n\n    public function testCannotParseFileWithInvalidXm"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/invalid.xml'",
                "line": 48,
                "context": "Premature end of data in tag test line 1|EndTag: '</' not found#\");\n\n        (new Loader)->loadFile(__DIR__ . '/../../../_files/invalid.xml');\n    }\n\n    public function testCanParseStringWithValidXml"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Util/ExcludeListTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../src'",
                "line": 29,
                "context": "\n        $excludeList = new ExcludeList(true);\n\n        $this->assertContains(\n            realpath(__DIR__ . '/../../../src'),\n            $excludeList->getExcludedDirectories(),\n        );\n    }\n\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../src/Framework/TestCase.php'",
                "line": 38,
                "context": " $excludeList = new ExcludeList(true);\n\n        $this->assertTrue($excludeList->isExcluded(realpath(__DIR__ . '/../../../src/Framework/TestCase.php')));\n        $this->assertFalse($excludeList->isExcl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../src/Framework/TestCase.php'",
                "line": 46,
                "context": "excludeList = new ExcludeList(false);\n\n        $this->assertFalse($excludeList->isExcluded(realpath(__DIR__ . '/../../../src/Framework/TestCase.php')));\n    }\n\n    public function testAdditionalDirect"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Util/FilesystemTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/does-not-exist'",
                "line": 26,
                "context": "$this->assertSame(__DIR__ . DIRECTORY_SEPARATOR . 'does-not-exist', Filesystem::resolveStreamOrFile(__DIR__ . '/does-not-exist'));\n        $this->assertFalse(Filesystem::resolveStreamOrFile(__DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/does-not-exist/does-not-exist'",
                "line": 27,
                "context": "eamOrFile(__DIR__ . '/does-not-exist'));\n        $this->assertFalse(Filesystem::resolveStreamOrFile(__DIR__ . '/does-not-exist/does-not-exist'));\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Util/XmlTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s::prepareString(\"",
                "line": 54,
                "context": "\n        } catch (Exception $e) {\n        }\n\n        $this->assertNull(\n            $e,\n            sprintf(\n                '%s::prepareString(\"\\x%02x\") should not crash %s',\n                Xml::cla"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Framework/Assert/assertFileExistsTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/DoesNotExist'",
                "line": 38,
                "context": "g}>\n     */\n    public static function failureProvider(): array\n    {\n        return [\n            [__DIR__ . '/DoesNotExist'],\n        ];\n    }\n\n    #[DataProvider('successProvider')]\n    public func"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Framework/Assert/FunctionsTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../src/Framework/Assert.php'",
                "line": 30,
                "context": "          '/public static function (assert[^ (]+)/',\n            file_get_contents(\n                __DIR__ . '/../../../../src/Framework/Assert.php',\n            ),\n            $matches,\n        );\n\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../src/Framework/Assert/Functions.php'",
                "line": 52,
                "context": "_match_all(\n            '/function (assert[^ (]+)/',\n            file_get_contents(\n                __DIR__ . '/../../../../src/Framework/Assert/Functions.php',\n            ),\n            $matches,\n  "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Framework/Assert/assertDirectoryExistsTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/DoesNotExist'",
                "line": 38,
                "context": "g}>\n     */\n    public static function failureProvider(): array\n    {\n        return [\n            [__DIR__ . '/DoesNotExist'],\n        ];\n    }\n\n    #[DataProvider('successProvider')]\n    public func"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Framework/MockObject/ReturnValueGeneratorTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '(%s&%s)|(%s&%s)'",
                "line": 227,
                "context": "erfaces_found_in_union_of_intersections(): void\n    {\n        $value = $this->generate(\n            sprintf(\n                '(%s&%s)|(%s&%s)',\n                AnInterface::class,\n                Anot"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Framework/MockObject/MockObjectTest.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 12,
                "context": "at was distributed with this source code.\n */\nnamespace PHPUnit\\Framework\\MockObject;\n\nuse function call_user_func_array;\nuse Exception;\nuse PHPUnit\\Framework\\Attributes\\DoesNotPerformAssertions;\nuse "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 534,
                "context": "ring $methodName = '__phpunit_verify', array $arguments = []): void\n    {\n        try {\n            call_user_func_array([$double, $methodName], $arguments);\n        } catch (ExpectationFailedExceptio"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Framework/TestCaseTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s::testCaseToString'",
                "line": 55,
                "context": "\n    }\n\n    public function testCaseToString(): void\n    {\n        $this->assertEquals(\n            sprintf(\n                '%s::testCaseToString',\n                self::class,\n            ),\n       "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Runner/Baseline/WriterTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline'",
                "line": 27,
                "context": "rivate string $target;\n\n    protected function setUp(): void\n    {\n        $this->target = realpath(__DIR__ . '/../../../_files/baseline') . DIRECTORY_SEPARATOR . 'actual.xml';\n    }\n\n    protected fu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/expected.xml'",
                "line": 39,
                "context": "  (new Writer)->write($this->target, $this->baseline());\n\n        $this->assertXmlFileEqualsXmlFile(__DIR__ . '/../../../_files/baseline/expected.xml', $this->target);\n    }\n\n    private function base"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 56,
                "context": ";\n    }\n\n    private function issue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            10,\n            null,\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 66,
                "context": "\n\n    private function anotherIssue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            11,\n            null,\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 76,
                "context": "   private function yetAnotherIssue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            10,\n            null,\n       "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Runner/Baseline/BaselineTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 59,
                "context": ";\n    }\n\n    private function issue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            10,\n            null,\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 69,
                "context": "\n\n    private function anotherIssue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            11,\n            null,\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 79,
                "context": "   private function yetAnotherIssue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            10,\n            null,\n       "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Runner/Baseline/ReaderTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/expected.xml'",
                "line": 23,
                "context": "function testReadsBaselineFromFileWithValidXml(): void\n    {\n        $baseline = (new Reader)->read(__DIR__ . '/../../../_files/baseline/expected.xml');\n\n        $this->assertTrue($baseline->has($this"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../end-to-end/_files/baseline/invalid-baseline/baseline.xml'",
                "line": 41,
                "context": "   $this->expectException(CannotLoadBaselineException::class);\n\n        (new Reader)->read(realpath(__DIR__ . '/../../../end-to-end/_files/baseline/invalid-baseline/baseline.xml'));\n    }\n\n    public "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../end-to-end/_files/baseline/unsupported-baseline/baseline.xml'",
                "line": 48,
                "context": "   $this->expectException(CannotLoadBaselineException::class);\n\n        (new Reader)->read(realpath(__DIR__ . '/../../../end-to-end/_files/baseline/unsupported-baseline/baseline.xml'));\n    }\n\n    pri"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 54,
                "context": ";\n    }\n\n    private function issue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            10,\n            null,\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 64,
                "context": "\n\n    private function anotherIssue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            11,\n            null,\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 74,
                "context": "   private function yetAnotherIssue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            10,\n            null,\n       "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Runner/Baseline/IssueTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 27,
                "context": "ase\n{\n    public function testHasFile(): void\n    {\n        $this->assertSame(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            $this->issue()->file(),\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 70,
                "context": "s->expectException(FileDoesNotHaveLineException::class);\n\n        Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            1234,\n            null,\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 80,
                "context": ";\n    }\n\n    private function issue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            10,\n            null,\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../_files/baseline/FileWithIssues.php'",
                "line": 90,
                "context": "\n\n    private function anotherIssue(): Issue\n    {\n        return Issue::from(\n            realpath(__DIR__ . '/../../../_files/baseline/FileWithIssues.php'),\n            11,\n            null,\n       "
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Event/Value/Test/TestMethodTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s with data set #%d'",
                "line": 95,
                "context": "t output',\n                    ),\n                ],\n            ),\n        );\n\n        $expected = sprintf(\n            '%s with data set #%d',\n            $test->methodName(),\n            $dataSetNa"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s with data set \"",
                "line": 129,
                "context": "t output',\n                    ),\n                ],\n            ),\n        );\n\n        $expected = sprintf(\n            '%s with data set \"%s\"',\n            $test->methodName(),\n            $dataSetN"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Event/Value/TestSuite/TestSuiteBuilderTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../end-to-end/_files/groups/phpunit.xml'",
                "line": 63,
                "context": "gumentsBuilder)->fromParameters([]);\n        $xmlConfiguration = (new XmlConfigurationLoader)->load(__DIR__ . '/../../../../end-to-end/_files/groups/phpunit.xml');\n        $configuration    = (new Con"
            }
        ],
        "vendor/phpunit/phpunit/tests/unit/Metadata/Api/CodeCoverageTest.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $testCase",
                "line": 137,
                "context": "nBeSkippedCanBeDetermined(bool $expected, string $testCase): void\n    {\n        $test             = new $testCase('testSomething');\n        $coverageRequired = (new CodeCoverage)->shouldCodeCoverageBe"
            }
        ],
        "vendor/phpunit/phpunit/tests/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 14,
                "context": "_PATH', __DIR__ . DIRECTORY_SEPARATOR . '_files' . DIRECTORY_SEPARATOR);\n}\n\n$composer = file_exists(__DIR__ . '/../vendor/autoload.php');\n$phar     = file_exists(__DIR__ . '/autoload.php');\n\nif ($comp"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/autoload.php'",
                "line": 15,
                "context": "EPARATOR);\n}\n\n$composer = file_exists(__DIR__ . '/../vendor/autoload.php');\n$phar     = file_exists(__DIR__ . '/autoload.php');\n\nif ($composer && $phar) {\n    print 'More than one test fixture autoloa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 34,
                "context": "ine('PHPUNIT_COMPOSER_INSTALL', dirname(__DIR__) . '/vendor/autoload.php');\n    }\n\n    require_once __DIR__ . '/../vendor/autoload.php';\n}\n\nif ($phar) {\n    if (!defined('__PHPUNIT_PHAR__')) {\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../build/artifacts/phpunit-snapshot.phar'",
                "line": 39,
                "context": "/vendor/autoload.php';\n}\n\nif ($phar) {\n    if (!defined('__PHPUNIT_PHAR__')) {\n        require_once __DIR__ . '/../build/artifacts/phpunit-snapshot.phar';\n    }\n\n    require_once __DIR__ . '/autoload."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/autoload.php'",
                "line": 42,
                "context": "        require_once __DIR__ . '/../build/artifacts/phpunit-snapshot.phar';\n    }\n\n    require_once __DIR__ . '/autoload.php';\n\n    $jsonFile = dirname(__DIR__) . '/composer.json';\n    $base     = dir"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/self-direct-indirect/_files/user-deprecation-report-self-direct-indirect/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../src/FirstPartyClass.php'",
                "line": 2,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ThirdPartyClass.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/self-direct-indirect/_files/user-deprecation-report-self-direct/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../src/FirstPartyClass.php'",
                "line": 2,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ThirdPartyClass.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/self-direct-indirect/_files/user-deprecation-report-self/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../src/FirstPartyClass.php'",
                "line": 2,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ThirdPartyClass.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/self-direct-indirect/_files/user-deprecation/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../src/FirstPartyClass.php'",
                "line": 2,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ThirdPartyClass.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-xml/_files/exception-in-extension-constructor/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-xml/_files/exception-in-extension-subscriber/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExecutionFinishedSubscriber.php'",
                "line": 13,
                "context": " was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-xml/_files/extension-bootstrap/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExecutionFinishedSubscriber.php'",
                "line": 13,
                "context": " was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-xml/_files/exception-in-extension-bootstrap-method/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-xml/_files/class-does-not-implement-interface/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-cli/_files/exception-in-extension-constructor/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-cli/_files/exception-in-extension-subscriber/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExecutionFinishedSubscriber.php'",
                "line": 13,
                "context": " was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-cli/_files/extension-bootstrap/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExecutionFinishedSubscriber.php'",
                "line": 13,
                "context": " was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n\nrequire __DIR__ . '/MyExecutionFinishedSubscriber.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-cli/_files/exception-in-extension-bootstrap-method/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/extension-cli/_files/class-does-not-implement-interface/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/MyExtensionBootstrap.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/MyExtensionBootstrap.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/deprecation-trigger/_files/deprecation-trigger-method/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../src/FirstPartyClass.php'",
                "line": 2,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\nrequire __DIR__ ."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ThirdPartyClass.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\nrequire __DIR__ . '/DeprecationTrigger.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/DeprecationTrigger.php'",
                "line": 4,
                "context": "\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\nrequire __DIR__ . '/DeprecationTrigger.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/deprecation-trigger/_files/deprecation-trigger-function/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../src/FirstPartyClass.php'",
                "line": 2,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\nrequire __DIR__ ."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ThirdPartyClass.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\nrequire __DIR__ . '/trigger_deprecation.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/trigger_deprecation.php'",
                "line": 4,
                "context": "\nrequire __DIR__ . '/../src/FirstPartyClass.php';\nrequire __DIR__ . '/ThirdPartyClass.php';\nrequire __DIR__ . '/trigger_deprecation.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/phar/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Greeter.php'",
                "line": 11,
                "context": "ation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire_once __DIR__ . '/Greeter.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/testdox/_files/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Foo.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/Foo.php';\n\nrequire __DIR__ . '/Bar.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Bar.php'",
                "line": 13,
                "context": "ENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/Foo.php';\n\nrequire __DIR__ . '/Bar.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/regression/797/bootstrap797.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../bootstrap.php'",
                "line": 12,
                "context": "ed with this source code.\n */\n// PHPUnit_Framework_TestCase itself does not exist. :-)\nrequire_once __DIR__ . '/../../../bootstrap.php';\n\nconst GITHUB_ISSUE = 797;\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/regression/3156/Issue3156Test.php": [
            {
                "pattern": "require\\s*\\(\\s*[^)]+\\)",
                "match": "Require(string $val, stdClass $obj)",
                "line": 36,
                "context": "'testConstants')]\n    #[DataProvider('dataSelectOperatorsProvider')]\n    public function testDependsRequire(string $val, stdClass $obj): void\n    {\n        $this->assertStringEndsWith('/', '/');\n    }"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/regression/2158/Issue2158Test.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/constant.inc'",
                "line": 25,
                "context": "t constant in main process.\n     */\n    public function testSomething(): void\n    {\n        include __DIR__ . '/constant.inc';\n        $this->assertTrue(true);\n    }\n\n    /**\n     * Constant defined p"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/regression/6142/Issue6142Test.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expected.json'",
                "line": 18,
                "context": "lass Issue6142Test extends TestCase\n{\n    public function testOne(): void\n    {\n        $expected = __DIR__ . '/expected.json';\n        $actual   = __DIR__ . '/actual.json';\n\n        $this->assertJson"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/actual.json'",
                "line": 19,
                "context": " function testOne(): void\n    {\n        $expected = __DIR__ . '/expected.json';\n        $actual   = __DIR__ . '/actual.json';\n\n        $this->assertJsonFileEqualsJsonFile($expected, $actual);\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/regression/2724/SeparateClassRunMethodInNewProcessTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/parent_process_id.txt'",
                "line": 23,
                "context": "eClassRunMethodInNewProcessTest extends TestCase\n{\n    public const string PROCESS_ID_FILE_PATH   = __DIR__ . '/parent_process_id.txt';\n    public const int INITIAL_PARENT_PROCESS_ID = 0;\n    public c"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/regression/74/Issue74Test.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/NewException.php'",
                "line": 18,
                "context": "public function testCreateAndThrowNewExceptionInProcessIsolation(): void\n    {\n        require_once __DIR__ . '/NewException.php';\n\n        throw new NewException('Testing GH-74');\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/regression/5822/tests/Issue5822Test.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 13,
                "context": "ource code.\n */\nnamespace PHPUnit\\TestFixture\\Issue5822;\n\nuse const E_USER_DEPRECATED;\nuse function call_user_func;\nuse function trigger_error;\nuse PHPUnit\\Framework\\TestCase;\n\nfinal class Issue5822Te"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 27,
                "context": "     $this->assertTrue(true);\n    }\n\n    private function callUserFuncExample(): void\n    {\n        call_user_func([$this, 'exampleCallback']);\n    }\n\n    private function exampleCallback(): void\n    "
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/_files/transform-exception-hook-method/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/OriginalException.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/OriginalException.php';\n\nrequire __DIR__ . '/TransformedException.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/TransformedException.php'",
                "line": 13,
                "context": "hat was distributed with this source code.\n */\nrequire __DIR__ . '/OriginalException.php';\n\nrequire __DIR__ . '/TransformedException.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/_files/attribute-based-filtering/src/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/f.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/f.php';\n\nrequire __DIR__ . '/Foo.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Foo.php'",
                "line": 13,
                "context": "ICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/f.php';\n\nrequire __DIR__ . '/Foo.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/_files/filter-error-handler/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/VendorClass.php'",
                "line": 2,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/VendorClass.php';\nrequire __DIR__ . '/../src/SourceClass.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../src/SourceClass.php'",
                "line": 3,
                "context": "<?php declare(strict_types=1);\nrequire __DIR__ . '/VendorClass.php';\nrequire __DIR__ . '/../src/SourceClass.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/end-to-end/event/_files/custom-failure-interface/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/CustomFailureInterface.php'",
                "line": 11,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/CustomFailureInterface.php';\n\nrequire __DIR__ . '/CustomFailureException.php';\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/CustomFailureException.php'",
                "line": 13,
                "context": "as distributed with this source code.\n */\nrequire __DIR__ . '/CustomFailureInterface.php';\n\nrequire __DIR__ . '/CustomFailureException.php';\n"
            }
        ],
        "vendor/phpunit/phpunit/tests/_files/FailureTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/expectedFileFormat.txt'",
                "line": 86,
                "context": "nction testAssertStringMatchesFormatFile(): void\n    {\n        $this->assertStringMatchesFormatFile(__DIR__ . '/expectedFileFormat.txt', '...BAR...');\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-version.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../tmp/phar/phpunit/Runner/Version.php'",
                "line": 9,
                "context": "declare(strict_types=1);\n\nif (!isset($argv[1], $argv[2])) {\n    exit(1);\n}\n\n\\file_put_contents(\n    __DIR__ . '/../tmp/phar/phpunit/Runner/Version.php',\n    \\str_replace(\n        'private static strin"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../tmp/phar/phpunit/Runner/Version.php'",
                "line": 13,
                "context": "',\n        'private static string $pharVersion = \\'' . $argv[1] . '\\';',\n        \\file_get_contents(__DIR__ . '/../tmp/phar/phpunit/Runner/Version.php')\n    ),\n    \\LOCK_EX\n);\n\nif ($argv[2] === 'relea"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/generate-global-assert-wrappers.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../vendor/autoload.php'",
                "line": 7,
                "context": "rict_types=1);\n\nuse PHPUnit\\Framework\\Assert;\nuse PHPUnit\\Framework\\Constraint\\Constraint;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n/** @var string[] $lines */\n$lines = \\file(__DIR__ . '/../."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../src/Framework/Assert.php'",
                "line": 10,
                "context": "raint;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n/** @var string[] $lines */\n$lines = \\file(__DIR__ . '/../../src/Framework/Assert.php');\n\n$buffer = '<?php declare(strict_types=1);\n/*\n * This "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../src/Framework/Assert/Functions.php'",
                "line": 212,
                "context": "ExceptionStub\n    {\n        return new ExceptionStub($exception);\n    }\n}\n\nEOT;\n\n\\file_put_contents(__DIR__ . '/../../src/Framework/Assert/Functions.php', $buffer);\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n        \"use %s;\\n\"",
                "line": 83,
                "context": "_unique($usedClasses);\n\\sort($usedClasses);\n\nforeach ($usedClasses as $usedClass) {\n    $buffer .= \\sprintf(\n        \"use %s;\\n\",\n        $usedClass\n    );\n}\n\n$buffer .= \"\\n\";\n\nforeach ($class->getMet"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/version.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../vendor/sebastian/version/src/Version.php'",
                "line": 4,
                "context": "#!/usr/bin/env php\n<?php declare(strict_types=1);\n\nrequire __DIR__ . '/../../vendor/sebastian/version/src/Version.php';\n\nuse SebastianBergmann\\Version;\n\n$buffe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../src/Runner/Version.php'",
                "line": 8,
                "context": "/sebastian/version/src/Version.php';\n\nuse SebastianBergmann\\Version;\n\n$buffer  = \\file_get_contents(__DIR__ . '/../../src/Runner/Version.php');\n$start   = \\strpos($buffer, 'new VersionId(\\'') + \\strle"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 12,
                "context": "'\\'', $start);\n$version = \\substr($buffer, $start, $end - $start);\n$version = new Version($version, __DIR__ . '/../../');\n\nprint $version->asString();\n"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/run.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/vendor/autoload.php'",
                "line": 3,
                "context": "#!/usr/bin/env php\n<?php declare(strict_types=1);\nrequire __DIR__ . '/vendor/autoload.php';\n\nif (!isset($argv[1]) || !is_file($argv[1])) {\n    exit(1);\n}\n\nuse"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/composer/autoload_real.php'",
                "line": 23,
                "context": " $err;\n        }\n    }\n    trigger_error(\n        $err,\n        E_USER_ERROR\n    );\n}\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInit386a05f6676643b8b2eb49288e20d"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/vendor/composer/ClassLoader.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/component'",
                "line": 21,
                "context": "assLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/framework'",
                "line": 22,
                "context": "  $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     //"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 118,
                "context": "  public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return ar"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/vendor/composer/autoload_static.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 19,
                "context": "c static $prefixDirsPsr4 = array (\n        'Seld\\\\PharUtils\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/seld/phar-utils/src',\n        ),\n    );\n\n    public static $classMap = array (\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 24,
                "context": ",\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Seld\\\\PharUtils\\\\Linter' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 25,
                "context": "sions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Seld\\\\PharUtils\\\\Linter' => __DIR__ . '/..' . '/seld/phar-utils/src/Linter.php',\n        'Seld\\\\PharUtils\\\\Timestamps' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 26,
                "context": "r' => __DIR__ . '/..' . '/seld/phar-utils/src/Linter.php',\n        'Seld\\\\PharUtils\\\\Timestamps' => __DIR__ . '/..' . '/seld/phar-utils/src/Timestamps.php',\n    );\n\n    public static function getIniti"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/vendor/composer/autoload_real.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ClassLoader.php'",
                "line": 12,
                "context": "sLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/platform_check.php'",
                "line": 25,
                "context": "\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        require __DIR__ . '/platform_check.php';\n\n        spl_autoload_register(array('ComposerAutoloaderInit386a05f"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/autoload_static.php'",
                "line": 31,
                "context": "ray('ComposerAutoloaderInit386a05f6676643b8b2eb49288e20d079', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInit386a05"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 32,
                "context": "8b2eb49288e20d079', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInit386a05f6676643b8b2eb49288e20d079::getInitializer"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/vendor/composer/InstalledVersions.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 270,
                "context": "s/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '/installed.php';\n            } else {\n                self::$installed = array();\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 346,
                "context": " bool, replaced?: string[], provided?: string[]}>} $required */\n                $required = require __DIR__ . '/installed.php';\n                self::$installed = $required;\n            } else {\n     "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 63,
                "context": "unt($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    /**\n     * Returns a list of all packag"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/vendor/composer/installed.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 8,
                "context": " 'aca96fcd8b6799ead1066524b2b91c5184ece78f',\n        'type' => 'library',\n        'install_path' => __DIR__ . '/../../',\n        'aliases' => array(),\n        'dev' => true,\n    ),\n    'versions' => a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 18,
                "context": "cd8b6799ead1066524b2b91c5184ece78f',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../../',\n            'aliases' => array(),\n            'dev_requirement' => false,\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../seld/phar-utils'",
                "line": 27,
                "context": "14f163c1be4c601b9b7bd6af81ba8d701c',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../seld/phar-utils',\n            'aliases' => array(),\n            'dev_requirement' => "
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog-'",
                "line": 12,
                "context": " = $argv[1];\n$versionSeries = explode('.', $version)[0] . '.' . explode('.', $version)[1];\n\n$file = __DIR__ . '/../../ChangeLog-' . $versionSeries . '.md';\n\nif (!is_file($file) || !is_readable($file))"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-manifest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../composer.json'",
                "line": 94,
                "context": "());\n}\n\nfunction package(): array\n{\n    $data = json_decode(\n        file_get_contents(\n            __DIR__ . '/../../composer.json'\n        ),\n        true\n    );\n\n    [$group, $name] = explode('/', "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../composer.lock'",
                "line": 127,
                "context": "\n}\n\nfunction dependencies(): array\n{\n    return json_decode(\n        file_get_contents(\n            __DIR__ . '/../../composer.lock'\n        ),\n        true\n    )['packages'];\n}\n\nfunction versionWithR"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s /path/to/manifest.txt /path/to/sbom.xml'",
                "line": 6,
                "context": "r/bin/env php\n<?php declare(strict_types=1);\nif ($argc !== 3) {\n    fwrite(\n        STDERR,\n        sprintf(\n            '%s /path/to/manifest.txt /path/to/sbom.xml' . PHP_EOL,\n            $argv[0]\n  "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n        '%s/%s: %s'",
                "line": 24,
                "context": "string $outputFilename, array $package, string $version, array $dependencies): void\n{\n    $buffer = sprintf(\n        '%s/%s: %s' . \"\\n\",\n        $package['group'],\n        $package['name'],\n        $v"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s: %s'",
                "line": 32,
                "context": "e['name'],\n        $version\n    );\n\n    foreach ($dependencies as $dependency) {\n        $buffer .= sprintf(\n            '%s: %s' . \"\\n\",\n            $dependency['name'],\n            versionWithRefere"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'pkg:composer/%s/%s@%s'",
                "line": 164,
                "context": "endElement();\n    }\n\n    $writer->endElement();\n\n    $writer->writeElement(\n        'purl',\n        sprintf(\n            'pkg:composer/%s/%s@%s',\n            $group,\n            $name,\n            $ve"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Application.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Error in bootstrap script: %s:%s%s%s%s'",
                "line": 360,
                "context": "  try {\n            include_once $filename;\n        } catch (Throwable $t) {\n            $message = sprintf(\n                'Error in bootstrap script: %s:%s%s%s%s',\n                $t::class,\n      "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s%sPrevious error: %s:%s%s%s%s'",
                "line": 370,
                "context": "sString(),\n            );\n\n            while ($t = $t->getPrevious()) {\n                $message .= sprintf(\n                    '%s%sPrevious error: %s:%s%s%s%s',\n                    PHP_EOL,\n       "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"%-15s%s\\n\"",
                "line": 587,
                "context": "e(Printer $printer, string $type, string $message): void\n    {\n        $printer->print(\n            sprintf(\n                \"%-15s%s\\n\",\n                $type . ':',\n                $message,\n       "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Function %s cannot be configured as a deprecation trigger because it is not declared'",
                "line": 813,
                "context": ")) {\n                EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                    sprintf(\n                        'Function %s cannot be configured as a deprecation trigger because "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        '%s cannot be configured as a deprecation trigger because it is not in ClassName::methodName format'",
                "line": 828,
                "context": ")) {\n                EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                    sprintf(\n                        '%s cannot be configured as a deprecation trigger because it is not"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Method %s::%s cannot be configured as a deprecation trigger because it is not declared'",
                "line": 841,
                "context": ")) {\n                EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                    sprintf(\n                        'Method %s::%s cannot be configured as a deprecation trigger becaus"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Cli/Builder.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                                        'unrecognized --order-by option: %s'",
                "line": 618,
                "context": "  default:\n                                throw new Exception(\n                                    sprintf(\n                                        'unrecognized --order-by option: %s',\n             "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Option %s cannot be used more than once'",
                "line": 1112,
                "context": "on] === 2) {\n            EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                sprintf(\n                    'Option %s cannot be used more than once',\n                    $option,"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Xml/Validator/ValidationResult.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('  - %s'",
                "line": 70,
                "context": "e);\n\n            foreach ($validationErrorsOnLine as $validationError) {\n                $buffer .= sprintf('  - %s' . PHP_EOL, $validationError);\n            }\n        }\n\n        return $buffer;\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Xml/TestSuiteMapper.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                                    'Cannot add file %s to test suite \"",
                "line": 91,
                "context": "         EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                                sprintf(\n                                    'Cannot add file %s to test suite \"%s\" as it was alread"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                                'Cannot add file %s to test suite \"",
                "line": 120,
                "context": "             EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                            sprintf(\n                                'Cannot add file %s to test suite \"%s\" as it was already ad"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Xml/SchemaFinder.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../'",
                "line": 80,
                "context": "_PHPUNIT_PHAR_ROOT__')) {\n            return __PHPUNIT_PHAR_ROOT__ . '/';\n        }\n\n        return __DIR__ . '/../../../../';\n    }\n}\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Schema for PHPUnit %s is not available'",
                "line": 64,
                "context": "        if (!is_file($filename)) {\n            throw new CannotFindSchemaException(\n                sprintf(\n                    'Schema for PHPUnit %s is not available',\n                    $version,"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/Migrations/RemoveEmptyFilter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s element has unexpected attributes'",
                "line": 49,
                "context": "void\n    {\n        if ($element->attributes->length > 0) {\n            throw new MigrationException(sprintf('%s element has unexpected attributes', $element->nodeName));\n        }\n\n        if ($elemen"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s element has unexpected children'",
                "line": 53,
                "context": "    if ($element->getElementsByTagName('*')->length > 0) {\n            throw new MigrationException(sprintf('%s element has unexpected children', $element->nodeName));\n        }\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Configuration/Xml/Migration/MigrationBuilder.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $migration",
                "line": 105,
                "context": "ntinue;\n            }\n\n            foreach ($migrations as $migration) {\n                $stack[] = new $migration;\n            }\n        }\n\n        return $stack;\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Output/SummaryPrinter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'OK (%d test%s, %d assertion%s)'",
                "line": 50,
                "context": "vents()) {\n            $this->printWithColor(\n                'fg-black, bg-green',\n                sprintf(\n                    'OK (%d test%s, %d assertion%s)',\n                    $result->numberOf"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s%s: %d'",
                "line": 133,
                "context": "$always || $count > 0) {\n            $this->printWithColor(\n                $color,\n                sprintf(\n                    '%s%s: %d',\n                    $this->countPrinted ? ', ' : '',\n      "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s%d issue%s %s ignored by baseline.%s'",
                "line": 163,
                "context": "    if ($result->hasIssuesIgnoredByBaseline()) {\n            $this->printer->print(\n                sprintf(\n                    '%s%d issue%s %s ignored by baseline.%s',\n                    PHP_EOL,\n"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Output/Default/ResultPrinter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%d test%s triggered %d %s%s:'",
                "line": 435,
                "context": "e($triggeringTests));\n        unset($triggeringTests);\n\n        $this->printListHeader(\n            sprintf(\n                '%d test%s triggered %d %s%s:' . PHP_EOL . PHP_EOL,\n                $number"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s:%d'",
                "line": 448,
                "context": "         ),\n        );\n\n        $i = 1;\n\n        foreach ($issues as $issue) {\n            $title = sprintf(\n                '%s:%d',\n                $issue->file(),\n                $issue->line(),\n  "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"%d test%s triggered %d %s%s:\\n\\n\"",
                "line": 492,
                "context": "hIssues, int $numberOfIssues, string $type): void\n    {\n        $this->printListHeader(\n            sprintf(\n                \"%d test%s triggered %d %s%s:\\n\\n\",\n                $numberOfTestsWithIssue"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"There %s %d %s%s:\\n\\n\"",
                "line": 506,
                "context": "HeaderWithNumber(int $number, string $type): void\n    {\n        $this->printListHeader(\n            sprintf(\n                \"There %s %d %s%s:\\n\\n\",\n                ($number === 1) ? 'was' : 'were',\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"%s%d) %s\\n%s%s\"",
                "line": 550,
                "context": " string $body): void\n    {\n        $body = trim($body);\n\n        $this->printer->print(\n            sprintf(\n                \"%s%d) %s\\n%s%s\",\n                $number > 1 ? \"\\n\" : '',\n                "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"%d) %s\\n%s%s\"",
                "line": 566,
                "context": " string $body): void\n    {\n        $body = trim($body);\n\n        $this->printer->print(\n            sprintf(\n                \"%d) %s\\n%s%s\",\n                $number,\n                $title,\n          "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s%s:%d%s'",
                "line": 647,
                "context": ")) {\n            return '';\n        }\n\n        assert($test instanceof TestMethod);\n\n        return sprintf(\n            '%s%s:%d%s',\n            PHP_EOL,\n            $test->file(),\n            $test-"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s%s:%d%s'",
                "line": 688,
                "context": "        !$reason instanceof PhpWarningTriggered) {\n            return '';\n        }\n\n        return sprintf(\n            '%s%s:%d%s',\n            $single ? '' : '  ',\n            $reason->file(),\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Output/TestDox/ResultPrinter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'These %s methods errored:'",
                "line": 460,
                "context": "    if ($errors === []) {\n            return;\n        }\n\n        $this->printer->print(\n            sprintf(\n                'These %s methods errored:' . PHP_EOL . PHP_EOL,\n                $type,\n   "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%d) %s'",
                "line": 470,
                "context": "        foreach ($errors as $method => $error) {\n            $this->printer->print(\n                sprintf(\n                    '%d) %s' . PHP_EOL,\n                    ++$index,\n                    $"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/ListTestsAsTextCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Available test%s:'",
                "line": 41,
                "context": "        $this->tests = $tests;\n    }\n\n    public function execute(): Result\n    {\n        $buffer = sprintf(\n            'Available test%s:' . PHP_EOL,\n            count($this->tests) > 1 ? 's' : '',\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s::%s'",
                "line": 48,
                "context": "each ($this->tests as $test) {\n            if ($test instanceof TestCase) {\n                $name = sprintf(\n                    '%s::%s',\n                    $test::class,\n                    str_rep"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                ' - %s'",
                "line": 57,
                "context": "           } else {\n                $name = $test->getName();\n            }\n\n            $buffer .= sprintf(\n                ' - %s' . PHP_EOL,\n                $name,\n            );\n        }\n\n       "
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/ListTestSuitesCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Available test suite%s:'",
                "line": 49,
                "context": "       ksort($suites);\n\n        $buffer = $this->warnAboutConflictingOptions();\n\n        $buffer .= sprintf(\n            'Available test suite%s:' . PHP_EOL,\n            count($suites) > 1 ? 's' : '',"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                ' - %s (%d test%s)'",
                "line": 55,
                "context": "s' : '',\n        );\n\n        foreach ($suites as $suite => $numberOfTests) {\n            $buffer .= sprintf(\n                ' - %s (%d test%s)' . PHP_EOL,\n                $suite,\n                $num"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/ListTestsAsXmlCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Wrote list of tests that would have been run to %s'",
                "line": 128,
                "context": "e_put_contents($this->filename, $writer->outputMemory());\n\n        return Result::from(\n            sprintf(\n                'Wrote list of tests that would have been run to %s' . PHP_EOL,\n           "
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/VersionCheckCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'The latest version compatible with PHPUnit %s is PHPUnit %s.'",
                "line": 60,
                "context": " latest version of PHPUnit.' . PHP_EOL;\n\n        if ($notLatestCompatible) {\n            $buffer .= sprintf(\n                'The latest version compatible with PHPUnit %s is PHPUnit %s.' . PHP_EOL,\n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'The latest version is PHPUnit %s.'",
                "line": 68,
                "context": "latestCompatibleVersion,\n            );\n        }\n\n        if ($notLatest) {\n            $buffer .= sprintf(\n                'The latest version is PHPUnit %s.' . PHP_EOL,\n                $latestVersi"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/ListTestFilesCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                ' - %s'",
                "line": 65,
                "context": ">getName();\n        }\n\n        foreach (array_unique($results) as $result) {\n            $buffer .= sprintf(\n                ' - %s' . PHP_EOL,\n                $result,\n            );\n        }\n\n     "
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/GenerateConfigurationCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'https://schema.phpunit.de/%s/phpunit.xsd'",
                "line": 73,
                "context": "hemaLocation = 'vendor/phpunit/phpunit/phpunit.xsd';\n        } else {\n            $schemaLocation = sprintf(\n                'https://schema.phpunit.de/%s/phpunit.xsd',\n                Version::series"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/MigrateConfigurationCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Created backup:         %s.bak%sMigrated configuration: %s%s'",
                "line": 43,
                "context": "   file_put_contents($this->filename, $migrated);\n\n            return Result::from(\n                sprintf(\n                    'Created backup:         %s.bak%sMigrated configuration: %s%s',\n       "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Migration of %s failed:%s%s%s'",
                "line": 53,
                "context": "),\n            );\n        } catch (Throwable $t) {\n            return Result::from(\n                sprintf(\n                    'Migration of %s failed:%s%s%s',\n                    $this->filename,\n "
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Command/Commands/ListGroupsCommand.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Available test group%s:'",
                "line": 63,
                "context": "ps[$group]++;\n                }\n            }\n        }\n\n        ksort($groups);\n\n        $buffer = sprintf(\n            'Available test group%s:' . PHP_EOL,\n            count($groups) > 1 ? 's' : '',"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                ' - %s (%d test%s)'",
                "line": 73,
                "context": "h((string) $group, '__phpunit_')) {\n                continue;\n            }\n\n            $buffer .= sprintf(\n                ' - %s (%d test%s)' . PHP_EOL,\n                (string) $group,\n           "
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Exception/CannotOpenSocketException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Cannot open socket %s:%d'",
                "line": 25,
                "context": "ic function __construct(string $hostname, int $port)\n    {\n        parent::__construct(\n            sprintf(\n                'Cannot open socket %s:%d',\n                $hostname,\n                $por"
            }
        ],
        "vendor/phpunit/phpunit/src/Util/GlobalState.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '@ini_set(%s, %s);'",
                "line": 201,
                "context": "lf::isIniSettingDeprecated($key)) {\n                continue;\n            }\n\n            $result .= sprintf(\n                '@ini_set(%s, %s);' . \"\\n\",\n                self::exportVariable($key),\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Util/Color.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"\\x1b[%sm\"",
                "line": 102,
                "context": "    if ($styles === []) {\n            return $buffer;\n        }\n\n        return self::optimizeColor(sprintf(\"\\x1b[%sm\", implode(';', $styles)) . $buffer . \"\\x1b[0m\");\n    }\n\n    public static function"
            }
        ],
        "vendor/phpunit/phpunit/src/Util/Filter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"%s:%s\\n\"",
                "line": 75,
                "context": "            if (self::shouldPrintFrame($frame, $prefix, $excludeList)) {\n                $buffer .= sprintf(\n                    \"%s:%s\\n\",\n                    $frame['file'],\n                    $fra"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/TestRunner/SeparateProcessTestRunner.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/templates/class.tpl'",
                "line": 53,
                "context": "Class($test);\n\n        if ($runEntireClass) {\n            $template = new Template(\n                __DIR__ . '/templates/class.tpl',\n            );\n        } else {\n            $template = new Templa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/templates/method.tpl'",
                "line": 57,
                "context": "s/class.tpl',\n            );\n        } else {\n            $template = new Template(\n                __DIR__ . '/templates/method.tpl',\n            );\n        }\n\n        $bootstrap     = '';\n        $c"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/TestRunner/TestRunner.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s in %s:%s'",
                "line": 106,
                "context": "         assert(isset($frame['line']));\n\n            $e = new AssertionFailedError(\n                sprintf(\n                    '%s in %s:%s',\n                    $e->getMessage(),\n                  "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'This test is not expected to perform assertions but performed %d assertion%s'",
                "line": 195,
                "context": "ade::emitter()->testConsideredRisky(\n                $test->valueObjectForEvents(),\n                sprintf(\n                    'This test is not expected to perform assertions but performed %d asser"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Test code or tested code printed unexpected output: %s'",
                "line": 210,
                "context": "ade::emitter()->testConsideredRisky(\n                $test->valueObjectForEvents(),\n                sprintf(\n                    'Test code or tested code printed unexpected output: %s',\n             "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'This test was aborted after %d second%s'",
                "line": 317,
                "context": "ade::emitter()->testConsideredRisky(\n                $test->valueObjectForEvents(),\n                sprintf(\n                    'This test was aborted after %d second%s',\n                    $_timeou"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/TestSuite.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Class %s is abstract'",
                "line": 186,
                "context": "void\n    {\n        if ($testClass->isAbstract()) {\n            throw new Exception(\n                sprintf(\n                    'Class %s is abstract',\n                    $testClass->getName(),\n    "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Class %s is not a subclass of %s'",
                "line": 195,
                "context": " if (!$testClass->isSubclassOf(TestCase::class)) {\n            throw new Exception(\n                sprintf(\n                    'Class %s is not a subclass of %s',\n                    $testClass->get"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"The data provider specified for %s::%s is invalid\\n%s\"",
                "line": 518,
                "context": "               Event\\TestData\\TestDataCollection::fromArray([]),\n                ),\n                sprintf(\n                    \"The data provider specified for %s::%s is invalid\\n%s\",\n              "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            \"%s\\n%s\"",
                "line": 583,
                "context": "      if (trim($message) === '') {\n            $message = '<no message>';\n        }\n\n        return sprintf(\n            \"%s\\n%s\",\n            $message,\n            Filter::stackTraceFromThrowableAsSt"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 17,
                "context": " array_merge;\nuse function array_pop;\nuse function array_reverse;\nuse function assert;\nuse function call_user_func;\nuse function class_exists;\nuse function count;\nuse function implode;\nuse function is"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 624,
                "context": "s->markTestSuiteSkipped(implode(PHP_EOL, $missingRequirements));\n                }\n\n                call_user_func([$this->name, $method]);\n            } catch (Throwable $t) {\n            }\n\n        "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 691,
                "context": "            $this->name,\n                $method,\n            );\n\n            try {\n                call_user_func([$this->name, $method]);\n            } catch (Throwable $t) {\n            }\n\n        "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/TestBuilder.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $className",
                "line": 63,
                "context": "ttings($className, $methodName),\n                $groups,\n            );\n        }\n\n        $test = new $className($methodName);\n\n        $this->configureTestCase(\n            $test,\n            $this"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $className",
                "line": 95,
                "context": "e, $methodName),\n        );\n\n        foreach ($data as $_dataName => $_data) {\n            $_test = new $className($methodName);\n\n            $_test->setData($_dataName, $_data);\n\n            $this->c"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/PropertyHook/PropertySetHook.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '$%s::set'",
                "line": 26,
                "context": "mpatibility promise for PHPUnit\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            '$%s::set',\n            $this->propertyName(),\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/PropertyHook/PropertyGetHook.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '$%s::get'",
                "line": 26,
                "context": "mpatibility promise for PHPUnit\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            '$%s::get',\n            $this->propertyName(),\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/Invocation.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s::%s(%s)%s'",
                "line": 122,
                "context": "   $this->returnType,\n        );\n    }\n\n    public function toString(): string\n    {\n        return sprintf(\n            '%s::%s(%s)%s',\n            $this->className,\n            $this->methodName,\n  "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(': %s'",
                "line": 133,
                "context": "        $this->parameters,\n                ),\n            ),\n            $this->returnType !== '' ? sprintf(': %s', $this->returnType) : '',\n        );\n    }\n\n    public function object(): MockObjectI"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvokedAtMostCount.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'invoked at most %d time%s'",
                "line": 32,
                "context": "vocations = $allowedInvocations;\n    }\n\n    public function toString(): string\n    {\n        return sprintf(\n            'invoked at most %d time%s',\n            $this->allowedInvocations,\n           "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Expected invocation at most %d time%s but it occurred %d time%s.'",
                "line": 51,
                "context": "ns > $this->allowedInvocations) {\n            throw new ExpectationFailedException(\n                sprintf(\n                    'Expected invocation at most %d time%s but it occurred %d time%s.',\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvokedAtLeastCount.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'invoked at least %d time%s'",
                "line": 32,
                "context": "ocations = $requiredInvocations;\n    }\n\n    public function toString(): string\n    {\n        return sprintf(\n            'invoked at least %d time%s',\n            $this->requiredInvocations,\n         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Expected invocation at least %d time%s but it occurred %d time%s.'",
                "line": 51,
                "context": "s < $this->requiredInvocations) {\n            throw new ExpectationFailedException(\n                sprintf(\n                    'Expected invocation at least %d time%s but it occurred %d time%s.',\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/Parameters.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Parameter %s for invocation %s does not match expected value.'",
                "line": 127,
                "context": "crementAssertionCount();\n\n            $parameter->evaluate(\n                $other,\n                sprintf(\n                    'Parameter %s for invocation %s does not match expected value.',\n      "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/Rule/InvokedCount.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'invoked %d time%s'",
                "line": 37,
                "context": "turn $this->expectedCount === 0;\n    }\n\n    public function toString(): string\n    {\n        return sprintf(\n            'invoked %d time%s',\n            $this->expectedCount,\n            $this->expec"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method was expected to be called %d time%s, actually called %d time%s.'",
                "line": 61,
                "context": "Count !== $this->expectedCount) {\n            throw new ExpectationFailedException(\n                sprintf(\n                    'Method was expected to be called %d time%s, actually called %d time%s."
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/Matcher.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"Expectation failed for %s when %s\\n%s\"",
                "line": 118,
                "context": "(ExpectationFailedException $e) {\n            throw new ExpectationFailedException(\n                sprintf(\n                    \"Expectation failed for %s when %s\\n%s\",\n                    $this->met"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"Expectation failed for %s when %s\\n%s\"",
                "line": 171,
                "context": "(ExpectationFailedException $e) {\n            throw new ExpectationFailedException(\n                sprintf(\n                    \"Expectation failed for %s when %s\\n%s\",\n                    $this->met"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"Expectation failed for %s when %s.\\n%s\"",
                "line": 210,
                "context": "(ExpectationFailedException $e) {\n            throw new ExpectationFailedException(\n                sprintf(\n                    \"Expectation failed for %s when %s.\\n%s\",\n                    $this->me"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/Stub/ReturnCallback.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 12,
                "context": "s distributed with this source code.\n */\nnamespace PHPUnit\\Framework\\MockObject\\Stub;\n\nuse function call_user_func_array;\nuse PHPUnit\\Framework\\MockObject\\Invocation;\n\n/**\n * @no-named-arguments Param"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 34,
                "context": " = $callback;\n    }\n\n    public function invoke(Invocation $invocation): mixed\n    {\n        return call_user_func_array($this->callback, $invocation->parameters());\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Runtime/ReturnValueGenerator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Return value for %s::%s() cannot be generated%s, please configure a return value for this method'",
                "line": 153,
                "context": "eclared return type is an intersection';\n        }\n\n        throw new RuntimeException(\n            sprintf(\n                'Return value for %s::%s() cannot be generated%s, please configure a return"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Return value for %s::%s() cannot be generated: %s'",
                "line": 200,
                "context": "gnoreStart\n        } catch (Throwable $t) {\n            throw new RuntimeException(\n                sprintf(\n                    'Return value for %s::%s() cannot be generated: %s',\n                  "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Return value for %s::%s() cannot be generated: %s'",
                "line": 225,
                "context": "gnoreStart\n        } catch (Throwable $t) {\n            throw new RuntimeException(\n                sprintf(\n                    'Return value for %s::%s() cannot be generated: %s',\n                  "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Return value for %s::%s() cannot be generated: %s'",
                "line": 250,
                "context": "gnoreStart\n        } catch (Throwable $t) {\n            throw new RuntimeException(\n                sprintf(\n                    'Return value for %s::%s() cannot be generated: %s',\n                  "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Generator/TemplateLoader.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/templates/'",
                "line": 28,
                "context": "ates = [];\n\n    private function loadTemplate(string $template): Template\n    {\n        $filename = __DIR__ . '/templates/' . $template;\n\n        if (!isset(self::$templates[$filename])) {\n           "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Generator/Generator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Intersection_%s_%s'",
                "line": 179,
                "context": "($parts);\n        }\n\n        sort($unqualifiedNames);\n\n        do {\n            $intersectionName = sprintf(\n                'Intersection_%s_%s',\n                implode('_', $unqualifiedNames),\n    "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '    use %s;'",
                "line": 511,
                "context": "\n\n        $useStatements = '';\n\n        foreach ($traits as $trait) {\n            $useStatements .= sprintf(\n                '    use %s;' . PHP_EOL,\n                $trait,\n            );\n        }\n\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s implements %s'",
                "line": 603,
                "context": "erfaces = implode(', ', $additionalInterfaces);\n\n        if ($isInterface) {\n            $buffer .= sprintf(\n                '%s implements %s',\n                $mockClassName['className'],\n          "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s extends %s%s implements %s'",
                "line": 619,
                "context": "uffer .= $mockClassName['originalClassName'];\n            }\n        } else {\n            $buffer .= sprintf(\n                '%s extends %s%s implements %s',\n                $mockClassName['className'"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        '$%s::get'",
                "line": 794,
                "context": "erty->hasGetHook()) {\n                $configurable[] = new ConfigurableMethod(\n                    sprintf(\n                        '$%s::get',\n                        $property->name(),\n            "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        '$%s::set'",
                "line": 806,
                "context": "erty->hasSetHook()) {\n                $configurable[] = new ConfigurableMethod(\n                    sprintf(\n                        '$%s::set',\n                        $property->name(),\n            "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Exception/MatchBuilderNotFoundException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'No builder found for match builder identification <%s>'",
                "line": 24,
                "context": "eption\n{\n    public function __construct(string $id)\n    {\n        parent::__construct(\n            sprintf(\n                'No builder found for match builder identification <%s>',\n                $"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Exception/MatcherAlreadyRegisteredException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Matcher with id <%s> is already registered'",
                "line": 24,
                "context": "eption\n{\n    public function __construct(string $id)\n    {\n        parent::__construct(\n            sprintf(\n                'Matcher with id <%s> is already registered',\n                $id,\n        "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Exception/IncompatibleReturnValueException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s may not return value of type %s, its declared return type is \"",
                "line": 25,
                "context": "_construct(ConfigurableMethod $method, mixed $value)\n    {\n        parent::__construct(\n            sprintf(\n                'Method %s may not return value of type %s, its declared return type is \"%s"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Exception/NeverReturningMethodException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() is declared to never return'",
                "line": 27,
                "context": "n __construct(string $className, string $methodName)\n    {\n        parent::__construct(\n            sprintf(\n                'Method %s::%s() is declared to never return',\n                $className,\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Exception/ReturnValueNotConfiguredException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'No return value is configured for %s::%s() and return value generation is disabled'",
                "line": 24,
                "context": " public function __construct(Invocation $invocation)\n    {\n        parent::__construct(\n            sprintf(\n                'No return value is configured for %s::%s() and return value generation is "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Exception/NoMoreReturnValuesConfiguredException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Only %d return values have been configured for %s::%s()'",
                "line": 24,
                "context": "on $invocation, int $numberOfConfiguredReturnValues)\n    {\n        parent::__construct(\n            sprintf(\n                'Only %d return values have been configured for %s::%s()',\n                "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/TestCase.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s::%s'",
                "line": 298,
                "context": "tibility promise for PHPUnit\n     */\n    public function toString(): string\n    {\n        $buffer = sprintf(\n            '%s::%s',\n            (new ReflectionClass($this))->getName(),\n            $thi"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            ' (%s)'",
                "line": 853,
                "context": " ($this->data === []) {\n            return '';\n        }\n\n        return $this->dataSetAsString() . sprintf(\n            ' (%s)',\n            Exporter::shortenedRecursiveExport($this->data),\n        )"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotAcceptParameterTypeException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s is not an accepted argument type for comparison method %s::%s().'",
                "line": 24,
                "context": "string $className, string $methodName, string $type)\n    {\n        parent::__construct(\n            sprintf(\n                '%s is not an accepted argument type for comparison method %s::%s().',\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotDeclareBoolReturnTypeException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Comparison method %s::%s() does not declare bool return type.'",
                "line": 24,
                "context": "n __construct(string $className, string $methodName)\n    {\n        parent::__construct(\n            sprintf(\n                'Comparison method %s::%s() does not declare bool return type.',\n          "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotDeclareExactlyOneParameterException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Comparison method %s::%s() does not declare exactly one parameter.'",
                "line": 24,
                "context": "n __construct(string $className, string $methodName)\n    {\n        parent::__construct(\n            sprintf(\n                'Comparison method %s::%s() does not declare exactly one parameter.',\n     "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotDeclareParameterTypeException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Parameter of comparison method %s::%s() does not have a declared type.'",
                "line": 24,
                "context": "n __construct(string $className, string $methodName)\n    {\n        parent::__construct(\n            sprintf(\n                'Parameter of comparison method %s::%s() does not have a declared type.',\n "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Exception/ObjectEquals/ComparisonMethodDoesNotExistException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Comparison method %s::%s() does not exist.'",
                "line": 24,
                "context": "n __construct(string $className, string $methodName)\n    {\n        parent::__construct(\n            sprintf(\n                'Comparison method %s::%s() does not exist.',\n                $className,\n "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Exception/GeneratorNotSupportedException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Passing an argument of type Generator for the %s parameter is not supported'",
                "line": 24,
                "context": " function fromParameterName(string $parameterName): self\n    {\n        return new self(\n            sprintf(\n                'Passing an argument of type Generator for the %s parameter is not supporte"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Exception/Exception.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                ' (exception code: %s)'",
                "line": 56,
                "context": "stianbergmann/phpunit/issues/5965\n         */\n        if (!is_int($code)) {\n            $message .= sprintf(\n                ' (exception code: %s)',\n                $code,\n            );\n\n           "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Cardinality/IsEmpty.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s %s %s'",
                "line": 60,
                "context": "ion failureDescription(mixed $other): string\n    {\n        $type = gettype($other);\n\n        return sprintf(\n            '%s %s %s',\n            str_starts_with($type, 'a') || str_starts_with($type, '"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Traversable/TraversableContains.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s %s'",
                "line": 44,
                "context": "tence.\n     */\n    protected function failureDescription(mixed $other): string\n    {\n        return sprintf(\n            '%s %s',\n            is_array($other) ? 'an array' : 'a traversable',\n         "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqualIgnoringCase.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'is equal to %s'",
                "line": 99,
                "context": "         \"is equal to '%s'\",\n                $this->value,\n            );\n        }\n\n        return sprintf(\n            'is equal to %s',\n            Exporter::export($this->value),\n        );\n    }\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqualWithDelta.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'is equal to %s with delta <%F>'",
                "line": 86,
                "context": "presentation of the constraint.\n     */\n    public function toString(): string\n    {\n        return sprintf(\n            'is equal to %s with delta <%F>',\n            Exporter::export($this->value),\n "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqualCanonicalizing.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'is equal to %s'",
                "line": 98,
                "context": "         \"is equal to '%s'\",\n                $this->value,\n            );\n        }\n\n        return sprintf(\n            'is equal to %s',\n            Exporter::export($this->value),\n        );\n    }\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Equality/IsEqual.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'is equal to %s%s'",
                "line": 98,
                "context": "         \"is equal to '%s'\",\n                $this->value,\n            );\n        }\n\n        return sprintf(\n            'is equal to %s%s',\n            Exporter::export($this->value),\n            $de"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Type/IsInstanceOf.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'is an instance of %s %s'",
                "line": 53,
                "context": "presentation of the constraint.\n     */\n    public function toString(): string\n    {\n        return sprintf(\n            'is an instance of %s %s',\n            $this->type,\n            $this->name,\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Type/IsType.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'is of type %s'",
                "line": 43,
                "context": "presentation of the constraint.\n     */\n    public function toString(): string\n    {\n        return sprintf(\n            'is of type %s',\n            $this->type->value,\n        );\n    }\n\n    /**\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Constraint.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Failed asserting that %s.'",
                "line": 90,
                "context": "scription, ?ComparisonFailure $comparisonFailure = null): never\n    {\n        $failureDescription = sprintf(\n            'Failed asserting that %s.',\n            $this->failureDescription($other),\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/String/IsJson.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'a string is valid JSON (%s)'",
                "line": 71,
                "context": " if ($other === '') {\n            return 'an empty string is valid JSON';\n        }\n\n        return sprintf(\n            'a string is valid JSON (%s)',\n            $this->determineJsonError($other),\n "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/String/StringContains.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s [%s](length: %s) '",
                "line": 67,
                "context": "her);\n        $haystackLength      = $this->haystackLength($other);\n\n        $haystackInformation = sprintf(\n            '%s [%s](length: %s) ',\n            $stringifiedHaystack,\n            $haystack"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Exception/ExceptionMessageMatchesRegularExpression.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Invalid expected exception message regular expression given: %s'",
                "line": 49,
                "context": "        if ($match === false) {\n            throw new \\PHPUnit\\Framework\\Exception(\n                sprintf(\n                    'Invalid expected exception message regular expression given: %s',\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Exception/ExceptionCode.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s is equal to expected exception code %s'",
                "line": 51,
                "context": "tence.\n     */\n    protected function failureDescription(mixed $other): string\n    {\n        return sprintf(\n            '%s is equal to expected exception code %s',\n            Exporter::export($othe"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/CodeCoverage.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"\\nGenerating code coverage report in %s format ... \"",
                "line": 418,
                "context": "eGenerationStart(Printer $printer, string $format): void\n    {\n        $printer->print(\n            sprintf(\n                \"\\nGenerating code coverage report in %s format ... \",\n                $for"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"done [%s]\\n\"",
                "line": 433,
                "context": " codeCoverageGenerationSucceeded(Printer $printer): void\n    {\n        $printer->print(\n            sprintf(\n                \"done [%s]\\n\",\n                $this->timer()->stop()->asString(),\n        "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"failed [%s]\\n%s\\n\"",
                "line": 446,
                "context": "Failed(Printer $printer, CodeCoverageException $e): void\n    {\n        $printer->print(\n            sprintf(\n                \"failed [%s]\\n%s\\n\",\n                $this->timer()->stop()->asString(),\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Extension/ExtensionBootstrapper.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot bootstrap extension because class %s does not exist'",
                "line": 47,
                "context": "lassName)) {\n            EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                sprintf(\n                    'Cannot bootstrap extension because class %s does not exist',\n         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot bootstrap extension because class %s does not implement interface %s'",
                "line": 58,
                "context": "e), true)) {\n            EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                sprintf(\n                    'Cannot bootstrap extension because class %s does not implement interfa"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Bootstrapping of extension %s failed: %s%s%s'",
                "line": 80,
                "context": "owable $t) {\n            EventFacade::emitter()->testRunnerTriggeredPhpunitWarning(\n                sprintf(\n                    'Bootstrapping of extension %s failed: %s%s%s',\n                    $cl"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Extension/PharLoader.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Cannot load extension from %s because the PHAR extension is not available'",
                "line": 48,
                "context": ") {\n                Event\\Facade::emitter()->testRunnerTriggeredPhpunitWarning(\n                    sprintf(\n                        'Cannot load extension from %s because the PHAR extension is not av"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        '%s is not an extension for PHPUnit'",
                "line": 59,
                "context": ") {\n                Event\\Facade::emitter()->testRunnerTriggeredPhpunitWarning(\n                    sprintf(\n                        '%s is not an extension for PHPUnit',\n                        $file"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                            '%s is not an extension for PHPUnit'",
                "line": 75,
                "context": "                Event\\Facade::emitter()->testRunnerTriggeredPhpunitWarning(\n                        sprintf(\n                            '%s is not an extension for PHPUnit',\n                         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                            '%s is not compatible with PHPUnit %s'",
                "line": 86,
                "context": "                Event\\Facade::emitter()->testRunnerTriggeredPhpunitWarning(\n                        sprintf(\n                            '%s is not compatible with PHPUnit %s',\n                       "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Cannot load extension from %s: %s'",
                "line": 97,
                "context": ") {\n                Event\\Facade::emitter()->testRunnerTriggeredPhpunitWarning(\n                    sprintf(\n                        'Cannot load extension from %s: %s',\n                        $file,"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Cannot load extension from %s: %s'",
                "line": 111,
                "context": ") {\n                Event\\Facade::emitter()->testRunnerTriggeredPhpunitWarning(\n                    sprintf(\n                        'Cannot load extension from %s: %s',\n                        $file,"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/PHPT/PhptTestCase.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/templates/phpt.tpl'",
                "line": 724,
                "context": " void\n    {\n        $files = $this->coverageFiles();\n\n        $template = new Template(\n            __DIR__ . '/templates/phpt.tpl',\n        );\n\n        $composerAutoload = '\\'\\'';\n\n        if (define"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Baseline/Reader.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot read baseline %s, file does not exist'",
                "line": 41,
                "context": "  if (!is_file($baselineFile)) {\n            throw new CannotLoadBaselineException(\n                sprintf(\n                    'Cannot read baseline %s, file does not exist',\n                    $ba"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot read baseline %s: %s'",
                "line": 52,
                "context": "     } catch (XmlException $e) {\n            throw new CannotLoadBaselineException(\n                sprintf(\n                    'Cannot read baseline %s: %s',\n                    $baselineFile,\n     "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot read baseline %s, version %d is not supported'",
                "line": 64,
                "context": "version !== Baseline::VERSION) {\n            throw new CannotLoadBaselineException(\n                sprintf(\n                    'Cannot read baseline %s, version %d is not supported',\n               "
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/ErrorHandler.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"%s:%s\\n\"",
                "line": 416,
                "context": "List->isExcluded($frame['file'])) {\n                continue;\n            }\n\n            $buffer .= sprintf(\n                \"%s:%s\\n\",\n                $frame['file'],\n                $frame['line'] ?"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Filter/Factory.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $filter",
                "line": 93,
                "context": "$suite): FilterIterator\n    {\n        foreach ($this->filters as $filter) {\n            $iterator = new $filter['className'](\n                $iterator,\n                $filter['argument'],\n          "
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Filter/NameFilterIterator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        '%s.*with data set #(\\d+)$'",
                "line": 94,
                "context": "               if (isset($matches[3]) && $matches[2] < $matches[3]) {\n                    $filter = sprintf(\n                        '%s.*with data set #(\\d+)$',\n                        $matches[1],\n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        '%s.*with data set #%s$'",
                "line": 102,
                "context": "        $dataSetMaximum = (int) $matches[3];\n                } else {\n                    $filter = sprintf(\n                        '%s.*with data set #%s$',\n                        $matches[1],\n    "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s.*with data set \"",
                "line": 112,
                "context": ".*\n            elseif (preg_match('/^(.*?)@(.+)$/', $filter, $matches)) {\n                $filter = sprintf(\n                    '%s.*with data set \"%s\"$',\n                    $matches[1],\n           "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '/%s/i'",
                "line": 121,
                "context": "r expression. Do NOT use preg_quote,\n            // to keep magic characters.\n            $filter = sprintf(\n                '/%s/i',\n                str_replace(\n                    '/',\n            "
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Exception/UnsupportedPhptSectionException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'PHPUnit does not support PHPT %s sections'",
                "line": 25,
                "context": "n\n{\n    public function __construct(string $section)\n    {\n        parent::__construct(\n            sprintf(\n                'PHPUnit does not support PHPT %s sections',\n                $section,\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Exception/ClassDoesNotExtendTestCaseException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Class %s declared in %s does not extend PHPUnit\\Framework\\TestCase'",
                "line": 25,
                "context": "unction __construct(string $className, string $file)\n    {\n        parent::__construct(\n            sprintf(\n                'Class %s declared in %s does not extend PHPUnit\\Framework\\TestCase',\n     "
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Exception/ClassIsAbstractException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Class %s declared in %s is abstract'",
                "line": 25,
                "context": "unction __construct(string $className, string $file)\n    {\n        parent::__construct(\n            sprintf(\n                'Class %s declared in %s is abstract',\n                $className,\n        "
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Exception/PhptExternalFileCannotBeLoadedException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Could not load --%s-- %s for PHPT file'",
                "line": 25,
                "context": " function __construct(string $section, string $file)\n    {\n        parent::__construct(\n            sprintf(\n                'Could not load --%s-- %s for PHPT file',\n                $section . '_EXTE"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Exception/ClassCannotBeFoundException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Class %s cannot be found in %s'",
                "line": 25,
                "context": "unction __construct(string $className, string $file)\n    {\n        parent::__construct(\n            sprintf(\n                'Class %s cannot be found in %s',\n                $className,\n             "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Dispatcher/DirectDispatcher.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Exception in third-party event subscriber: %s%s%s'",
                "line": 120,
                "context": "Subscriber($t)) {\n            Facade::emitter()->testRunnerTriggeredPhpunitWarning(\n                sprintf(\n                    'Exception in third-party event subscriber: %s%s%s',\n                  "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Value/Runtime/Runtime.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'PHPUnit %s using PHP %s (%s) on %s'",
                "line": 36,
                "context": "t;\n    }\n\n    public function asString(): string\n    {\n        $php = $this->php();\n\n        return sprintf(\n            'PHPUnit %s using PHP %s (%s) on %s',\n            $this->phpunit()->versionId()"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Value/Telemetry/Info.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '[%s / %s] [%d bytes]'",
                "line": 78,
                "context": "rrent->garbageCollectorStatus();\n    }\n\n    public function asString(): string\n    {\n        return sprintf(\n            '[%s / %s] [%d bytes]',\n            $this->durationSinceStart()->asString(),\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Value/Telemetry/HRTime.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Value for %s must not be negative.'",
                "line": 87,
                "context": "oid\n    {\n        if ($value < 0) {\n            throw new InvalidArgumentException(\n                sprintf(\n                    'Value for %s must not be negative.',\n                    $type,\n      "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Value/Telemetry/Duration.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Value for %s must not be negative.'",
                "line": 129,
                "context": "oid\n    {\n        if ($value < 0) {\n            throw new InvalidArgumentException(\n                sprintf(\n                    'Value for %s must not be negative.',\n                    $type,\n      "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestRunner/ExtensionBootstrapped.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Extension Bootstrapped (%s)'",
                "line": 72,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Extension Bootstrapped (%s)',\n            $this->className,\n        );\n    }\n}"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestRunner/ExecutionStarted.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Runner Execution Started (%d test%s)'",
                "line": 48,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Runner Execution Started (%d test%s)',\n            $this->testSuite->coun"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestRunner/DeprecationTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Runner Triggered Deprecation (%s)'",
                "line": 57,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Runner Triggered Deprecation (%s)',\n            $this->message,\n        )"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestRunner/BootstrapFinished.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Bootstrap Finished (%s)'",
                "line": 57,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Bootstrap Finished (%s)',\n            $this->filename,\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestRunner/WarningTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Runner Triggered Warning (%s)'",
                "line": 57,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Runner Triggered Warning (%s)',\n            $this->message,\n        );\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestRunner/NoticeTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Runner Triggered Notice (%s)'",
                "line": 47,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Runner Triggered Notice (%s)',\n            $this->message,\n        );\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestRunner/ExtensionLoadedFromPhar.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Extension Loaded from PHAR (%s %s)'",
                "line": 87,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Extension Loaded from PHAR (%s %s)',\n            $this->name,\n            $thi"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodErrored.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Before Test Method Errored (%s::%s)%s'",
                "line": 80,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Before Test Method Errored (%s::%s)%s',\n            $this->calledMethod->class"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionCalled.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Pre Condition Method Called (%s::%s)'",
                "line": 65,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Pre Condition Method Called (%s::%s)',\n            $this->calledMethod->classN"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/PreConditionErrored.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Pre Condition Method Errored (%s::%s)%s'",
                "line": 80,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Pre Condition Method Errored (%s::%s)%s',\n            $this->calledMethod->cla"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionErrored.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Post Condition Method Errored (%s::%s)%s'",
                "line": 80,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Post Condition Method Errored (%s::%s)%s',\n            $this->calledMethod->cl"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeTestMethodCalled.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Before Test Method Called (%s::%s)'",
                "line": 65,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Before Test Method Called (%s::%s)',\n            $this->calledMethod->classNam"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodErrored.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'After Last Test Method Errored (%s::%s)%s'",
                "line": 80,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'After Last Test Method Errored (%s::%s)%s',\n            $this->calledMethod->c"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodErrored.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Before First Test Method Errored (%s::%s)%s'",
                "line": 80,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Before First Test Method Errored (%s::%s)%s',\n            $this->calledMethod-"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/PostConditionCalled.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Post Condition Method Called (%s::%s)'",
                "line": 65,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Post Condition Method Called (%s::%s)',\n            $this->calledMethod->class"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodErrored.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'After Test Method Errored (%s::%s)%s'",
                "line": 80,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'After Test Method Errored (%s::%s)%s',\n            $this->calledMethod->classN"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterTestMethodCalled.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'After Test Method Called (%s::%s)'",
                "line": 65,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'After Test Method Called (%s::%s)',\n            $this->calledMethod->className"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/BeforeFirstTestMethodCalled.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Before First Test Method Called (%s::%s)'",
                "line": 65,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Before First Test Method Called (%s::%s)',\n            $this->calledMethod->cl"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/HookMethod/AfterLastTestMethodCalled.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'After Last Test Method Called (%s::%s)'",
                "line": 65,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'After Last Test Method Called (%s::%s)',\n            $this->calledMethod->clas"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/PrintedUnexpectedOutput.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Printed Unexpected Output%s%s'",
                "line": 58,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Printed Unexpected Output%s%s',\n            PHP_EOL,\n            $this->o"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Lifecycle/PreparationStarted.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Preparation Started (%s)'",
                "line": 48,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Preparation Started (%s)',\n            $this->test->id(),\n        );\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Lifecycle/PreparationFailed.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Preparation Failed (%s)'",
                "line": 48,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Preparation Failed (%s)',\n            $this->test->id(),\n        );\n    }"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Lifecycle/DataProviderMethodFinished.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Data Provider Method Finished for %s::%s:'",
                "line": 63,
                "context": "  * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        $buffer = sprintf(\n            'Data Provider Method Finished for %s::%s:',\n            $this->testMethod->cla"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Lifecycle/DataProviderMethodCalled.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Data Provider Method Called (%s::%s for test method %s::%s)'",
                "line": 55,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Data Provider Method Called (%s::%s for test method %s::%s)',\n            $thi"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Lifecycle/Prepared.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Prepared (%s)'",
                "line": 48,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Prepared (%s)',\n            $this->test->id(),\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Lifecycle/Finished.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Finished (%s)'",
                "line": 65,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Finished (%s)',\n            $this->test->id(),\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Outcome/Skipped.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Skipped (%s)%s'",
                "line": 62,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Skipped (%s)%s',\n            $this->test->id(),\n            $message,\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Outcome/MarkedIncomplete.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Marked Incomplete (%s)%s'",
                "line": 64,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Marked Incomplete (%s)%s',\n            $this->test->id(),\n            $me"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Outcome/Failed.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Failed (%s)%s'",
                "line": 87,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Failed (%s)%s',\n            $this->test->id(),\n            $message,\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Outcome/Passed.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Passed (%s)'",
                "line": 48,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Passed (%s)',\n            $this->test->id(),\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Outcome/Errored.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Errored (%s)%s'",
                "line": 64,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Errored (%s)%s',\n            $this->test->id(),\n            $message,\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/ComparatorRegistered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Comparator Registered (%s)'",
                "line": 57,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Comparator Registered (%s)',\n            $this->className,\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitWarningTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered PHPUnit Warning (%s)%s'",
                "line": 72,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Triggered PHPUnit Warning (%s)%s',\n            $this->test->id(),\n       "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/PhpWarningTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered PHP Warning (%s) in %s:%d%s'",
                "line": 127,
                "context": "his->ignoredByBaseline) {\n            $details[] = 'ignored by baseline';\n        }\n\n        return sprintf(\n            'Test Triggered PHP Warning (%s) in %s:%d%s',\n            implode(', ', $detail"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/ErrorTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered Error (%s) in %s:%d%s'",
                "line": 116,
                "context": "this->suppressed) {\n            $details[] = 'suppressed using operator';\n        }\n\n        return sprintf(\n            'Test Triggered Error (%s) in %s:%d%s',\n            implode(', ', $details),\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/PhpNoticeTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered PHP Notice (%s) in %s:%d%s'",
                "line": 127,
                "context": "his->ignoredByBaseline) {\n            $details[] = 'ignored by baseline';\n        }\n\n        return sprintf(\n            'Test Triggered PHP Notice (%s) in %s:%d%s',\n            implode(', ', $details"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/PhpDeprecationTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered PHP Deprecation (%s) in %s:%d%s'",
                "line": 146,
                "context": "his->ignoredByBaseline) {\n            $details[] = 'ignored by baseline';\n        }\n\n        return sprintf(\n            'Test Triggered PHP Deprecation (%s) in %s:%d%s',\n            implode(', ', $de"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitDeprecationTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered PHPUnit Deprecation (%s)%s'",
                "line": 72,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Triggered PHPUnit Deprecation (%s)%s',\n            $this->test->id(),\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitNoticeTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered PHPUnit Notice (%s)%s'",
                "line": 73,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Triggered PHPUnit Notice (%s)%s',\n            $this->test->id(),\n        "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/DeprecationTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered Deprecation (%s) in %s:%d%s'",
                "line": 161,
                "context": "his->ignoredByBaseline) {\n            $details[] = 'ignored by baseline';\n        }\n\n        return sprintf(\n            'Test Triggered Deprecation (%s) in %s:%d%s',\n            implode(', ', $detail"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/WarningTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered Warning (%s) in %s:%d%s'",
                "line": 127,
                "context": "his->ignoredByBaseline) {\n            $details[] = 'ignored by baseline';\n        }\n\n        return sprintf(\n            'Test Triggered Warning (%s) in %s:%d%s',\n            implode(', ', $details),\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/PhpunitErrorTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered PHPUnit Error (%s)%s'",
                "line": 73,
                "context": "        if ($message !== '') {\n            $message = PHP_EOL . $message;\n        }\n\n        return sprintf(\n            'Test Triggered PHPUnit Error (%s)%s',\n            $this->test->id(),\n         "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/ConsideredRisky.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Considered Risky (%s)%s%s'",
                "line": 66,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Considered Risky (%s)%s%s',\n            $this->test->id(),\n            PH"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/Issue/NoticeTriggered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Triggered Notice (%s) in %s:%d%s'",
                "line": 127,
                "context": "his->ignoredByBaseline) {\n            $details[] = 'ignored by baseline';\n        }\n\n        return sprintf(\n            'Test Triggered Notice (%s) in %s:%d%s',\n            implode(', ', $details),\n "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/TestDouble/TestStubCreated.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Stub Created (%s)'",
                "line": 57,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Stub Created (%s)',\n            $this->className,\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/TestDouble/TestStubForIntersectionOfInterfacesCreated.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Stub Created (%s)'",
                "line": 58,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Stub Created (%s)',\n            implode('&', $this->interfaces),\n        "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/TestDouble/MockObjectForIntersectionOfInterfacesCreated.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Mock Object Created (%s)'",
                "line": 58,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Mock Object Created (%s)',\n            implode('&', $this->interfaces),\n      "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/TestDouble/MockObjectCreated.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Mock Object Created (%s)'",
                "line": 57,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Mock Object Created (%s)',\n            $this->className,\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Test/TestDouble/PartialMockObjectCreated.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Partial Mock Object Created (%s)'",
                "line": 71,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Partial Mock Object Created (%s)',\n            $this->className,\n        );\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestSuite/Started.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Suite Started (%s, %d test%s)'",
                "line": 47,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Suite Started (%s, %d test%s)',\n            $this->testSuite->name(),\n   "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestSuite/Loaded.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Suite Loaded (%d test%s)'",
                "line": 47,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Suite Loaded (%d test%s)',\n            $this->testSuite->count(),\n       "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestSuite/Skipped.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Suite Skipped (%s, %s)'",
                "line": 54,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Suite Skipped (%s, %s)',\n            $this->testSuite->name(),\n          "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestSuite/Filtered.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Suite Filtered (%d test%s)'",
                "line": 47,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Suite Filtered (%d test%s)',\n            $this->testSuite->count(),\n     "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/TestSuite/Finished.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Test Suite Finished (%s, %d test%s)'",
                "line": 47,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'Test Suite Finished (%s, %d test%s)',\n            $this->testSuite->name(),\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Events/Application/Started.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'PHPUnit Started (%s)'",
                "line": 48,
                "context": "     * @return non-empty-string\n     */\n    public function asString(): string\n    {\n        return sprintf(\n            'PHPUnit Started (%s)',\n            $this->runtime->asString(),\n        );\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Metadata/Api/DataProvider.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Data set %s is invalid, expected array but got %s'",
                "line": 67,
                "context": "f (!is_array($value)) {\n                throw new InvalidDataProviderException(\n                    sprintf(\n                        'Data set %s is invalid, expected array but got %s',\n              "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                            'Data Provider method %s::%s() is not public'",
                "line": 111,
                "context": "->isPublic()) {\n                    throw new InvalidDataProviderException(\n                        sprintf(\n                            'Data Provider method %s::%s() is not public',\n                "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                            'Data Provider method %s::%s() is not static'",
                "line": 121,
                "context": "->isStatic()) {\n                    throw new InvalidDataProviderException(\n                        sprintf(\n                            'Data Provider method %s::%s() is not static',\n                "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                            'Data Provider method %s::%s() expects an argument'",
                "line": 131,
                "context": "meters() > 0) {\n                    throw new InvalidDataProviderException(\n                        sprintf(\n                            'Data Provider method %s::%s() expects an argument',\n          "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                            'The key must be an integer or a string, %s given'",
                "line": 179,
                "context": "rageIgnoreStart\n                    throw new InvalidDataProviderException(\n                        sprintf(\n                            'The key must be an integer or a string, %s given',\n           "
            }
        ],
        "vendor/phpunit/phpunit/src/Metadata/Api/Requirements.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'PHP %s is required.'",
                "line": 63,
                "context": "metadata->versionRequirement()->isSatisfiedBy(PHP_VERSION)) {\n                    $notSatisfied[] = sprintf(\n                        'PHP %s is required.',\n                        $metadata->versionRe"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'PHP extension %s%s is required.'",
                "line": 82,
                "context": "a->versionRequirement()->isSatisfiedBy($extensionVersion))) {\n                    $notSatisfied[] = sprintf(\n                        'PHP extension %s%s is required.',\n                        $metadat"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'PHPUnit %s is required.'",
                "line": 94,
                "context": "tadata->versionRequirement()->isSatisfiedBy(Version::id())) {\n                    $notSatisfied[] = sprintf(\n                        'PHPUnit %s is required.',\n                        $metadata->versi"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Operating system %s is required.'",
                "line": 139,
                "context": "  if ($metadata->operatingSystemFamily() !== PHP_OS_FAMILY) {\n                    $notSatisfied[] = sprintf(\n                        'Operating system %s is required.',\n                        $metada"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '/%s/i'",
                "line": 149,
                "context": "{\n                assert($metadata instanceof RequiresOperatingSystem);\n\n                $pattern = sprintf(\n                    '/%s/i',\n                    addcslashes($metadata->operatingSystem(), "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Operating system %s is required.'",
                "line": 155,
                "context": "     );\n\n                if (!preg_match($pattern, PHP_OS)) {\n                    $notSatisfied[] = sprintf(\n                        'Operating system %s is required.',\n                        $metada"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Function %s() is required.'",
                "line": 166,
                "context": "           if (!function_exists($metadata->functionName())) {\n                    $notSatisfied[] = sprintf(\n                        'Function %s() is required.',\n                        $metadata->fu"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Method %s::%s() is required.'",
                "line": 177,
                "context": "od_exists($metadata->className(), $metadata->methodName())) {\n                    $notSatisfied[] = sprintf(\n                        'Method %s::%s() is required.',\n                        $metadata->"
            }
        ],
        "vendor/phpunit/phpunit/src/Metadata/Exception/InvalidAttributeException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Invalid attribute %s for %s in %s:%d%s%s'",
                "line": 34,
                "context": "g $target, string $file, int $line, string $message)\n    {\n        parent::__construct(\n            sprintf(\n                'Invalid attribute %s for %s in %s:%d%s%s',\n                $attributeName,"
            }
        ],
        "vendor/phpunit/phpunit/src/Logging/JUnit/JunitXmlLogger.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s::%s%s'",
                "line": 401,
                "context": "rn basename($test->file());\n        }\n\n        assert($test instanceof TestMethod);\n\n        return sprintf(\n            '%s::%s%s',\n            $test->className(),\n            $this->name($test),\n   "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s with data set #%d'",
                "line": 427,
                "context": "a()->dataFromDataProvider()->dataSetName();\n\n        if (is_int($dataSetName)) {\n            return sprintf(\n                '%s with data set #%d',\n                $test->methodName(),\n              "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s with data set \"",
                "line": 434,
                "context": "        $test->methodName(),\n                $dataSetName,\n            );\n        }\n\n        return sprintf(\n            '%s with data set \"%s\"',\n            $test->methodName(),\n            $dataSetN"
            }
        ],
        "vendor/phpunit/phpunit/src/Logging/TeamCity/TeamCityLogger.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'php_qn://%s::\\\\%s'",
                "line": 86,
                "context": "    assert($testSuite instanceof TestSuiteForTestClass);\n\n            $parameters['locationHint'] = sprintf(\n                'php_qn://%s::\\\\%s',\n                $testSuite->file(),\n                $t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'php_qn://%s::\\\\%s'",
                "line": 94,
                "context": "uite instanceof TestSuiteForTestMethodWithDataProvider);\n\n            $parameters['locationHint'] = sprintf(\n                'php_qn://%s::\\\\%s',\n                $testSuite->file(),\n                $t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'php_qn://%s::\\\\%s::%s'",
                "line": 132,
                "context": "od()) {\n            assert($test instanceof TestMethod);\n\n            $parameters['locationHint'] = sprintf(\n                'php_qn://%s::\\\\%s::%s',\n                $test->file(),\n                $te"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '##teamcity[%s'",
                "line": 351,
                "context": "e(string $eventName, array $parameters = []): void\n    {\n        $this->printer->print(\n            sprintf(\n                '##teamcity[%s',\n                $eventName,\n            ),\n        );\n\n   "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \" %s='",
                "line": 363,
                "context": "       foreach ($parameters as $key => $value) {\n            $this->printer->print(\n                sprintf(\n                    \" %s='%s'\",\n                    $key,\n                    $this->escape"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"\\nCaused by\\n%s\\n%s\"",
                "line": 419,
                "context": "hrowable->hasPrevious()) {\n            $throwable = $throwable->previous();\n\n            $buffer .= sprintf(\n                \"\\nCaused by\\n%s\\n%s\",\n                $throwable->description(),\n         "
            }
        ],
        "vendor/phpunit/phpunit/src/Logging/TestDox/PlainTextRenderer.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    ' [%s] %s'",
                "line": 32,
                "context": " foreach ($this->reduce($_tests) as $prettifiedMethodName => $outcome) {\n                $buffer .= sprintf(\n                    ' [%s] %s' . \"\\n\",\n                    $outcome,\n                    $p"
            }
        ],
        "vendor/phpunit/phpunit/src/Logging/TestDox/NamePrettifier.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        '/%s(?=\\b)/'",
                "line": 190,
                "context": "                $variables = array_map(\n                    static fn (string $variable): string => sprintf(\n                        '/%s(?=\\b)/',\n                        preg_quote($variable, '/'),\n "
            }
        ],
        "vendor/phpunit/php-text-template/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/phpunit/php-text-template/tests/TemplateTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/one.txt'",
                "line": 22,
                "context": "ic function testRendersFromGivenTemplateFileToString(): void\n    {\n        $template = new Template(__DIR__ . '/_fixture/one.txt');\n\n        $template->setVar(\n            [\n                'foo' => '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/two.txt'",
                "line": 36,
                "context": "function testRendersFromFallbackTemplateFileToString(): void\n    {\n        $template = new Template(__DIR__ . '/_fixture/two.txt');\n\n        $template->setVar(\n            [\n                'foo' => '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/one.txt'",
                "line": 50,
                "context": "\n    }\n\n    public function testVariablesCanBeMerged(): void\n    {\n        $template = new Template(__DIR__ . '/_fixture/one.txt');\n\n        $template->setVar(\n            [\n                'foo' => '"
            }
        ],
        "vendor/phpunit/php-text-template/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/phpunit/php-code-coverage/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/src')\n    ->in(__DIR__ . '/tests/tests')\n;\n\n$config = n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/src'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/src')\n    ->in(__DIR__ . '/tests/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$conf"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/tests'",
                "line": 15,
                "context": "Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/src')\n    ->in(__DIR__ . '/tests/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 361,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/composer/autoload_real.php'",
                "line": 23,
                "context": " $err;\n        }\n    }\n    trigger_error(\n        $err,\n        E_USER_ERROR\n    );\n}\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInitf9e7218f71d5874b5632927df4f72"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/autoload.php'",
                "line": 28,
                "context": "}\n\n\t\t\tif (self::$composerAutoloader === null) {\n\t\t\t\tself::$composerAutoloader = require 'phar://' . __DIR__ . '/phpstan.phar/vendor/autoload.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php'",
                "line": 29,
                "context": "r = require 'phar://' . __DIR__ . '/phpstan.phar/vendor/autoload.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php';\n\t\t\t\trequire_once 'ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php'",
                "line": 30,
                "context": " '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php';\n\t\t\t\trequire_once 'phar://' ."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/react/promise/src/functions_include.php'",
                "line": 31,
                "context": "_DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/react/promise/src/functions_include.php';\n\t\t\t}\n\t\t\tself::$composerAut"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php'",
                "line": 54,
                "context": "_composer_autoload_files']['a4a119a56e50fbb293281d9a48007e0e'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php';\n\t\t\t\trequire_once 'phar://' . __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/bootstrap.php'",
                "line": 55,
                "context": "' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tempty($GLOB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php'",
                "line": 63,
                "context": "_composer_autoload_files']['0e6d7bf4a5811bfa5cf40c5ccd6fae6a'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php';\n\t\t\t\trequire_once 'phar://' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/bootstrap.php'",
                "line": 64,
                "context": "DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tempty($G"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php'",
                "line": 72,
                "context": "_composer_autoload_files']['e69f7f6ee287b969198c3c9d6777bd38'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php';\n\t\t\t\trequire_once '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/bootstrap.php'",
                "line": 73,
                "context": "/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php'",
                "line": 82,
                "context": "_composer_autoload_files']['8825ede83f2f289127722d4e842cf7e8'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php';\n\t\t\t\trequire_once 'phar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/bootstrap.php'",
                "line": 83,
                "context": " . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tPHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php'",
                "line": 92,
                "context": "_composer_autoload_files']['23c18046f52bef3eea034657bafda50f'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php';\n\t\t\t\trequire_once 'phar://' . __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/bootstrap.php'",
                "line": 93,
                "context": "' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/bootstrap.php';\n\t\t\t}\n\t\t}\n\n\t\t$filename = str_r"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/'",
                "line": 100,
                "context": "\t\t\t$filename = substr($filename, strlen('PHPStan\\\\BetterReflection\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/' . $filename . '.php';\n\t\t} else "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/src/'",
                "line": 103,
                "context": ".php';\n\t\t} else {\n\t\t\t$filename = substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/src/' . $filename . '.php';\n\t\t}\n\n\t\tif (!file_exists($filepath)) {\n\t\t\treturn"
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$filename . '.php'",
                "line": 100,
                "context": ";\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/' . $filename . '.php';\n\t\t} else {\n\t\t\t$filename = substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath ="
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$filename . '.php'",
                "line": 103,
                "context": "substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/src/' . $filename . '.php';\n\t\t}\n\n\t\tif (!file_exists($filepath)) {\n\t\t\treturn;\n\t\t}\n\n\t\trequire $filepath;\n\t}\n}\n"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/extension-installer/src/Plugin.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/GeneratedConfig.php'",
                "line": 103,
                "context": "oser();\n\t\t$installationManager = $composer->getInstallationManager();\n\n\t\t$generatedConfigFilePath = __DIR__ . '/GeneratedConfig.php';\n\t\t$oldGeneratedConfigFileHash = null;\n\t\tif (is_file($generatedConf"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <info>%s:</info> installed'",
                "line": 205,
                "context": "ileContents)) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach (array_keys($installedPackages) as $name) {\n\t\t\t$io->write(sprintf('> <info>%s:</info> installed', $name));\n\t\t}\n\n\t\tforeach (array_keys($notInstalledPackages) a"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <comment>%s:</comment> not supported'",
                "line": 209,
                "context": "o> installed', $name));\n\t\t}\n\n\t\tforeach (array_keys($notInstalledPackages) as $name) {\n\t\t\t$io->write(sprintf('> <comment>%s:</comment> not supported', $name));\n\t\t}\n\n\t\tforeach ($ignoredPackages as $name"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <comment>%s:</comment> ignored'",
                "line": 213,
                "context": "t>%s:</comment> not supported', $name));\n\t\t}\n\n\t\tforeach ($ignoredPackages as $name) {\n\t\t\t$io->write(sprintf('> <comment>%s:</comment> ignored', $name));\n\t\t}\n\t}\n\n\tprivate function constraintIntoString("
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t'%s%s, %s%s'",
                "line": 219,
                "context": "\t\t}\n\t}\n\n\tprivate function constraintIntoString(ConstraintInterface $constraint): string\n\t{\n\t\treturn sprintf(\n\t\t\t'%s%s, %s%s',\n\t\t\t$constraint->getLowerBound()->isInclusive() ? '>=' : '>',\n\t\t\t$constrain"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/ForeachLoop/OverwriteVariablesWithForeachRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Foreach overwrites $%s with its key variable.'",
                "line": 34,
                "context": " $scope->hasVariableType($node->keyVar->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('Foreach overwrites $%s with its key variable.', $node->keyVar->name))\n\t\t\t\t->identifier('for"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Foreach overwrites $%s with its value variable.'",
                "line": 57,
                "context": "e)\n\t\t\t&& $scope->hasVariableType($expr->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('Foreach overwrites $%s with its value variable.', $expr->name))\n\t\t\t\t->identifier('foreach.v"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Methods/IllegalConstructorStaticCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s::%s'",
                "line": 89,
                "context": "ts($functionName, $traitAliases)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $traitAliases[$functionName] === sprintf('%s::%s', $scope->getTraitReflection()->getName(), '__construct');\n\t}\n\n}\n"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Methods/WrongCaseOfInheritedMethodRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t'Method %s::%s() does not match %s method name: %s::%s().'",
                "line": 76,
                "context": "$parentMethod->getName() === $methodName) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn RuleErrorBuilder::message(sprintf(\n\t\t\t'Method %s::%s() does not match %s method name: %s::%s().',\n\t\t\t$declaringClass->getDispl"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticModuloRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the left side.',\n\t\t\t\t$leftType->desc"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the right side.',\n\t\t\t\t$rightType->de"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticSubtractionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandInArithmeticIncrementOrDecrementRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %s, %s given.'",
                "line": 44,
                "context": "s->helper->isValidForDecrement($scope, $node->var)\n\t\t) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %s, %s given.',\n\t\t\t\t$this->describeOperation(),\n\t\t\t\t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.nonNumeric'",
                "line": 48,
                "context": "\t\t$this->describeOperation(),\n\t\t\t\t$varType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.nonNumeric', $this->getIdentifier()))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n\tabstract p"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticExponentiationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the left side.',\n\t\t\t\t$leftType->desc"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the right side.',\n\t\t\t\t$rightType->de"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticMultiplicationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticDivisionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticAdditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the left side.'",
                "line": 54,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the right side.'",
                "line": 60,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Classes/RequireParentConstructCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'%s::__construct() does not call parent constructor from %s.'",
                "line": 59,
                "context": "rClass($classReflection);\n\t\tif ($parentClass !== false) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'%s::__construct() does not call parent constructor from %s.',\n\t\t\t\t\t$classReflection->"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Cast/UselessCastRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Casting to %s something that\\'",
                "line": 70,
                "context": "rorBuilder->treatPhpDocTypesAsCertainTip();\n\t\t\t};\n\t\t\treturn [\n\t\t\t\t$addTip(RuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Casting to %s something that\\'s already %s.',\n\t\t\t\t\t$castType->describe(VerbosityLevel"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInElseIfConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in an elseif condition, %s given.'",
                "line": 40,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in an elseif condition, %s given.',\n\t\t\t\t$conditionExpression"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanAndRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.'",
                "line": 39,
                "context": ") {\n\t\t\t$leftType = $scope->getType($originalNode->left);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$left"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.leftNotBoolean'",
                "line": 43,
                "context": " left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$leftType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.leftNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\t$rightScope = $node->getRightScope()"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.'",
                "line": 49,
                "context": "$rightType = $rightScope->getType($originalNode->right);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rig"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.rightNotBoolean'",
                "line": 53,
                "context": "ight side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rightType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.rightNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n}\n"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanOrRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.'",
                "line": 39,
                "context": ") {\n\t\t\t$leftType = $scope->getType($originalNode->left);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$left"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.leftNotBoolean'",
                "line": 43,
                "context": " left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$leftType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.leftNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\t$rightScope = $node->getRightScope()"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.'",
                "line": 49,
                "context": "$rightType = $rightScope->getType($originalNode->right);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rig"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.rightNotBoolean'",
                "line": 53,
                "context": "ight side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rightType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.rightNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n}\n"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanNotRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a negated boolean, %s given.'",
                "line": 40,
                "context": "[];\n\t\t}\n\n\t\t$expressionType = $scope->getType($node->expr);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a negated boolean, %s given.',\n\t\t\t\t$expressionType->descr"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInTernaryOperatorRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a ternary operator condition, %s given.'",
                "line": 44,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a ternary operator condition, %s given.',\n\t\t\t\t$conditionE"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInIfConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in an if condition, %s given.'",
                "line": 40,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in an if condition, %s given.',\n\t\t\t\t$conditionExpressionType"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/DisallowedConstructs/DisallowedImplicitArrayCreationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Implicit array creation is not allowed - variable $%s does not exist.'",
                "line": 48,
                "context": "->hasVariableType($node->name);\n\t\tif ($certainty->no()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf('Implicit array creation is not allowed - variable $%s does not exist.', $node->name))\n\t\t\t\t\t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Implicit array creation is not allowed - variable $%s might not exist.'",
                "line": 56,
                "context": ")\n\t\t\t\t\t->build(),\n\t\t\t];\n\t\t}\n\n\t\tif ($certainty->maybe()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf('Implicit array creation is not allowed - variable $%s might not exist.', $node->name))\n\t\t\t\t"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/SwitchConditions/MatchingTypeInSwitchCaseConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Switch condition type (%s) does not match case condition %s (%s).'",
                "line": 46,
                "context": "e->isSuperTypeOf($caseType)->no()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Switch condition type (%s) does not match case condition %s (%s).',\n\t\t\t\t$conditionType"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/DynamicCallOnStaticMethodsRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().'",
                "line": 65,
                "context": "PStanTestCase::class,\n\t\t\t], true)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().',\n\t\t\t\t\t$methodReflection->getDeclaringClass()"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/DynamicCallOnStaticMethodsCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().'",
                "line": 54,
                "context": "od($name, $scope);\n\t\tif ($methodReflection->isStatic()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().',\n\t\t\t\t\t$methodReflection->getDeclaringClass()"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/StrictFunctionCallsRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be set.'",
                "line": 73,
                "context": "!array_key_exists($argumentPosition, $node->getArgs())) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be set.',\n\t\t\t\t\t$functionName,\n\t\t\t\t\t$a"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be true.'",
                "line": 85,
                "context": "\n\t\tif (!$trueType->isSuperTypeOf($argumentType)->yes()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be true.',\n\t\t\t\t\t$functionName,\n\t\t\t\t\t$"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/ForLoop/OverwriteVariablesWithForLoopInitRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('For loop initial assignment overwrites variable $%s.'",
                "line": 54,
                "context": "e)\n\t\t\t&& $scope->hasVariableType($expr->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('For loop initial assignment overwrites variable $%s.', $expr->name))\n\t\t\t\t->identifier('for."
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Functions/ClosureUsesThisRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Anonymous function uses $this assigned to variable $%s. Use $this directly in the function body.'",
                "line": 44,
                "context": "if (!$varType instanceof ThisType) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf('Anonymous function uses $this assigned to variable $%s. Use $this directly in the function "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticMethodCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static method call on %s.'",
                "line": 37,
                "context": "de->getClass())->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static method call on %s.',\n\t\t\t\t$methodCalledOn,\n\t\t\t))->identifier('staticMet"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableMethodCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable method call on %s.'",
                "line": 31,
                "context": ">getName() instanceof Node\\Identifier) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable method call on %s.',\n\t\t\t\t$scope->getType($node->getVar())->describe(Verbosity"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariablePropertyFetchRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable property access on %s.'",
                "line": 63,
                "context": "MLElement($classReflection)\n\t\t\t) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable property access on %s.',\n\t\t\t\t$fetchedOnType->describe(VerbosityLevel::typeOnl"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableMethodCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable method call on %s.'",
                "line": 31,
                "context": "node->name instanceof Node\\Identifier) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable method call on %s.',\n\t\t\t\t$scope->getType($node->var)->describe(VerbosityLevel"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticMethodCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static method call on %s.'",
                "line": 37,
                "context": "e($node->class)->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static method call on %s.',\n\t\t\t\t$methodCalledOn,\n\t\t\t))->identifier('staticMet"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticPropertyFetchRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static property access on %s.'",
                "line": 37,
                "context": "e($node->class)->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static property access on %s.',\n\t\t\t\t$propertyAccessedOn,\n\t\t\t))->identifier('s"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/composer/ClassLoader.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/component'",
                "line": 21,
                "context": "assLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/framework'",
                "line": 22,
                "context": "  $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     //"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 118,
                "context": "  public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return ar"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/composer/autoload_static.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 10,
                "context": "5632927df4f72bd7\n{\n    public static $files = array (\n        '9b38cf48e83f5d8f60375221cd213eee' => __DIR__ . '/..' . '/phpstan/phpstan/bootstrap.php',\n    );\n\n    public static $prefixLengthsPsr4 = a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 32,
                "context": "refixDirsPsr4 = array (\n        'TomasVotruba\\\\TypeCoverage\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/tomasvotruba/type-coverage/src',\n        ),\n        'PHPStan\\\\ExtensionInstaller"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 36,
                "context": "erage/src',\n        ),\n        'PHPStan\\\\ExtensionInstaller\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/phpstan/extension-installer/src',\n        ),\n        'PHPStan\\\\' => \n        arr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 40,
                "context": "pstan/extension-installer/src',\n        ),\n        'PHPStan\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/phpstan/phpstan-strict-rules/src',\n        ),\n        'Ergebnis\\\\PHPStan\\\\Rules\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 44,
                "context": "ct-rules/src',\n        ),\n        'Ergebnis\\\\PHPStan\\\\Rules\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/ergebnis/phpstan-rules/src',\n        ),\n    );\n\n    public static $classMap = ar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 49,
                "context": ",\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Nette\\\\ArgumentOutOfRangeException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 50,
                "context": "_DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Nette\\\\ArgumentOutOfRangeException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DeprecatedException' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 51,
                "context": "on' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DeprecatedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DirectoryNotFoundException' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 52,
                "context": "__DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DirectoryNotFoundException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\FileNotFoundException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 53,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\FileNotFoundException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\HtmlStringable' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 54,
                "context": "ception' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\HtmlStringable' => __DIR__ . '/..' . '/nette/utils/src/HtmlStringable.php',\n        'Nette\\\\IOException' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 55,
                "context": "ngable' => __DIR__ . '/..' . '/nette/utils/src/HtmlStringable.php',\n        'Nette\\\\IOException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidArgumentException' => __"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 56,
                "context": "> __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidArgumentException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidStateException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 57,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidStateException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Iterators\\\\CachingIterator' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 58,
                "context": "__DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Iterators\\\\CachingIterator' => __DIR__ . '/..' . '/nette/utils/src/Iterators/CachingIterator.php',\n        'Nette\\\\Iterators\\\\Mappe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 59,
                "context": "_ . '/..' . '/nette/utils/src/Iterators/CachingIterator.php',\n        'Nette\\\\Iterators\\\\Mapper' => __DIR__ . '/..' . '/nette/utils/src/Iterators/Mapper.php',\n        'Nette\\\\Localization\\\\ITranslator"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 60,
                "context": "__ . '/..' . '/nette/utils/src/Iterators/Mapper.php',\n        'Nette\\\\Localization\\\\ITranslator' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Localization\\\\Translator' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 61,
                "context": "_DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Localization\\\\Translator' => __DIR__ . '/..' . '/nette/utils/src/Translator.php',\n        'Nette\\\\MemberAccessException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 62,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Translator.php',\n        'Nette\\\\MemberAccessException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotImplementedException' => __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 63,
                "context": "=> __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotImplementedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotSupportedException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 64,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotSupportedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\OutOfRangeException' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 65,
                "context": "on' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\OutOfRangeException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\SmartObject' => __DIR__ . '/..'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 66,
                "context": "eException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\SmartObject' => __DIR__ . '/..' . '/nette/utils/src/SmartObject.php',\n        'Nette\\\\StaticClass' => __DIR__ . '/.."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 67,
                "context": "artObject' => __DIR__ . '/..' . '/nette/utils/src/SmartObject.php',\n        'Nette\\\\StaticClass' => __DIR__ . '/..' . '/nette/utils/src/StaticClass.php',\n        'Nette\\\\UnexpectedValueException' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 68,
                "context": " __DIR__ . '/..' . '/nette/utils/src/StaticClass.php',\n        'Nette\\\\UnexpectedValueException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Utils\\\\ArrayHash' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 69,
                "context": "ption' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Utils\\\\ArrayHash' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayHash.php',\n        'Nette\\\\Utils\\\\ArrayList' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 70,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayHash.php',\n        'Nette\\\\Utils\\\\ArrayList' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayList.php',\n        'Nette\\\\Utils\\\\Arrays' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 71,
                "context": "ist' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayList.php',\n        'Nette\\\\Utils\\\\Arrays' => __DIR__ . '/..' . '/nette/utils/src/Utils/Arrays.php',\n        'Nette\\\\Utils\\\\AssertionException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 72,
                "context": "_DIR__ . '/..' . '/nette/utils/src/Utils/Arrays.php',\n        'Nette\\\\Utils\\\\AssertionException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Callback' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 73,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Callback' => __DIR__ . '/..' . '/nette/utils/src/Utils/Callback.php',\n        'Nette\\\\Utils\\\\DateTime' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 74,
                "context": "ck' => __DIR__ . '/..' . '/nette/utils/src/Utils/Callback.php',\n        'Nette\\\\Utils\\\\DateTime' => __DIR__ . '/..' . '/nette/utils/src/Utils/DateTime.php',\n        'Nette\\\\Utils\\\\FileInfo' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 75,
                "context": "me' => __DIR__ . '/..' . '/nette/utils/src/Utils/DateTime.php',\n        'Nette\\\\Utils\\\\FileInfo' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileInfo.php',\n        'Nette\\\\Utils\\\\FileSystem' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 76,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileInfo.php',\n        'Nette\\\\Utils\\\\FileSystem' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileSystem.php',\n        'Nette\\\\Utils\\\\Finder' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 77,
                "context": "em' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileSystem.php',\n        'Nette\\\\Utils\\\\Finder' => __DIR__ . '/..' . '/nette/utils/src/Utils/Finder.php',\n        'Nette\\\\Utils\\\\Floats' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 78,
                "context": "Finder' => __DIR__ . '/..' . '/nette/utils/src/Utils/Finder.php',\n        'Nette\\\\Utils\\\\Floats' => __DIR__ . '/..' . '/nette/utils/src/Utils/Floats.php',\n        'Nette\\\\Utils\\\\Helpers' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 79,
                "context": "loats' => __DIR__ . '/..' . '/nette/utils/src/Utils/Floats.php',\n        'Nette\\\\Utils\\\\Helpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/Helpers.php',\n        'Nette\\\\Utils\\\\Html' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 80,
                "context": "Helpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/Helpers.php',\n        'Nette\\\\Utils\\\\Html' => __DIR__ . '/..' . '/nette/utils/src/Utils/Html.php',\n        'Nette\\\\Utils\\\\IHtmlString' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 81,
                "context": "tml' => __DIR__ . '/..' . '/nette/utils/src/Utils/Html.php',\n        'Nette\\\\Utils\\\\IHtmlString' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Utils\\\\Image' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 82,
                "context": "String' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Utils\\\\Image' => __DIR__ . '/..' . '/nette/utils/src/Utils/Image.php',\n        'Nette\\\\Utils\\\\ImageColor' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 83,
                "context": "age' => __DIR__ . '/..' . '/nette/utils/src/Utils/Image.php',\n        'Nette\\\\Utils\\\\ImageColor' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageColor.php',\n        'Nette\\\\Utils\\\\ImageException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 84,
                "context": "_DIR__ . '/..' . '/nette/utils/src/Utils/ImageColor.php',\n        'Nette\\\\Utils\\\\ImageException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ImageType' => __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 85,
                "context": " => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ImageType' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageType.php',\n        'Nette\\\\Utils\\\\Iterables' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 86,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageType.php',\n        'Nette\\\\Utils\\\\Iterables' => __DIR__ . '/..' . '/nette/utils/src/Utils/Iterables.php',\n        'Nette\\\\Utils\\\\Json' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 87,
                "context": "ables' => __DIR__ . '/..' . '/nette/utils/src/Utils/Iterables.php',\n        'Nette\\\\Utils\\\\Json' => __DIR__ . '/..' . '/nette/utils/src/Utils/Json.php',\n        'Nette\\\\Utils\\\\JsonException' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 88,
                "context": "n' => __DIR__ . '/..' . '/nette/utils/src/Utils/Json.php',\n        'Nette\\\\Utils\\\\JsonException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ObjectHelpers' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 89,
                "context": "__DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ObjectHelpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/ObjectHelpers.php',\n        'Nette\\\\Utils\\\\Paginator' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 90,
                "context": " __DIR__ . '/..' . '/nette/utils/src/Utils/ObjectHelpers.php',\n        'Nette\\\\Utils\\\\Paginator' => __DIR__ . '/..' . '/nette/utils/src/Utils/Paginator.php',\n        'Nette\\\\Utils\\\\Random' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 91,
                "context": "tor' => __DIR__ . '/..' . '/nette/utils/src/Utils/Paginator.php',\n        'Nette\\\\Utils\\\\Random' => __DIR__ . '/..' . '/nette/utils/src/Utils/Random.php',\n        'Nette\\\\Utils\\\\Reflection' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 92,
                "context": "om' => __DIR__ . '/..' . '/nette/utils/src/Utils/Random.php',\n        'Nette\\\\Utils\\\\Reflection' => __DIR__ . '/..' . '/nette/utils/src/Utils/Reflection.php',\n        'Nette\\\\Utils\\\\ReflectionMethod' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 93,
                "context": "IR__ . '/..' . '/nette/utils/src/Utils/Reflection.php',\n        'Nette\\\\Utils\\\\ReflectionMethod' => __DIR__ . '/..' . '/nette/utils/src/Utils/ReflectionMethod.php',\n        'Nette\\\\Utils\\\\RegexpExcept"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 94,
                "context": ". '/..' . '/nette/utils/src/Utils/ReflectionMethod.php',\n        'Nette\\\\Utils\\\\RegexpException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Strings' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 95,
                "context": "n' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Strings' => __DIR__ . '/..' . '/nette/utils/src/Utils/Strings.php',\n        'Nette\\\\Utils\\\\Type' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 96,
                "context": "Strings' => __DIR__ . '/..' . '/nette/utils/src/Utils/Strings.php',\n        'Nette\\\\Utils\\\\Type' => __DIR__ . '/..' . '/nette/utils/src/Utils/Type.php',\n        'Nette\\\\Utils\\\\UnknownImageFileExceptio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 97,
                "context": "_ . '/..' . '/nette/utils/src/Utils/Type.php',\n        'Nette\\\\Utils\\\\UnknownImageFileException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Validators' => __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 98,
                "context": "=> __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Validators' => __DIR__ . '/..' . '/nette/utils/src/Utils/Validators.php',\n    );\n\n    public static function getIni"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/composer/autoload_real.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ClassLoader.php'",
                "line": 12,
                "context": "sLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/autoload_static.php'",
                "line": 29,
                "context": "ray('ComposerAutoloaderInitf9e7218f71d5874b5632927df4f72bd7', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9e721"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 30,
                "context": "b5632927df4f72bd7', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9e7218f71d5874b5632927df4f72bd7::getInitializer"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/composer/InstalledVersions.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 275,
                "context": "s/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '/installed.php';\n            } else {\n                self::$installed = array();\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 365,
                "context": " bool, replaced?: string[], provided?: string[]}>} $required */\n                $required = require __DIR__ . '/installed.php';\n                self::$installed = $required;\n            } else {\n     "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 68,
                "context": "unt($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    /**\n     * Returns a list of all packag"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/composer/installed.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 8,
                "context": " 'd331a5ced3d9a2b917baa9841b2211e72f9e780d',\n        'type' => 'library',\n        'install_path' => __DIR__ . '/../../',\n        'aliases' => array(),\n        'dev' => true,\n    ),\n    'versions' => a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 18,
                "context": "ced3d9a2b917baa9841b2211e72f9e780d',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../../',\n            'aliases' => array(),\n            'dev_requirement' => false,\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../ergebnis/phpstan-rules'",
                "line": 27,
                "context": "73ef9cd355279fff5122e080',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../ergebnis/phpstan-rules',\n            'aliases' => array(),\n            'dev_requireme"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../nette/utils'",
                "line": 36,
                "context": "7e257dbe0fcf6ce81b4d6dbe05c6899f96',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../nette/utils',\n            'aliases' => array(),\n            'dev_requirement' => true"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/extension-installer'",
                "line": 45,
                "context": "2326fba0403ec24fe912372936',\n            'type' => 'composer-plugin',\n            'install_path' => __DIR__ . '/../phpstan/extension-installer',\n            'aliases' => array(),\n            'dev_requ"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/phpstan'",
                "line": 54,
                "context": "3b87c03b12cc7e46a30a524648e497758f',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpstan/phpstan',\n            'aliases' => array(),\n            'dev_requirement' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/phpstan-strict-rules'",
                "line": 63,
                "context": "e0c99154ab622dace071c3ba',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../phpstan/phpstan-strict-rules',\n            'aliases' => array(),\n            'dev_req"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../tomasvotruba/type-coverage'",
                "line": 72,
                "context": "da538fa44f2939236a990e0c',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../tomasvotruba/type-coverage',\n            'aliases' => array(),\n            'dev_requi"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/nette/utils/src/Utils/ArrayHash.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Key must be either a string or an integer, %s given.'",
                "line": 69,
                "context": "ue): void\n\t{\n\t\tif (!is_scalar($key)) { // prevents null\n\t\t\tthrow new Nette\\InvalidArgumentException(sprintf('Key must be either a string or an integer, %s given.', get_debug_type($key)));\n\t\t}\n\n\t\t$this"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/nette/utils/src/Utils/Strings.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Normalizer'",
                "line": 137,
                "context": " static function normalize(string $s): string\n\t{\n\t\t// convert to compressed normal form (NFC)\n\t\tif (class_exists('Normalizer', false) && ($n = \\Normalizer::normalize($s, \\Normalizer::FORM_C)) !== fals"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Transliterator'",
                "line": 191,
                "context": "CONV_IMPL, '\"\\'') : null;\n\t\tstatic $transliterator = null;\n\t\tif ($transliterator === null) {\n\t\t\tif (class_exists('Transliterator', false)) {\n\t\t\t\t$transliterator = \\Transliterator::create('Any-Latin; L"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Normalizer'",
                "line": 354,
                "context": "*/\n\tpublic static function compare(string $left, string $right, ?int $length = null): bool\n\t{\n\t\tif (class_exists('Normalizer', false)) {\n\t\t\t$left = \\Normalizer::normalize($left, \\Normalizer::FORM_D); "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/tomasvotruba/type-coverage/rector.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 9,
                "context": "es=1);\n\nuse Rector\\Config\\RectorConfig;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->withPhpSets()\n    ->withPreparedSets(dead"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 10,
                "context": "RectorConfig;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->withPhpSets()\n    ->withPreparedSets(deadCode: true, codeQuality: t"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoNullableReturnTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class has a nullable return type declaration.'",
                "line": 52,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class has a nullable return type declaration.',\n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() has a nullable return type declaration.'",
                "line": 64,
                "context": "aration()->toString())\n                    ->build(),\n            ];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() has a nullable return type declaration.',\n            $classRe"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithContainerTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class has a parameter $%s with a type declaration of %s, but containers should not be injected.'",
                "line": 155,
                "context": "ion\n    ): Rules\\RuleError {\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class has a parameter $%s with a type declaration"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() has a parameter $%s with a type declaration of %s, but containers should not be injected.'",
                "line": 167,
                "context": "thContainerTypeDeclaration()->toString())\n                ->build();\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() has a parameter $%s with a type declaration of %s, but contain"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/FinalInAbstractClassRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() is not final, but since the containing class is abstract, it should be.'",
                "line": 82,
                "context": "   if ('__construct' === $node->name->name) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() is not final, but since the containing class is abstract, it s"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoConstructorParameterWithDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Constructor in anonymous class has parameter $%s with default value.'",
                "line": 63,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Constructor in anonymous class has parameter $%s with default value.',"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Constructor in %s has parameter $%s with default value.'",
                "line": 83,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Constructor in %s has parameter $%s with default value.',\n                "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/PrivateInFinalClassRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class is protected, but since the containing class is final, it can be private.'",
                "line": 102,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class is protected, but since the containing clas"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() is protected, but since the containing class is final, it can be private.'",
                "line": 114,
                "context": "alClass()->toString())\n                    ->build(),\n            ];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() is protected, but since the containing class is final, it can "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s with a nullable type declaration.'",
                "line": 69,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s with a nullable type "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s with a nullable type declaration.'",
                "line": 90,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s with a nullable type declaration.',\n    "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s that is passed by reference.'",
                "line": 61,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s that is passed by ref"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s that is passed by reference.'",
                "line": 82,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s that is passed by reference.',\n         "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s with null as default value.'",
                "line": 69,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s with null as default "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s with null as default value.'",
                "line": 90,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s with null as default value.',\n          "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoReturnByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class returns by reference.'",
                "line": 46,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class returns by reference.',\n                $me"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() returns by reference.'",
                "line": 60,
                "context": "),\n            ];\n        }\n\n        $className = $classReflection->getName();\n\n        $message = \\sprintf(\n            'Method %s::%s() returns by reference.',\n            $className,\n            $m"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/ErrorIdentifier.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'ergebnis.%s'",
                "line": 125,
                "context": "new self('testCaseWithSuffix');\n    }\n\n    public function toString(): string\n    {\n        return \\sprintf(\n            'ergebnis.%s',\n            $this->value,\n        );\n    }\n}\n"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Classes/PHPUnit/Framework/TestCaseWithSuffixRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Class %s extends %s, is concrete, but does not have a Test suffix.'",
                "line": 83,
                "context": "match('/Test$/', $fullyQualifiedClassName)) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Class %s extends %s, is concrete, but does not have a Test suffix.',\n         "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoNullableReturnTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Function %s() has a nullable return type declaration.'",
                "line": 51,
                "context": "bleTypeDeclaration($node->getReturnType())) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Function %s() has a nullable return type declaration.',\n            $node->nam"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s with a nullable type declaration.'",
                "line": 64,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s with a nullable type declaration.',\n      "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s that is passed by reference.'",
                "line": 56,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s that is passed by reference.',\n           "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s with null as default value.'",
                "line": 64,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s with null as default value.',\n            "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoReturnByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Function %s() returns by reference.'",
                "line": 39,
                "context": "array {\n        if (false === $node->byRef) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Function %s() returns by reference.',\n            $node->namespacedName,\n     "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s with a nullable type declaration.'",
                "line": 62,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s with a nullable type declaration.',\n            "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s that is passed by reference.'",
                "line": 54,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s that is passed by reference.',\n                $"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s with null as default value.'",
                "line": 62,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s with null as default value.',\n                $p"
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/tests/FilterTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/a.php'",
                "line": 33,
                "context": "tion testSingleFileCanBeAdded(): void\n    {\n        $filter = new Filter;\n\n        $file = realpath(__DIR__ . '/../_files/filter/a.php');\n\n        $filter->includeFile($file);\n\n        $this->assertFa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/a.php'",
                "line": 52,
                "context": "ilesCanBeAdded(): void\n    {\n        $filter = new Filter;\n\n        $files = [\n            realpath(__DIR__ . '/../_files/filter/a.php'),\n            realpath(__DIR__ . '/../_files/filter/b.php'),\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/b.php'",
                "line": 53,
                "context": "\n        $files = [\n            realpath(__DIR__ . '/../_files/filter/a.php'),\n            realpath(__DIR__ . '/../_files/filter/b.php'),\n        ];\n\n        $filter->includeFiles($files);\n\n        $t"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/a.php'",
                "line": 71,
                "context": "      $this->assertFalse($filter->isFile('regexp code'));\n        $this->assertTrue($filter->isFile(__DIR__ . '/../_files/filter/a.php'));\n    }\n\n    public function testIncludedFileIsNotFiltered(): v"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/a.php'",
                "line": 78,
                "context": "ileIsNotFiltered(): void\n    {\n        $filter = new Filter;\n\n        $filter->includeFile(realpath(__DIR__ . '/../_files/filter/a.php'));\n\n        $this->assertFalse($filter->isExcluded(realpath(__DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/a.php'",
                "line": 80,
                "context": "ath(__DIR__ . '/../_files/filter/a.php'));\n\n        $this->assertFalse($filter->isExcluded(realpath(__DIR__ . '/../_files/filter/a.php')));\n    }\n\n    public function testNotIncludedFileIsFiltered(): "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/a.php'",
                "line": 87,
                "context": "edFileIsFiltered(): void\n    {\n        $filter = new Filter;\n\n        $filter->includeFile(realpath(__DIR__ . '/../_files/filter/a.php'));\n\n        $this->assertTrue($filter->isExcluded(realpath(__DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/filter/b.php'",
                "line": 89,
                "context": "path(__DIR__ . '/../_files/filter/a.php'));\n\n        $this->assertTrue($filter->isExcluded(realpath(__DIR__ . '/../_files/filter/b.php')));\n    }\n\n    public function testNonFilesAreFiltered(): void\n "
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/tests/Target/MapperTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/source_with_interfaces_classes_traits_functions.php'",
                "line": 43,
                "context": "getCollection}>\n     */\n    public static function provider(): array\n    {\n        $file = realpath(__DIR__ . '/../../_files/source_with_interfaces_classes_traits_functions.php');\n\n        return [\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/ClassUsingTraitUsingTrait.php'",
                "line": 63,
                "context": "    ],\n\n            'class (which uses traits)' => [\n                [\n                    realpath(__DIR__ . '/../../_files/Target/ClassUsingTraitUsingTrait.php') => range(4, 11),\n                   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TraitTwo.php'",
                "line": 64,
                "context": "'/../../_files/Target/ClassUsingTraitUsingTrait.php') => range(4, 11),\n                    realpath(__DIR__ . '/../../_files/Target/TraitTwo.php')                  => range(4, 11),\n                   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TraitOne.php'",
                "line": 65,
                "context": "'/../../_files/Target/TraitTwo.php')                  => range(4, 11),\n                    realpath(__DIR__ . '/../../_files/Target/TraitOne.php')                  => range(4, 9),\n                ],\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/GrandParentClass.php'",
                "line": 87,
                "context": "extend class (grand parent, parent, and child)' => [\n                [\n                    realpath(__DIR__ . '/../../_files/Target/GrandParentClass.php') => range(4, 9),\n                    realpath("
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/ParentClass.php'",
                "line": 88,
                "context": "__DIR__ . '/../../_files/Target/GrandParentClass.php') => range(4, 9),\n                    realpath(__DIR__ . '/../../_files/Target/ParentClass.php')      => range(4, 9),\n                    realpath("
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/ChildClass.php'",
                "line": 89,
                "context": "__DIR__ . '/../../_files/Target/ParentClass.php')      => range(4, 9),\n                    realpath(__DIR__ . '/../../_files/Target/ChildClass.php')       => range(4, 9),\n                ],\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TraitOne.php'",
                "line": 112,
                "context": "         ),\n            ],\n\n            'trait' => [\n                [\n                    realpath(__DIR__ . '/../../_files/Target/TraitOne.php') => range(4, 9),\n                ],\n                Ta"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TargetEnumeration.php'",
                "line": 184,
                "context": "   ),\n            ],\n\n            'enumeration' => [\n                [\n                    realpath(__DIR__ . '/../../_files/Target/TargetEnumeration.php') => range(4, 8),\n                ],\n         "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TargetClass.php'",
                "line": 282,
                "context": "    public function testCodeUnitTargetingIsCaseInsensitive(): void\n    {\n        $path   = realpath(__DIR__ . '/../../_files/Target/TargetClass.php');\n        $mapper = $this->mapper([$path]);\n\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/BaseDummy.php'",
                "line": 298,
                "context": "e/issues/1066')]\n    public function testIssue1066(): void\n    {\n        $baseDummy      = realpath(__DIR__ . '/../../_files/Target/regression/1066/BaseDummy.php');\n        $dummy          = realpath("
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/Dummy.php'",
                "line": 299,
                "context": "__DIR__ . '/../../_files/Target/regression/1066/BaseDummy.php');\n        $dummy          = realpath(__DIR__ . '/../../_files/Target/regression/1066/Dummy.php');\n        $dummy2         = realpath(__DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/Dummy2.php'",
                "line": 300,
                "context": "ath(__DIR__ . '/../../_files/Target/regression/1066/Dummy.php');\n        $dummy2         = realpath(__DIR__ . '/../../_files/Target/regression/1066/Dummy2.php');\n        $dummyWithTrait = realpath(__D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/DummyWithTrait.php'",
                "line": 301,
                "context": "th(__DIR__ . '/../../_files/Target/regression/1066/Dummy2.php');\n        $dummyWithTrait = realpath(__DIR__ . '/../../_files/Target/regression/1066/DummyWithTrait.php');\n        $someTrait      = real"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/SomeTrait.php'",
                "line": 302,
                "context": "__ . '/../../_files/Target/regression/1066/DummyWithTrait.php');\n        $someTrait      = realpath(__DIR__ . '/../../_files/Target/regression/1066/SomeTrait.php');\n\n        $mapper = $this->mapper(\n "
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/tests/Target/MapBuilderTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/source_with_interfaces_classes_traits_functions.php'",
                "line": 48,
                "context": ">}>\n     */\n    public static function provider(): array\n    {\n        $file             = realpath(__DIR__ . '/../../_files/source_with_interfaces_classes_traits_functions.php');\n        $traitOne   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TraitOne.php'",
                "line": 49,
                "context": "/_files/source_with_interfaces_classes_traits_functions.php');\n        $traitOne         = realpath(__DIR__ . '/../../_files/Target/TraitOne.php');\n        $traitTwo         = realpath(__DIR__ . '/../"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TraitTwo.php'",
                "line": 50,
                "context": "    = realpath(__DIR__ . '/../../_files/Target/TraitOne.php');\n        $traitTwo         = realpath(__DIR__ . '/../../_files/Target/TraitTwo.php');\n        $twoTraits        = realpath(__DIR__ . '/../"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/two_traits.php'",
                "line": 51,
                "context": "    = realpath(__DIR__ . '/../../_files/Target/TraitTwo.php');\n        $twoTraits        = realpath(__DIR__ . '/../../_files/Target/two_traits.php');\n        $enum             = realpath(__DIR__ . '/."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TargetEnumeration.php'",
                "line": 52,
                "context": "  = realpath(__DIR__ . '/../../_files/Target/two_traits.php');\n        $enum             = realpath(__DIR__ . '/../../_files/Target/TargetEnumeration.php');\n        $grandParentClass = realpath(__DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/GrandParentClass.php'",
                "line": 53,
                "context": "lpath(__DIR__ . '/../../_files/Target/TargetEnumeration.php');\n        $grandParentClass = realpath(__DIR__ . '/../../_files/Target/GrandParentClass.php');\n        $parentClass      = realpath(__DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/ParentClass.php'",
                "line": 54,
                "context": "alpath(__DIR__ . '/../../_files/Target/GrandParentClass.php');\n        $parentClass      = realpath(__DIR__ . '/../../_files/Target/ParentClass.php');\n        $childClass       = realpath(__DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/ChildClass.php'",
                "line": 55,
                "context": " = realpath(__DIR__ . '/../../_files/Target/ParentClass.php');\n        $childClass       = realpath(__DIR__ . '/../../_files/Target/ChildClass.php');\n\n        return [\n            'generic' => [\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/BaseDummy.php'",
                "line": 429,
                "context": "e/issues/1066')]\n    public function testIssue1066(): void\n    {\n        $baseDummy      = realpath(__DIR__ . '/../../_files/Target/regression/1066/BaseDummy.php');\n        $dummy          = realpath("
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/Dummy.php'",
                "line": 430,
                "context": "__DIR__ . '/../../_files/Target/regression/1066/BaseDummy.php');\n        $dummy          = realpath(__DIR__ . '/../../_files/Target/regression/1066/Dummy.php');\n        $dummy2         = realpath(__DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/Dummy2.php'",
                "line": 431,
                "context": "ath(__DIR__ . '/../../_files/Target/regression/1066/Dummy.php');\n        $dummy2         = realpath(__DIR__ . '/../../_files/Target/regression/1066/Dummy2.php');\n        $dummyWithTrait = realpath(__D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/DummyWithTrait.php'",
                "line": 432,
                "context": "th(__DIR__ . '/../../_files/Target/regression/1066/Dummy2.php');\n        $dummyWithTrait = realpath(__DIR__ . '/../../_files/Target/regression/1066/DummyWithTrait.php');\n        $someTrait      = real"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/regression/1066/SomeTrait.php'",
                "line": 433,
                "context": "__ . '/../../_files/Target/regression/1066/DummyWithTrait.php');\n        $someTrait      = realpath(__DIR__ . '/../../_files/Target/regression/1066/SomeTrait.php');\n\n        $this->assertSame(\n       "
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/tests/Target/TargetCollectionValidatorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/Target/TargetClass.php'",
                "line": 30,
                "context": "tCollection::fromArray([Target::forClass(TargetClass::class)]);\n        $mapper    = $this->mapper([__DIR__ . '/../../_files/Target/TargetClass.php']);\n        $validator = new TargetCollectionValidat"
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/tests/StaticAnalysis/CodeUnitFindingVisitorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/ClassThatUsesAnonymousClass.php'",
                "line": 30,
                "context": " testDoesNotFindAnonymousClass(): void\n    {\n        $codeUnitFindingVisitor = $this->findCodeUnits(__DIR__ . '/../../_files/ClassThatUsesAnonymousClass.php');\n\n        $this->assertEmpty($codeUnitFin"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/ClassWithNameThatIsPartOfItsNamespacesName.php'",
                "line": 64,
                "context": "eThatIsPartOfItsNamespacesName(): void\n    {\n        $codeUnitFindingVisitor = $this->findCodeUnits(__DIR__ . '/../../_files/ClassWithNameThatIsPartOfItsNamespacesName.php');\n\n        $this->assertEmp"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/FunctionWithUnionTypes.php'",
                "line": 83,
                "context": "FunctionOrMethodWithUnionTypes(): void\n    {\n        $codeUnitFindingVisitor = $this->findCodeUnits(__DIR__ . '/../../_files/FunctionWithUnionTypes.php');\n\n        $this->assertEmpty($codeUnitFindingV"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/FunctionWithIntersectionTypes.php'",
                "line": 100,
                "context": "nOrMethodWithIntersectionTypes(): void\n    {\n        $codeUnitFindingVisitor = $this->findCodeUnits(__DIR__ . '/../../_files/FunctionWithIntersectionTypes.php');\n\n        $this->assertEmpty($codeUnitF"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/FunctionWithDisjunctiveNormalFormTypes.php'",
                "line": 117,
                "context": "WithDisjunctiveNormalFormTypes(): void\n    {\n        $codeUnitFindingVisitor = $this->findCodeUnits(__DIR__ . '/../../_files/FunctionWithDisjunctiveNormalFormTypes.php');\n\n        $this->assertEmpty($"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/source_with_interfaces_classes_traits_functions.php'",
                "line": 144,
                "context": "facesAndUsedTraitsAreAvailable(): void\n    {\n        $codeUnitFindingVisitor = $this->findCodeUnits(__DIR__ . '/../../_files/source_with_interfaces_classes_traits_functions.php');\n\n        $interfaces"
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/tests/StaticAnalysis/ExecutableLinesFindingVisitorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../_files/source_match_expression.php'",
                "line": 46,
                "context": "hArmsAreProcessedCorrectly(): void\n    {\n        $source                        = file_get_contents(__DIR__ . '/../../_files/source_match_expression.php');\n        $parser                        = (ne"
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/tests/Report/Html/CustomCssFileTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../../src/Report/Html/Renderer/Template/css/custom.css'",
                "line": 27,
                "context": "id\n    {\n        $file = CustomCssFile::default();\n\n        $this->assertSame(\n            realpath(__DIR__ . '/../../../../src/Report/Html/Renderer/Template/css/custom.css'),\n            realpath($fi"
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 10,
                "context": "nformation, please view the LICENSE\n * file that was distributed with this source code.\n */\nrequire __DIR__ . '/../vendor/autoload.php';\n\n\\define(\n    'TEST_FILES_PATH',\n    __DIR__ . \\DIRECTORY_SEPAR"
            }
        ],
        "vendor/phpunit/php-code-coverage/tests/src/FileAnalyserTestCase.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_files/source_with_interfaces_classes_traits_functions.php'",
                "line": 188,
                "context": "AreFound(): void\n    {\n        $analyser = new ParsingFileAnalyser(true, true);\n        $file     = __DIR__ . '/../_files/source_with_interfaces_classes_traits_functions.php';\n\n        $interfaces = $"
            }
        ],
        "vendor/phpunit/php-code-coverage/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog-'",
                "line": 12,
                "context": " = $argv[1];\n$versionSeries = explode('.', $version)[0] . '.' . explode('.', $version)[1];\n\n$file = __DIR__ . '/../../ChangeLog-' . $versionSeries . '.md';\n\nif (!is_file($file) || !is_readable($file))"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Driver/Driver.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s does not support branch and path coverage'",
                "line": 74,
                "context": "PathCoverage()) {\n            throw new BranchAndPathCoverageNotSupportedException(\n                sprintf(\n                    '%s does not support branch and path coverage',\n                    $th"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/StaticAnalysis/ExecutableLinesFindingVisitor.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('/^\\s*%s\\s*$/'",
                "line": 374,
                "context": "         isset($this->commentsToCheckForUnset[$lineNumber]) &&\n                    1 === preg_match(sprintf('/^\\s*%s\\s*$/', preg_quote($this->commentsToCheckForUnset[$lineNumber], '/')), $line)\n      "
            }
        ],
        "vendor/phpunit/php-code-coverage/src/StaticAnalysis/ParsingFileAnalyser.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Cannot parse %s: %s'",
                "line": 194,
                "context": "IgnoreStart\n        } catch (Error $error) {\n            throw new ParserException(\n                sprintf(\n                    'Cannot parse %s: %s',\n                    $filename,\n                 "
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/File.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s<a href=\"",
                "line": 495,
                "context": "   return $this->renderItemTemplate(\n            $template,\n            [\n                'name' => sprintf(\n                    '%s<a href=\"#%d\"><abbr title=\"%s\">%s</abbr></a>',\n                    $"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '<li%s>%s</li>'",
                "line": 1142,
                "context": "e':\n                $testCSS = ' class=\"danger\"';\n\n                break;\n        }\n\n        return sprintf(\n            '<li%s>%s</li>',\n            $testCSS,\n            htmlspecialchars($test, self"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/Directory.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s <a class=\"",
                "line": 100,
                "context": "ticon\" />', $up);\n            } elseif ($this->hasBranchCoverage) {\n                $data['name'] = sprintf(\n                    '%s <a class=\"small\" href=\"%s.html\">[line]</a> <a class=\"small\" href=\"%"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Report/Html/CustomCssFile.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Renderer/Template/css/custom.css'",
                "line": 24,
                "context": "    private string $path;\n\n    public static function default(): self\n    {\n        return new self(__DIR__ . '/Renderer/Template/css/custom.css');\n    }\n\n    /**\n     * @throws InvalidArgumentExcepti"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Report/Html/Facade.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/Renderer/Template/'",
                "line": 39,
                "context": "  $this->customCssFile = $customCssFile ?? CustomCssFile::default();\n        $this->templatePath  = __DIR__ . '/Renderer/Template/';\n    }\n\n    public function process(CodeCoverage $coverage, string $"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Report/Xml/Facade.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s/%s.xml'",
                "line": 286,
                "context": " private function saveDocument(DOMDocument $document, string $name): void\n    {\n        $filename = sprintf('%s/%s.xml', $this->targetDirectory(), $name);\n\n        $document->formatOutput       = true"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Exception/InvalidCodeCoverageTargetException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s is not a valid target for code coverage'",
                "line": 21,
                "context": "on\n{\n    public function __construct(Target $target)\n    {\n        parent::__construct(\n            sprintf(\n                '%s is not a valid target for code coverage',\n                $target->desc"
            }
        ],
        "vendor/phpunit/php-code-coverage/src/Exception/XdebugVersionNotSupportedException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Version %s of the Xdebug extension is not supported'",
                "line": 24,
                "context": " */\n    public function __construct(string $version)\n    {\n        parent::__construct(\n            sprintf(\n                'Version %s of the Xdebug extension is not supported',\n                $ver"
            }
        ],
        "vendor/phpunit/php-invoker/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/phpunit/php-invoker/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/phpunit/php-invoker/src/Invoker.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                        'Execution aborted after %d second%s'",
                "line": 42,
                "context": " use ($timeout): void\n            {\n                throw new TimeoutException(\n                    sprintf(\n                        'Execution aborted after %d second%s',\n                        $tim"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 13,
                "context": "ed with this source code.\n */\nnamespace SebastianBergmann\\Invoker;\n\nuse const SIGALRM;\nuse function call_user_func_array;\nuse function extension_loaded;\nuse function function_exists;\nuse function pcnt"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 55,
                "context": "        pcntl_async_signals(true);\n        pcntl_alarm($timeout);\n\n        try {\n            return call_user_func_array($callable, $arguments);\n        } finally {\n            pcntl_alarm(0);\n       "
            }
        ],
        "vendor/phpunit/php-file-iterator/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/phpunit/php-file-iterator/tests/unit/FacadeTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture'",
                "line": 54,
                "context": "        $fixtureDirectoryRealpath . '/b/f/h/i/PrefixSuffix.php',\n                ],\n                __DIR__ . '/../fixture',\n                '',\n                '',\n                [],\n            ],\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture'",
                "line": 69,
                "context": "          $fixtureDirectoryRealpath . '/b/e/i/PrefixSuffix.php',\n                ],\n                __DIR__ . '/../fixture',\n                '',\n                '',\n                [\n                 "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture'",
                "line": 95,
                "context": "        $fixtureDirectoryRealpath . '/b/f/h/i/PrefixSuffix.php',\n                ],\n                __DIR__ . '/../fixture',\n                '',\n                'Prefix',\n                [],\n         "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture'",
                "line": 118,
                "context": "        $fixtureDirectoryRealpath . '/b/f/h/i/PrefixSuffix.php',\n                ],\n                __DIR__ . '/../fixture',\n                'Suffix.php',\n                '',\n                [],\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture/*/c'",
                "line": 134,
                "context": "        $fixtureDirectoryRealpath . '/a/c/d/i/PrefixSuffix.php',\n                ],\n                __DIR__ . '/../fixture/*/c',\n                '',\n                '',\n                [],\n           "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture/**/i'",
                "line": 146,
                "context": "        $fixtureDirectoryRealpath . '/b/f/h/i/PrefixSuffix.php',\n                ],\n                __DIR__ . '/../fixture/**/i',\n                '',\n                '',\n                [],\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture/**/this/path/does/not/exists'",
                "line": 153,
                "context": "ath, filter prefix: no, filter suffix: no, excludes: none' => [\n                [],\n                __DIR__ . '/../fixture/**/this/path/does/not/exists',\n                '',\n                '',\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixture'",
                "line": 194,
                "context": "\n    private static function fixtureDirectoryRealpath(): false|string\n    {\n        return realpath(__DIR__ . '/../fixture');\n    }\n}\n"
            }
        ],
        "vendor/phpunit/php-file-iterator/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/phar-io/manifest/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tools/php-cs-fixer.d/PhpdocSingleLineVarFixer.php'",
                "line": 3,
                "context": "<?php\n\nrequire __DIR__ . '/tools/php-cs-fixer.d/PhpdocSingleLineVarFixer.php';\n\n$header = file_get_contents(__DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tools/php-cs-fixer.d/header.txt'",
                "line": 5,
                "context": "equire __DIR__ . '/tools/php-cs-fixer.d/PhpdocSingleLineVarFixer.php';\n\n$header = file_get_contents(__DIR__ . '/tools/php-cs-fixer.d/header.txt');\n\nreturn (new PhpCsFixer\\Config())\n    ->registerCusto"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/build'",
                "line": 219,
                "context": "]\n    )\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->files()\n            ->in(__DIR__ . '/build')\n            ->in(__DIR__ . '/src')\n            ->in(__DIR__ . '/tests')\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 220,
                "context": "sFixer\\Finder::create()\n            ->files()\n            ->in(__DIR__ . '/build')\n            ->in(__DIR__ . '/src')\n            ->in(__DIR__ . '/tests')\n            ->notName('autoload.php')\n    );\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 221,
                "context": " ->files()\n            ->in(__DIR__ . '/build')\n            ->in(__DIR__ . '/src')\n            ->in(__DIR__ . '/tests')\n            ->notName('autoload.php')\n    );\n"
            }
        ],
        "vendor/phar-io/manifest/tests/ManifestLoaderTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/library.xml'",
                "line": 59,
                "context": "\n        $this->assertInstanceOf(\n            Manifest::class,\n            ManifestLoader::fromFile(__DIR__ . '/_fixture/library.xml')\n        );\n    }\n\n    public function testCanBeLoadedFromString()"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/library.xml'",
                "line": 67,
                "context": "         Manifest::class,\n            ManifestLoader::fromString(\n                file_get_contents(__DIR__ . '/_fixture/library.xml')\n            )\n        );\n    }\n\n    public function testCanBeLoad"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/test.phar'",
                "line": 75,
                "context": "\n        $this->assertInstanceOf(\n            Manifest::class,\n            ManifestLoader::fromPhar(__DIR__ . '/_fixture/test.phar')\n        );\n    }\n\n    public function testLoadingNonExistingFileThr"
            }
        ],
        "vendor/phar-io/manifest/tests/ManifestDocumentMapperTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/phpunit-5.6.5.xml'",
                "line": 75,
                "context": "    );\n    }\n\n    public function dataProvider() {\n        return [\n            'application'   => [__DIR__ . '/_fixture/phpunit-5.6.5.xml'],\n            'library'       => [__DIR__ . '/_fixture/libra"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/library.xml'",
                "line": 76,
                "context": "      'application'   => [__DIR__ . '/_fixture/phpunit-5.6.5.xml'],\n            'library'       => [__DIR__ . '/_fixture/library.xml'],\n            'extension'     => [__DIR__ . '/_fixture/extension.x"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/extension.xml'",
                "line": 77,
                "context": "            'library'       => [__DIR__ . '/_fixture/library.xml'],\n            'extension'     => [__DIR__ . '/_fixture/extension.xml'],\n            'noemailauthor' => [__DIR__ . '/_fixture/noemailau"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/noemailauthor.xml'",
                "line": 78,
                "context": "          'extension'     => [__DIR__ . '/_fixture/extension.xml'],\n            'noemailauthor' => [__DIR__ . '/_fixture/noemailauthor.xml']\n        ];\n    }\n\n    public function testThrowsExceptionOn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/custom.xml'",
                "line": 83,
                "context": "stThrowsExceptionOnUnsupportedType(): void {\n        $manifestDocument = ManifestDocument::fromFile(__DIR__ . '/_fixture/custom.xml');\n        $mapper           = new ManifestDocumentMapper();\n\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/invalidversion.xml'",
                "line": 91,
                "context": "dVersionInformationThrowsException(): void {\n        $manifestDocument = ManifestDocument::fromFile(__DIR__ . '/_fixture/invalidversion.xml');\n        $mapper           = new ManifestDocumentMapper();"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/invalidversionconstraint.xml'",
                "line": 99,
                "context": "idVersionConstraintThrowsException(): void {\n        $manifestDocument = ManifestDocument::fromFile(__DIR__ . '/_fixture/invalidversionconstraint.xml');\n        $mapper           = new ManifestDocumen"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/extension-invalidcompatible.xml'",
                "line": 110,
                "context": "ompatibleConstraintThrowsException(): void {\n        $manifestDocument = ManifestDocument::fromFile(__DIR__ . '/_fixture/extension-invalidcompatible.xml');\n        $mapper           = new ManifestDocu"
            }
        ],
        "vendor/phar-io/manifest/tests/xml/ManifestDocumentTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/phpunit-5.6.5.xml'",
                "line": 24,
                "context": "this->assertInstanceOf(\n            ManifestDocument::class,\n            ManifestDocument::fromFile(__DIR__ . '/../_fixture/phpunit-5.6.5.xml')\n        );\n    }\n\n    public function testFromStringThro"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/phpunit-5.6.5.xml'",
                "line": 34,
                "context": "\n\n    public function testCanBeConstructedFromString(): void {\n        $content = file_get_contents(__DIR__ . '/../_fixture/phpunit-5.6.5.xml');\n        $this->assertInstanceOf(\n            ManifestDo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/phpunit-5.6.5.xml'",
                "line": 117,
                "context": "()\n        );\n    }\n\n    private function loadFixture() {\n        return ManifestDocument::fromFile(__DIR__ . '/../_fixture/phpunit-5.6.5.xml');\n    }\n\n    private function loadEmptyFixture() {\n      "
            }
        ],
        "vendor/phar-io/manifest/tests/ManifestSerializerTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/phpunit-5.6.5.xml'",
                "line": 81,
                "context": "  public function dataProvider() {\n        return [\n            'application' => [file_get_contents(__DIR__ . '/_fixture/phpunit-5.6.5.xml')],\n            'library'     => [file_get_contents(__DIR__ ."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/library.xml'",
                "line": 82,
                "context": "contents(__DIR__ . '/_fixture/phpunit-5.6.5.xml')],\n            'library'     => [file_get_contents(__DIR__ . '/_fixture/library.xml')],\n            'extension'   => [file_get_contents(__DIR__ . '/_fi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/extension.xml'",
                "line": 83,
                "context": "e_get_contents(__DIR__ . '/_fixture/library.xml')],\n            'extension'   => [file_get_contents(__DIR__ . '/_fixture/extension.xml')]\n        ];\n    }\n\n    /**\n     * @uses \\PharIo\\Manifest\\Librar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/library.xml'",
                "line": 92,
                "context": "\\ApplicationName\n     */\n    public function testCanSerializeToFile(): void {\n        $src        = __DIR__ . '/_fixture/library.xml';\n        $dest       = sys_get_temp_dir() . '/' . uniqid('serializ"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/_fixture/custom.xml'",
                "line": 120,
                "context": "   $serializer = new ManifestSerializer();\n        $this->assertXmlStringEqualsXmlFile(\n            __DIR__ . '/_fixture/custom.xml',\n            $serializer->serializeToString($manifest)\n        );\n "
            }
        ],
        "vendor/phar-io/manifest/examples/example-01.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 14,
                "context": "rce code.\n */\n\nuse PharIo\\Manifest\\ManifestLoader;\nuse PharIo\\Manifest\\ManifestSerializer;\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\n$manifest = ManifestLoader::fromFile(__DIR__ . '/../tests/_fix"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../tests/_fixture/phpunit-5.6.5.xml'",
                "line": 16,
                "context": "festSerializer;\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\n$manifest = ManifestLoader::fromFile(__DIR__ . '/../tests/_fixture/phpunit-5.6.5.xml');\n\necho sprintf(\n    \"Manifest for %s (%s):\\n\\n\",\n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n    \"Manifest for %s (%s):\\n\\n\"",
                "line": 18,
                "context": "hp';\n\n$manifest = ManifestLoader::fromFile(__DIR__ . '/../tests/_fixture/phpunit-5.6.5.xml');\n\necho sprintf(\n    \"Manifest for %s (%s):\\n\\n\",\n    $manifest->getName()->asString(),\n    $manifest->getVe"
            }
        ],
        "vendor/phar-io/manifest/examples/example-02.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../vendor/autoload.php'",
                "line": 7,
                "context": ");\n/**\n * Thanks to @llaville for this example\n */\nuse PharIo\\Manifest\\ManifestSerializer;\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\n$bundledComponentCollection = new \\PharIo\\Manifest\\BundledComp"
            }
        ],
        "vendor/phar-io/manifest/src/values/Author.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            '%s <%s>'",
                "line": 32,
                "context": "tring {\n        if (!$this->hasEmail()) {\n            return $this->name;\n        }\n\n        return sprintf(\n            '%s <%s>',\n            $this->name,\n            $this->email->asString()\n      "
            }
        ],
        "vendor/phar-io/manifest/src/exceptions/ManifestDocumentLoadingException.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s (Line: %d / Column: %d / File: %s)'",
                "line": 30,
                "context": "rs;\n        $first              = $this->libxmlErrors[0];\n\n        parent::__construct(\n            sprintf(\n                '%s (Line: %d / Column: %d / File: %s)',\n                $first->message,\n "
            }
        ],
        "vendor/phar-io/manifest/src/xml/ElementCollection.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('\\DOMElement expected, got \\%s'",
                "line": 61,
                "context": " instanceof DOMElement) {\n                throw new ElementCollectionException(\n                    sprintf('\\DOMElement expected, got \\%s', get_class($node))\n                );\n            }\n\n       "
            }
        ],
        "vendor/phar-io/manifest/src/xml/ManifestDocument.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Element %s missing'",
                "line": 109,
                "context": "!$element instanceof DOMElement) {\n            throw new ManifestDocumentException(\n                sprintf('Element %s missing', $elementName)\n            );\n        }\n\n        return $element;\n    }"
            }
        ],
        "vendor/phar-io/manifest/src/xml/ManifestElement.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Attribute %s not set on element %s'",
                "line": 30,
                "context": "is->element->hasAttribute($name)) {\n            throw new ManifestElementException(\n                sprintf(\n                    'Attribute %s not set on element %s',\n                    $name,\n      "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Element %s missing'",
                "line": 50,
                "context": "(!$element instanceof DOMElement) {\n            throw new ManifestElementException(\n                sprintf('Element %s missing', $elementName)\n            );\n        }\n\n        return $element;\n    }"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Element(s) %s missing'",
                "line": 62,
                "context": "  if ($elementList->length === 0) {\n            throw new ManifestElementException(\n                sprintf('Element(s) %s missing', $elementName)\n            );\n        }\n\n        return $elementList"
            }
        ],
        "vendor/phar-io/manifest/src/ManifestLoader.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Loading %s failed.'",
                "line": 23,
                "context": " );\n        } catch (Exception $e) {\n            throw new ManifestLoaderException(\n                sprintf('Loading %s failed.', $filename),\n                (int)$e->getCode(),\n                $e\n   "
            }
        ],
        "vendor/phar-io/manifest/src/ManifestDocumentMapper.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Unsupported type %s'",
                "line": 52,
                "context": "->getExtensionElement());\n        }\n\n        throw new ManifestDocumentMapperException(\n            sprintf('Unsupported type %s', $contains->getType())\n        );\n    }\n\n    private function mapCopyr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Unsupported version constraint - %s'",
                "line": 89,
                "context": "atch (VersionException $e) {\n            throw new ManifestDocumentMapperException(\n                sprintf('Unsupported version constraint - %s', $e->getMessage()),\n                (int)$e->getCode()"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Unsupported version constraint - %s'",
                "line": 145,
                "context": "atch (VersionException $e) {\n            throw new ManifestDocumentMapperException(\n                sprintf('Unsupported version constraint - %s', $e->getMessage()),\n                (int)$e->getCode()"
            }
        ],
        "vendor/phar-io/version/src/VersionConstraintParser.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Version constraint %s is not supported.'",
                "line": 23,
                "context": "-.*)?$/i', $value)) {\n            throw new UnsupportedVersionConstraintException(\n                \\sprintf('Version constraint %s is not supported.', $value)\n            );\n        }\n\n        switch "
            }
        ],
        "vendor/phar-io/version/src/PreReleaseSuffix.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Invalid label %s'",
                "line": 70,
                "context": "eg_match($regex, $value, $matches) !== 1) {\n            throw new InvalidPreReleaseSuffixException(\\sprintf('Invalid label %s', $value));\n        }\n\n        $this->full  = $matches[1];\n        $this->"
            }
        ],
        "vendor/squizlabs/php_codesniffer/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../../autoload.php'",
                "line": 81,
                "context": "        }\n\n                if (strpos(__DIR__, 'phar://') !== 0\n                    && @file_exists(__DIR__.'/../../autoload.php') === true\n                ) {\n                    self::$composerAutol"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../../autoload.php'",
                "line": 83,
                "context": "autoload.php') === true\n                ) {\n                    self::$composerAutoloader = include __DIR__.'/../../autoload.php';\n                    if (self::$composerAutoloader instanceof ClassLoa"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHP_CodeSniffer\\Autoload'",
                "line": 22,
                "context": "BSD Licence\n */\n\nnamespace PHP_CodeSniffer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Exception;\n\nif (class_exists('PHP_CodeSniffer\\Autoload', false) === false) {\n    class Autoload\n    {\n\n        /**\n "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/AllTests.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('\\PHPUnit\\Runner\\Version'",
                "line": 19,
                "context": "rsions due to return type hints, so maintain\n// two different suite objects.\n$phpunit7 = false;\nif (class_exists('\\PHPUnit\\Runner\\Version') === true) {\n    $version = \\PHPUnit\\Runner\\Version::id();\n  "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Filters/GitStagedTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../../../.git'",
                "line": 218,
                "context": "id\n     */\n    public function testExecAlwaysReturnsArray($cmd, $expected)\n    {\n        if (is_dir(__DIR__.'/../../../.git') === false) {\n            $this->markTestSkipped('Not a git repository');\n "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Filters/Filter/AcceptTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/'",
                "line": 37,
                "context": "void\n     */\n    public static function initializeConfigAndRuleset()\n    {\n        $standard      = __DIR__.'/'.basename(__FILE__, '.php').'.xml';\n        self::$config  = new ConfigDouble([\"--standar"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Filters/GitModifiedTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../../../.git'",
                "line": 218,
                "context": "id\n     */\n    public function testExecAlwaysReturnsArray($cmd, $expected)\n    {\n        if (is_dir(__DIR__.'/../../../.git') === false) {\n            $this->markTestSkipped('Not a git repository');\n "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Tokenizers/Tokenizer/ReplaceTabsInTokenTestCase.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ReplaceTabsInTokenTest.inc'",
                "line": 45,
                "context": "::$caseFileName = __DIR__.DIRECTORY_SEPARATOR.$relativeCN.'.inc';\n\n        $baseFileName = realpath(__DIR__.'/ReplaceTabsInTokenTest.inc');\n        if (is_string($baseFileName) === false) {\n          "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Tokenizers/Tokenizer/RecurseScopeMapIfKeywordConditionsTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope condition not set correctly; expected T_IF, found %s'",
                "line": 45,
                "context": "tSame(\n            $expectedScopeCondition,\n            $tokenArray['scope_condition'],\n            sprintf(\n                'Scope condition not set correctly; expected T_IF, found %s',\n             "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope opener not set correctly; expected %s, found %s'",
                "line": 55,
                "context": ">assertSame(\n            $expectedScopeOpener,\n            $tokenArray['scope_opener'],\n            sprintf(\n                'Scope opener not set correctly; expected %s, found %s',\n                $t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope closer not set correctly; expected %s, found %s'",
                "line": 66,
                "context": ">assertSame(\n            $expectedScopeCloser,\n            $tokenArray['scope_closer'],\n            sprintf(\n                'Scope closer not set correctly; expected %s, found %s',\n                $t"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Tokenizers/Tokenizer/RecurseScopeMapSwitchTokenScopeTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope condition not set correctly; expected T_SWITCH, found %s'",
                "line": 59,
                "context": "tSame(\n            $expectedScopeCondition,\n            $tokenArray['scope_condition'],\n            sprintf(\n                'Scope condition not set correctly; expected T_SWITCH, found %s',\n         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope opener not set correctly; expected %s, found %s'",
                "line": 69,
                "context": ">assertSame(\n            $expectedScopeOpener,\n            $tokenArray['scope_opener'],\n            sprintf(\n                'Scope opener not set correctly; expected %s, found %s',\n                $t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope closer not set correctly; expected %s, found %s'",
                "line": 80,
                "context": ">assertSame(\n            $expectedScopeCloser,\n            $tokenArray['scope_closer'],\n            sprintf(\n                'Scope closer not set correctly; expected %s, found %s',\n                $t"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Tokenizers/Tokenizer/RecurseScopeMapDefaultKeywordConditionsTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Token tokenized as %s, not T_MATCH_DEFAULT (code). Marker: %s.'",
                "line": 57,
                "context": "       $this->assertSame(\n            T_MATCH_DEFAULT,\n            $tokenArray['code'],\n            sprintf('Token tokenized as %s, not T_MATCH_DEFAULT (code). Marker: %s.', $tokenArray['type'], $test"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope condition is set. Marker: %s.'",
                "line": 63,
                "context": "   $this->assertArrayNotHasKey(\n            'scope_condition',\n            $tokenArray,\n            sprintf('Scope condition is set. Marker: %s.', $testMarker)\n        );\n        $this->assertArrayNot"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope opener is set. Marker: %s.'",
                "line": 68,
                "context": "      $this->assertArrayNotHasKey(\n            'scope_opener',\n            $tokenArray,\n            sprintf('Scope opener is set. Marker: %s.', $testMarker)\n        );\n        $this->assertArrayNotHas"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope closer is set. Marker: %s.'",
                "line": 73,
                "context": "      $this->assertArrayNotHasKey(\n            'scope_closer',\n            $tokenArray,\n            sprintf('Scope closer is set. Marker: %s.', $testMarker)\n        );\n\n    }//end testMatchDefault()\n\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Token tokenized as %s, not T_DEFAULT (code). Marker: %s.'",
                "line": 169,
                "context": "ken.\n        $this->assertSame(\n            T_DEFAULT,\n            $tokenArray['code'],\n            sprintf('Token tokenized as %s, not T_DEFAULT (code). Marker: %s.', $tokenArray['type'], $testMarker"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope condition is not set. Marker: %s.'",
                "line": 175,
                "context": "      $this->assertArrayHasKey(\n            'scope_condition',\n            $tokenArray,\n            sprintf('Scope condition is not set. Marker: %s.', $testMarker)\n        );\n        $this->assertArra"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope opener is not set. Marker: %s.'",
                "line": 180,
                "context": "\n        $this->assertArrayHasKey(\n            'scope_opener',\n            $tokenArray,\n            sprintf('Scope opener is not set. Marker: %s.', $testMarker)\n        );\n        $this->assertArrayHa"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope closer is not set. Marker: %s.'",
                "line": 185,
                "context": "\n        $this->assertArrayHasKey(\n            'scope_closer',\n            $tokenArray,\n            sprintf('Scope closer is not set. Marker: %s.', $testMarker)\n        );\n        $this->assertSame(\n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope condition is not the T_DEFAULT token. Marker: %s.'",
                "line": 190,
                "context": "     $this->assertSame(\n            $token,\n            $tokenArray['scope_condition'],\n            sprintf('Scope condition is not the T_DEFAULT token. Marker: %s.', $testMarker)\n        );\n        $"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope opener of the T_DEFAULT token incorrect. Marker: %s.'",
                "line": 195,
                "context": ">assertSame(\n            $expectedScopeOpener,\n            $tokenArray['scope_opener'],\n            sprintf('Scope opener of the T_DEFAULT token incorrect. Marker: %s.', $testMarker)\n        );\n      "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope closer of the T_DEFAULT token incorrect. Marker: %s.'",
                "line": 200,
                "context": ">assertSame(\n            $expectedScopeCloser,\n            $tokenArray['scope_closer'],\n            sprintf('Scope closer of the T_DEFAULT token incorrect. Marker: %s.', $testMarker)\n        );\n\n     "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Opener scope condition is not set. Marker: %s.'",
                "line": 207,
                "context": " $this->assertArrayHasKey(\n            'scope_condition',\n            $tokens[$opener],\n            sprintf('Opener scope condition is not set. Marker: %s.', $openerMarker)\n        );\n        $this->a"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Opener scope opener is not set. Marker: %s.'",
                "line": 212,
                "context": "    $this->assertArrayHasKey(\n            'scope_opener',\n            $tokens[$opener],\n            sprintf('Opener scope opener is not set. Marker: %s.', $openerMarker)\n        );\n        $this->asse"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Opener scope closer is not set. Marker: %s.'",
                "line": 217,
                "context": "    $this->assertArrayHasKey(\n            'scope_closer',\n            $tokens[$opener],\n            sprintf('Opener scope closer is not set. Marker: %s.', $openerMarker)\n        );\n        $this->asse"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Opener scope condition is not the T_DEFAULT token. Marker: %s.'",
                "line": 222,
                "context": "$this->assertSame(\n            $token,\n            $tokens[$opener]['scope_condition'],\n            sprintf('Opener scope condition is not the T_DEFAULT token. Marker: %s.', $openerMarker)\n        );\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('T_DEFAULT opener scope opener token incorrect. Marker: %s.'",
                "line": 227,
                "context": "rtSame(\n            $expectedScopeOpener,\n            $tokens[$opener]['scope_opener'],\n            sprintf('T_DEFAULT opener scope opener token incorrect. Marker: %s.', $openerMarker)\n        );\n    "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('T_DEFAULT opener scope closer token incorrect. Marker: %s.'",
                "line": 232,
                "context": "rtSame(\n            $expectedScopeCloser,\n            $tokens[$opener]['scope_closer'],\n            sprintf('T_DEFAULT opener scope closer token incorrect. Marker: %s.', $openerMarker)\n        );\n\n   "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Closer scope condition is not set. Marker: %s.'",
                "line": 242,
                "context": "rtArrayHasKey(\n                'scope_condition',\n                $tokens[$closer],\n                sprintf('Closer scope condition is not set. Marker: %s.', $closerMarker)\n            );\n            "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Closer scope opener is not set. Marker: %s.'",
                "line": 247,
                "context": "ssertArrayHasKey(\n                'scope_opener',\n                $tokens[$closer],\n                sprintf('Closer scope opener is not set. Marker: %s.', $closerMarker)\n            );\n            $th"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Closer scope closer is not set. Marker: %s.'",
                "line": 252,
                "context": "ssertArrayHasKey(\n                'scope_closer',\n                $tokens[$closer],\n                sprintf('Closer scope closer is not set. Marker: %s.', $closerMarker)\n            );\n            $th"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Closer scope condition is not the T_DEFAULT token. Marker: %s.'",
                "line": 257,
                "context": "tSame(\n                $token,\n                $tokens[$closer]['scope_condition'],\n                sprintf('Closer scope condition is not the T_DEFAULT token. Marker: %s.', $closerMarker)\n           "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('T_DEFAULT closer scope opener token incorrect. Marker: %s.'",
                "line": 262,
                "context": "            $expectedScopeOpener,\n                $tokens[$closer]['scope_opener'],\n                sprintf('T_DEFAULT closer scope opener token incorrect. Marker: %s.', $closerMarker)\n            );\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('T_DEFAULT closer scope closer token incorrect. Marker: %s.'",
                "line": 267,
                "context": "            $expectedScopeCloser,\n                $tokens[$closer]['scope_closer'],\n                sprintf('T_DEFAULT closer scope closer token incorrect. Marker: %s.', $closerMarker)\n            );\n"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('T_DEFAULT condition not added for token belonging to the T_DEFAULT structure. Marker: %s.'",
                "line": 281,
                "context": "Key(\n                    $token,\n                    $tokens[$i]['conditions'],\n                    sprintf('T_DEFAULT condition not added for token belonging to the T_DEFAULT structure. Marker: %s.',"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Token tokenized as %s, not T_STRING (code). Marker: %s.'",
                "line": 369,
                "context": "oken.\n        $this->assertSame(\n            T_STRING,\n            $tokenArray['code'],\n            sprintf('Token tokenized as %s, not T_STRING (code). Marker: %s.', $tokenArray['type'], $testMarker)"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope condition is set. Marker: %s.'",
                "line": 375,
                "context": "   $this->assertArrayNotHasKey(\n            'scope_condition',\n            $tokenArray,\n            sprintf('Scope condition is set. Marker: %s.', $testMarker)\n        );\n        $this->assertArrayNot"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope opener is set. Marker: %s.'",
                "line": 380,
                "context": "      $this->assertArrayNotHasKey(\n            'scope_opener',\n            $tokenArray,\n            sprintf('Scope opener is set. Marker: %s.', $testMarker)\n        );\n        $this->assertArrayNotHas"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Scope closer is set. Marker: %s.'",
                "line": 385,
                "context": "      $this->assertArrayNotHasKey(\n            'scope_closer',\n            $tokenArray,\n            sprintf('Scope closer is set. Marker: %s.', $testMarker)\n        );\n\n    }//end testNotDefaultKeywor"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Tokenizers/Tokenizer/RecurseScopeMapCaseKeywordConditionsTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope condition not set correctly; expected T_CASE, found %s.'",
                "line": 101,
                "context": "tSame(\n            $expectedScopeCondition,\n            $tokenArray['scope_condition'],\n            sprintf(\n                'Scope condition not set correctly; expected T_CASE, found %s.',\n          "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope opener not set correctly; expected %s, found %s.'",
                "line": 111,
                "context": ">assertSame(\n            $expectedScopeOpener,\n            $tokenArray['scope_opener'],\n            sprintf(\n                'Scope opener not set correctly; expected %s, found %s.',\n                $"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Scope closer not set correctly; expected %s, found %s.'",
                "line": 122,
                "context": ">assertSame(\n            $expectedScopeCloser,\n            $tokenArray['scope_closer'],\n            sprintf(\n                'Scope closer not set correctly; expected %s, found %s.',\n                $"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Fixer/GenerateDiffTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest.inc'",
                "line": 58,
                "context": " ConfigDouble();\n        $ruleset = new Ruleset($config);\n\n        self::$phpcsFile = new LocalFile(__DIR__.'/Fixtures/GenerateDiffTest.inc', $ruleset, $config);\n        self::$phpcsFile->parse();\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-NoDiff.inc'",
                "line": 113,
                "context": "\n        return [\n            'no difference'                    => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-NoDiff.inc',\n            ],\n            'line removed'          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-LineRemoved.inc'",
                "line": 116,
                "context": "',\n            ],\n            'line removed'                     => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-LineRemoved.inc',\n            ],\n            'line added'       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-LineAdded.inc'",
                "line": 119,
                "context": "',\n            ],\n            'line added'                       => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-LineAdded.inc',\n            ],\n            'var name changed'   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-VarNameChanged.inc'",
                "line": 122,
                "context": "',\n            ],\n            'var name changed'                 => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-VarNameChanged.inc',\n            ],\n            'trailing whites"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-NoTrailingWhitespace.inc'",
                "line": 125,
                "context": "',\n            ],\n            'trailing whitespace removed'      => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-NoTrailingWhitespace.inc',\n            ],\n            'tab repla"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-TabsToSpaces.inc'",
                "line": 128,
                "context": "',\n            ],\n            'tab replaced with spaces'         => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-TabsToSpaces.inc',\n            ],\n            'blank lines at st"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-BlankLinesAtStart.inc'",
                "line": 131,
                "context": "',\n            ],\n            'blank lines at start of file'     => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-BlankLinesAtStart.inc',\n            ],\n            'whitespace d"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-WhiteSpaceAtStart.inc'",
                "line": 134,
                "context": "',\n            ],\n            'whitespace diff at start of file' => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-WhiteSpaceAtStart.inc',\n            ],\n            'blank lines "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-BlankLinesAtEnd.inc'",
                "line": 137,
                "context": "',\n            ],\n            'blank lines at end of file'       => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-BlankLinesAtEnd.inc',\n            ],\n            'whitespace dif"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-WhiteSpaceAtEnd.inc'",
                "line": 140,
                "context": "',\n            ],\n            'whitespace diff at end of file'   => [\n                'filePath' => __DIR__.'/Fixtures/GenerateDiffTest-WhiteSpaceAtEnd.inc',\n            ],\n        ];\n\n    }//end data"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-VarNameChanged.inc'",
                "line": 167,
                "context": ".= ' \techo \\'This line is tab indented\\';'.PHP_EOL;\n        $expected .= ' }';\n\n        $filePath = __DIR__.'/Fixtures/GenerateDiffTest-VarNameChanged.inc';\n        $diff     = self::$phpcsFile->fixer"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/GenerateDiffTest-WindowsLineEndings.inc'",
                "line": 213,
                "context": " '+\techo \\'This line is tab indented\\';'.\"\\n\";\n        $expected .= '+}'.\"\\n\";\n\n        $filePath = __DIR__.'/Fixtures/GenerateDiffTest-WindowsLineEndings.inc';\n        $diff     = self::$phpcsFile->f"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/GetIgnorePatternsTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.\"/GetIgnorePatternsTest.xml\"",
                "line": 42,
                "context": "function initializeConfigAndRuleset()\n    {\n        // Set up the ruleset.\n        $standard      = __DIR__.\"/GetIgnorePatternsTest.xml\";\n        $config        = new ConfigDouble([\"--standard=$standa"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ProcessRulesetShouldProcessElementTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetShouldProcessElementTest.xml'",
                "line": 82,
                "context": "(isset(self::$ruleset) === false) {\n            // Set up the ruleset.\n            $standard      = __DIR__.'/ProcessRulesetShouldProcessElementTest.xml';\n            self::$config  = new ConfigDouble"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ProcessRuleInvalidTypeTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRuleInvalidTypeTest.xml'",
                "line": 32,
                "context": "     * @return void\n     */\n    public function testInvalidTypeHandling()\n    {\n        $standard = __DIR__.'/ProcessRuleInvalidTypeTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standa"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ProcessRuleShouldProcessElementTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRuleShouldProcessElementTest.xml'",
                "line": 44,
                "context": "(isset(self::$ruleset) === false) {\n            // Set up the ruleset.\n            $standard      = __DIR__.'/ProcessRuleShouldProcessElementTest.xml';\n            $config        = new ConfigDouble([\""
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ExpandRulesetReferenceTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExpandRulesetReferenceTest.xml'",
                "line": 33,
                "context": "nction testRulesetRelativePathReferences()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExpandRulesetReferenceTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/'",
                "line": 61,
                "context": "ceThrowsException($standard, $replacement)\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/'.$standard;\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n\n        $exc"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/'",
                "line": 55,
                "context": "rn void\n     */\n    protected function initializeConfigAndRuleset()\n    {\n        $this->standard = __DIR__.'/'.basename(__FILE__, '.php').'.xml';\n        $repoRootDir    = dirname(dirname(dirname(__D"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/SetSniffPropertyTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.\"/SetProperty{$name}Test.xml\"",
                "line": 48,
                "context": "key' => 'othervalue',\n            ],\n        ];\n\n        // Set up the ruleset.\n        $standard = __DIR__.\"/SetProperty{$name}Test.xml\";\n        $config   = new ConfigDouble([\"--standard=$standard\"]"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/SetPropertyAppliesPropertyToMultipleSniffsInCategoryTest.xml'",
                "line": 104,
                "context": "ame  = 'indent';\n        $expectedValue = '10';\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/SetPropertyAppliesPropertyToMultipleSniffsInCategoryTest.xml';\n        $config   = new Con"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/SetPropertyThrowsErrorOnInvalidPropertyTest.xml'",
                "line": 142,
                "context": "->expectRuntimeExceptionMessage($exceptionMsg);\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/SetPropertyThrowsErrorOnInvalidPropertyTest.xml';\n        $config   = new ConfigDouble([\"-"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/SetPropertyNotAllowedViaAttributeTest.xml'",
                "line": 162,
                "context": "->expectRuntimeExceptionMessage($exceptionMsg);\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/SetPropertyNotAllowedViaAttributeTest.xml';\n        $config   = new ConfigDouble([\"--stand"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/SetPropertyDoesNotThrowErrorOnInvalidPropertyWhenSetForStandardTest.xml'",
                "line": 180,
                "context": "ErrorOnInvalidPropertyWhenSetForStandard()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/SetPropertyDoesNotThrowErrorOnInvalidPropertyWhenSetForStandardTest.xml';\n        $config "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/SetPropertyDoesNotThrowErrorOnInvalidPropertyWhenSetForCategoryTest.xml'",
                "line": 198,
                "context": "ErrorOnInvalidPropertyWhenSetForCategory()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/SetPropertyDoesNotThrowErrorOnInvalidPropertyWhenSetForCategoryTest.xml';\n        $config "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.\"/SetProperty{$name}Test.xml\"",
                "line": 251,
                "context": "stStandard\\Sniffs\\SetProperty\\\\'.$name.'Sniff';\n\n        // Set up the ruleset.\n        $standard = __DIR__.\"/SetProperty{$name}Test.xml\";\n        $config   = new ConfigDouble([\"--standard=$standard\"]"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.\"/SetProperty{$name}Test.xml\"",
                "line": 302,
                "context": "stStandard\\Sniffs\\SetProperty\\\\'.$name.'Sniff';\n\n        // Set up the ruleset.\n        $standard = __DIR__.\"/SetProperty{$name}Test.xml\";\n        $config   = new ConfigDouble([\"--standard=$standard\"]"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.\"/SetProperty{$name}Test.xml\"",
                "line": 408,
                "context": "stStandard\\Sniffs\\SetProperty\\\\'.$name.'Sniff';\n\n        // Set up the ruleset.\n        $standard = __DIR__.\"/SetProperty{$name}Test.xml\";\n        $config   = new ConfigDouble([\"--standard=$standard\"]"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Property %s registered for sniff %s which does not support it'",
                "line": 124,
                "context": "eflectionObject($ruleset->sniffs[$sniffClass]))->hasProperty($propertyName);\n        $errorMsg    = sprintf('Property %s registered for sniff %s which does not support it', $propertyName, $sniffClass)"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $settings",
                "line": 240,
                "context": "ct call to the Ruleset::setSniffProperty() method\n     * sets the property correctly when using the new $settings array format.\n     *\n     * @return void\n     */\n    public function testDirectCallWit"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ExpandRulesetReferenceHomePathTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExpandRulesetReferenceHomePathTest.xml'",
                "line": 89,
                "context": "testHomePathRefGetsExpandedAndFindsSniff()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExpandRulesetReferenceHomePathTest.xml';\n        $config   = new ConfigDouble([\"--standard"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExpandRulesetReferenceHomePathFailTest.xml'",
                "line": 109,
                "context": "andedAndThrowsExceptionWhenPathIsInvalid()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExpandRulesetReferenceHomePathFailTest.xml';\n        $config   = new ConfigDouble([\"--stan"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ExplainTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExplainSingleSniffTest.xml'",
                "line": 105,
                "context": "  public function testExplainSingleSniff()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExplainSingleSniffTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\","
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExplainCustomRulesetTest.xml'",
                "line": 136,
                "context": "public function testExplainCustomRuleset()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExplainCustomRulesetTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.\"/ShowSniffDeprecationsTest.xml\"",
                "line": 182,
                "context": "function testExplainWithDeprecatedSniffs()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.\"/ShowSniffDeprecationsTest.xml\";\n        $config   = new ConfigDouble([\"--standard=$standar"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ProcessRulesetTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetInvalidNoSniffsDirTest.xml'",
                "line": 34,
                "context": "blic function testSniffsFileNotDirectory()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ProcessRulesetInvalidNoSniffsDirTest.xml';\n        $config   = new ConfigDouble([\"--standa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetAutoExpandSniffsDirectoryTest.xml'",
                "line": 53,
                "context": "c function testAutoExpandSniffsDirectory()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ProcessRulesetAutoExpandSniffsDirectoryTest.xml';\n        $config   = new ConfigDouble([\"-"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetExcludeSniffGroupTest.xml'",
                "line": 96,
                "context": "   public function testExcludeSniffGroup()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ProcessRulesetExcludeSniffGroupTest.xml';\n        $config   = new ConfigDouble([\"--standar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetMiscTest.xml'",
                "line": 254,
                "context": "        if (isset($ruleset) === false) {\n            // Set up the ruleset.\n            $standard = __DIR__.'/ProcessRulesetMiscTest.xml';\n            $config   = new ConfigDouble([\"--standard=$standa"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ProcessRulesetAutoloadTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetAutoloadTest.xml'",
                "line": 47,
                "context": "    $originallyIncludes = get_included_files();\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/ProcessRulesetAutoloadTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetAutoloadTest.xml'",
                "line": 105,
                "context": "    $originallyIncludes = get_included_files();\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/ProcessRulesetAutoloadTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetAutoloadFileNotFoundTest.xml'",
                "line": 157,
                "context": "->expectRuntimeExceptionMessage($exceptionMsg);\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/ProcessRulesetAutoloadFileNotFoundTest.xml';\n        $config   = new ConfigDouble([\"--stan"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ExpandRulesetReferenceInternalTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExpandRulesetReferenceInternalIgnoreTest.xml'",
                "line": 33,
                "context": "nction testInternalRefDoesNotGetExpanded()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExpandRulesetReferenceInternalIgnoreTest.xml';\n        $config   = new ConfigDouble([\"--st"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExpandRulesetReferenceInternalStandardTest.xml'",
                "line": 55,
                "context": "tion testInternalStandardDoesGetExpanded()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExpandRulesetReferenceInternalStandardTest.xml';\n        $config   = new ConfigDouble([\"--"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/PropertyTypeHandlingTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/PropertyTypeHandlingTest.xml'",
                "line": 247,
                "context": "    if (isset($sniffObject) === false) {\n            // Set up the ruleset.\n            $standard = __DIR__.'/PropertyTypeHandlingTest.xml';\n            $config   = new ConfigDouble([\"--standard=$stan"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/PropertyTypeHandlingInlineTest.xml'",
                "line": 277,
                "context": "    if (isset($sniffObject) === false) {\n            // Set up the ruleset.\n            $standard = __DIR__.'/PropertyTypeHandlingInlineTest.xml';\n            $config   = new ConfigDouble([\"--standard"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/PropertyTypeHandlingInline.inc'",
                "line": 289,
                "context": "            // Process the file with inline phpcs:set annotations.\n            $testFile = realpath(__DIR__.'/Fixtures/PropertyTypeHandlingInline.inc');\n            $this->assertNotFalse($testFile);\n\n"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/RuleInclusionTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/'",
                "line": 56,
                "context": "tializeConfigAndRuleset()\n    {\n        if (self::$standard === '') {\n            $standard       = __DIR__.'/'.basename(__FILE__, '.php').'.xml';\n            self::$standard = $standard;\n\n           "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ExpandSniffDirectoryTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ExpandSniffDirectoryTest.xml'",
                "line": 43,
                "context": "public function testExpandSniffDirectory()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ExpandSniffDirectoryTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Fixtures/DirectoryExpansion/.hiddenAbove/src/MyStandard/ruleset.xml'",
                "line": 47,
                "context": "-standard=$standard\"]);\n        $ruleset  = new Ruleset($config);\n\n        $expectedPathToRuleset = __DIR__.'/Fixtures/DirectoryExpansion/.hiddenAbove/src/MyStandard/ruleset.xml';\n        $expectedPat"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/'",
                "line": 57,
                "context": "rn void\n     */\n    protected function initializeConfigAndRuleset()\n    {\n        $this->standard = __DIR__.'/'.basename(__FILE__, '.php').'.xml';\n        $repoRootDir    = dirname(dirname(dirname(__D"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ShowSniffDeprecationsTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsTest.xml'",
                "line": 61,
                "context": " ],\n            'Standard using deprecated sniffs: Test Fixture' => [\n                'standard' => __DIR__.'/ShowSniffDeprecationsTest.xml',\n                'expected' => true,\n            ],\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsTest.xml'",
                "line": 109,
                "context": "          'Standard using deprecated sniffs; explain mode' => [\n                'standard'       => __DIR__.'/ShowSniffDeprecationsTest.xml',\n                'additionalArgs' => ['-e'],\n            ],"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsTest.xml'",
                "line": 113,
                "context": "          'Standard using deprecated sniffs; quiet mode'   => [\n                'standard'       => __DIR__.'/ShowSniffDeprecationsTest.xml',\n                'additionalArgs' => ['-q'],\n            ],"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsTest.xml'",
                "line": 155,
                "context": "ndard using deprecated sniffs; documentation is requested' => [\n                'standard'       => __DIR__.'/ShowSniffDeprecationsTest.xml',\n                'additionalArgs' => ['--generator=text'],\n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsTest.xml'",
                "line": 171,
                "context": "n testDeprecatedSniffsListDoesNotShowWhenSelectedSniffsAreNotDeprecated()\n    {\n        $standard = __DIR__.'/ShowSniffDeprecationsTest.xml';\n        $config   = new ConfigDouble(['.', \"--standard=$st"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsTest.xml'",
                "line": 217,
                "context": "n testDeprecatedSniffsListDoesNotShowWhenAllDeprecatedSniffsAreExcluded()\n    {\n        $standard = __DIR__.'/ShowSniffDeprecationsTest.xml';\n        $config   = new ConfigDouble(['.', \"--standard=$st"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsTest.xml'",
                "line": 271,
                "context": " * @return void\n     */\n    public function testDeprecatedSniffsWarning()\n    {\n        $standard = __DIR__.'/ShowSniffDeprecationsTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsReportWidthTest.xml'",
                "line": 342,
                "context": "IsRespected($reportWidth, $expectedOutput)\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ShowSniffDeprecationsReportWidthTest.xml';\n        $config   = new ConfigDouble(['.', \"--s"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ShowSniffDeprecationsOrderTest.xml'",
                "line": 446,
                "context": "tDeprecatedSniffsAreListedAlphabetically()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/ShowSniffDeprecationsOrderTest.xml';\n        $config   = new ConfigDouble([\"--standard=$st"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/'",
                "line": 496,
                "context": "pectRuntimeExceptionMessage($exceptionMessage);\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/'.$standard;\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n        $rule"
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$sniffFile.'.php'",
                "line": 195,
                "context": "ace('\\\\', DIRECTORY_SEPARATOR, $sniffName);\n            $sniffFile    = __DIR__.DIRECTORY_SEPARATOR.$sniffFile.'.php';\n            $sniffFiles[] = $sniffFile;\n        }\n\n        $ruleset->registerSnif"
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$sniffFile.'.php'",
                "line": 244,
                "context": "ace('\\\\', DIRECTORY_SEPARATOR, $sniffName);\n            $sniffFile    = __DIR__.DIRECTORY_SEPARATOR.$sniffFile.'.php';\n            $sniffFiles[] = $sniffFile;\n        }\n\n        $ruleset->registerSnif"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ConstructorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ConstructorNoSniffsTest.xml'",
                "line": 282,
                "context": "return void\n     */\n    public function testNoSniffsRegisteredException()\n    {\n        $standard = __DIR__.'/ConstructorNoSniffsTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\""
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/GetIncludePatternsTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.\"/GetIncludePatternsTest.xml\"",
                "line": 42,
                "context": "function initializeConfigAndRuleset()\n    {\n        // Set up the ruleset.\n        $standard      = __DIR__.\"/GetIncludePatternsTest.xml\";\n        $config        = new ConfigDouble([\"--standard=$stand"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/RegisterSniffsRejectsInvalidSniffTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/'",
                "line": 38,
                "context": "ingInterfaceMethod($standard, $methodName)\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/'.$standard;\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n\n        $reg"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/PopulateTokenListenersTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/PopulateTokenListenersTest.xml'",
                "line": 46,
                "context": "(isset(self::$ruleset) === false) {\n            // Set up the ruleset.\n            $standard      = __DIR__.'/PopulateTokenListenersTest.xml';\n            $config        = new ConfigDouble([\"--standar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/PopulateTokenListenersRegisterNoArrayTest.xml'",
                "line": 61,
                "context": "blic function testSniffWhereRegisterDoesNotReturnAnArrayThrowsException()\n    {\n        $standard = __DIR__.'/PopulateTokenListenersRegisterNoArrayTest.xml';\n        $config   = new ConfigDouble([\"--s"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Found the %s sniff registered for token %s'",
                "line": 92,
                "context": "  $this->assertArrayNotHasKey(\n                $target,\n                $listeners,\n                sprintf('Found the %s sniff registered for token %s', $target, Tokens::tokenName($token))\n          "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('The token constant %s is not registered to the listeners array'",
                "line": 367,
                "context": "his->assertArrayHasKey(\n            $token,\n            self::$ruleset->tokenListeners,\n            sprintf('The token constant %s is not registered to the listeners array', Tokens::tokenName($token))"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('The sniff class %s is not registered for token %s'",
                "line": 372,
                "context": "rayHasKey(\n            $sniffClass,\n            self::$ruleset->tokenListeners[$token],\n            sprintf('The sniff class %s is not registered for token %s', $sniffClass, Tokens::tokenName($token))"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('The token constant %s is not registered to the listeners array'",
                "line": 501,
                "context": "his->assertArrayHasKey(\n            $token,\n            self::$ruleset->tokenListeners,\n            sprintf('The token constant %s is not registered to the listeners array', Tokens::tokenName($token))"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('The sniff class %s is not registered for token %s'",
                "line": 506,
                "context": "rayHasKey(\n            $sniffClass,\n            self::$ruleset->tokenListeners[$token],\n            sprintf('The sniff class %s is not registered for token %s', $sniffClass, Tokens::tokenName($token))"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/ProcessRulesetBrokenRulesetTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetBrokenRulesetEmptyFileTest.xml'",
                "line": 41,
                "context": "  * @return void\n     */\n    public function testBrokenRulesetEmptyFile()\n    {\n        $standard = __DIR__.'/ProcessRulesetBrokenRulesetEmptyFileTest.xml';\n        $config   = new ConfigDouble([\"--st"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetBrokenRulesetSingleErrorTest.xml'",
                "line": 61,
                "context": "* @return void\n     */\n    public function testBrokenRulesetSingleError()\n    {\n        $standard = __DIR__.'/ProcessRulesetBrokenRulesetSingleErrorTest.xml';\n        $config   = new ConfigDouble([\"--"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/ProcessRulesetBrokenRulesetMultiErrorTest.xml'",
                "line": 81,
                "context": " * @return void\n     */\n    public function testBrokenRulesetMultiError()\n    {\n        $standard = __DIR__.'/ProcessRulesetBrokenRulesetMultiErrorTest.xml';\n        $config   = new ConfigDouble([\"--s"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Generators/TextTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/NoDocsTest.xml'",
                "line": 64,
                "context": "   return [\n            'Standard without docs'            => [\n                'standard'       => __DIR__.'/NoDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutput"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 65,
                "context": "\n                'standard'       => __DIR__.'/NoDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Standard with one doc f"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 68,
                "context": "         ],\n            'Standard with one doc file'       => [\n                'standard'       => __DIR__.'/OneDocTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutput"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputOneDoc.txt'",
                "line": 69,
                "context": "\n                'standard'       => __DIR__.'/OneDocTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputOneDoc.txt',\n            ],\n            'Standard with multiple"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/StructureDocsTest.xml'",
                "line": 72,
                "context": "         ],\n            'Standard with multiple doc files' => [\n                'standard'       => __DIR__.'/StructureDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/Expecte"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStructureDocs.txt'",
                "line": 73,
                "context": "          'standard'       => __DIR__.'/StructureDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStructureDocs.txt',\n            ],\n        ];\n\n    }//end dataD"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/AllValidDocsTest.xml'",
                "line": 93,
                "context": "testDocSpecifics($sniffs, $pathToExpected)\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/AllValidDocsTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\", \"--sn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitleCase.txt'",
                "line": 130,
                "context": "'         => 'StandardWithDocs.Content.DocumentationTitleCase',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitleCase.txt',\n            ],\n            'Docume"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitleLength.txt'",
                "line": 134,
                "context": "        => 'StandardWithDocs.Content.DocumentationTitleLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitleLength.txt',\n            ],\n            'Docu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitlePCREFallback.txt'",
                "line": 138,
                "context": "  => 'StandardWithDocs.Content.DocumentationTitlePCREFallback',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitlePCREFallback.txt',\n            ],\n           "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardBlankLines.txt'",
                "line": 142,
                "context": "iffs'         => 'StandardWithDocs.Content.StandardBlankLines',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardBlankLines.txt',\n            ],\n            'Standard E"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardEncoding.txt'",
                "line": 146,
                "context": "sniffs'         => 'StandardWithDocs.Content.StandardEncoding',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardEncoding.txt',\n            ],\n            'Standard Ele"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardIndent.txt'",
                "line": 150,
                "context": " 'sniffs'         => 'StandardWithDocs.Content.StandardIndent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardIndent.txt',\n            ],\n            'Standard Eleme"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardLineWrapping.txt'",
                "line": 154,
                "context": "fs'         => 'StandardWithDocs.Content.StandardLineWrapping',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardLineWrapping.txt',\n            ],\n            'Code Tit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeTitleLineWrapping.txt'",
                "line": 158,
                "context": "s'         => 'StandardWithDocs.Content.CodeTitleLineWrapping',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeTitleLineWrapping.txt',\n            ],\n            'Code Ti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeTitleWhitespace.txt'",
                "line": 162,
                "context": "ffs'         => 'StandardWithDocs.Content.CodeTitleWhitespace',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeTitleWhitespace.txt',\n            ],\n            'Code Comp"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonBlankLines.txt'",
                "line": 166,
                "context": "        => 'StandardWithDocs.Content.CodeComparisonBlankLines',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonBlankLines.txt',\n            ],\n            'Code"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonBlockLength.txt'",
                "line": 170,
                "context": "       => 'StandardWithDocs.Content.CodeComparisonBlockLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonBlockLength.txt',\n            ],\n            'Cod"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonEncoding.txt'",
                "line": 174,
                "context": "'         => 'StandardWithDocs.Content.CodeComparisonEncoding',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonEncoding.txt',\n            ],\n            'Code C"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonLineLength.txt'",
                "line": 178,
                "context": "        => 'StandardWithDocs.Content.CodeComparisonLineLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonLineLength.txt',\n            ],\n            'Unsu"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 182,
                "context": "         => 'StandardWithDocs.Unsupported.ElementAtWrongLevel',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Unsupported: one correc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputUnsupportedOneElmAtWrongLevel.txt'",
                "line": 186,
                "context": "'         => 'StandardWithDocs.Unsupported.OneElmAtWrongLevel',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputUnsupportedOneElmAtWrongLevel.txt',\n            ],\n            "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputUnsupportedSuperfluousCodeElement.txt'",
                "line": 190,
                "context": "      => 'StandardWithDocs.Unsupported.SuperfluousCodeElement',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputUnsupportedSuperfluousCodeElement.txt',\n            ],\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 194,
                "context": "iffs'         => 'StandardWithDocs.Unsupported.UnknownElement',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Invalid: code compariso"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMismatchedCodeElms.txt'",
                "line": 198,
                "context": "=> 'StandardWithDocs.Invalid.CodeComparisonMismatchedCodeElms',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMismatchedCodeElms.txt',\n            ],\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMissingCodeElm.txt'",
                "line": 202,
                "context": "    => 'StandardWithDocs.Invalid.CodeComparisonMissingCodeElm',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMissingCodeElm.txt',\n            ],\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoCode.txt'",
                "line": 206,
                "context": "fs'         => 'StandardWithDocs.Invalid.CodeComparisonNoCode',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoCode.txt',\n            ],\n            'I"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoContent.txt'",
                "line": 210,
                "context": "         => 'StandardWithDocs.Invalid.CodeComparisonNoContent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoContent.txt',\n            ],\n           "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonOneEmptyCodeElm.txt'",
                "line": 214,
                "context": "   => 'StandardWithDocs.Invalid.CodeComparisonOneEmptyCodeElm',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonOneEmptyCodeElm.txt',\n            ],\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonTwoEmptyCodeElms.txt'",
                "line": 218,
                "context": "  => 'StandardWithDocs.Invalid.CodeComparisonTwoEmptyCodeElms',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonTwoEmptyCodeElms.txt',\n            ],\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleEmpty.txt'",
                "line": 222,
                "context": " 'sniffs'         => 'StandardWithDocs.Invalid.CodeTitleEmpty',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleEmpty.txt',\n            ],\n            'Invalid"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleMissing.txt'",
                "line": 226,
                "context": "sniffs'         => 'StandardWithDocs.Invalid.CodeTitleMissing',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleMissing.txt',\n            ],\n            'Inval"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleEmpty.txt'",
                "line": 230,
                "context": "         => 'StandardWithDocs.Invalid.DocumentationTitleEmpty',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleEmpty.txt',\n            ],\n           "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleMissing.txt'",
                "line": 234,
                "context": "       => 'StandardWithDocs.Invalid.DocumentationTitleMissing',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleMissing.txt',\n            ],\n         "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidStandardNoContent.txt'",
                "line": 238,
                "context": "niffs'         => 'StandardWithDocs.Invalid.StandardNoContent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidStandardNoContent.txt',\n            ],\n        ];\n\n    }"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Generators/HTMLTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/NoDocsTest.xml'",
                "line": 64,
                "context": "   return [\n            'Standard without docs'            => [\n                'standard'       => __DIR__.'/NoDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutput"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 65,
                "context": "\n                'standard'       => __DIR__.'/NoDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Standard with one doc f"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 68,
                "context": "         ],\n            'Standard with one doc file'       => [\n                'standard'       => __DIR__.'/OneDocTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutput"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputOneDoc.html'",
                "line": 69,
                "context": "\n                'standard'       => __DIR__.'/OneDocTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputOneDoc.html',\n            ],\n            'Standard with multipl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/StructureDocsTest.xml'",
                "line": 72,
                "context": "         ],\n            'Standard with multiple doc files' => [\n                'standard'       => __DIR__.'/StructureDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/Expecte"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStructureDocs.html'",
                "line": 73,
                "context": "          'standard'       => __DIR__.'/StructureDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStructureDocs.html',\n            ],\n        ];\n\n    }//end data"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/AllValidDocsTest.xml'",
                "line": 93,
                "context": "testDocSpecifics($sniffs, $pathToExpected)\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/AllValidDocsTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\", \"--sn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitleCase.html'",
                "line": 130,
                "context": "'         => 'StandardWithDocs.Content.DocumentationTitleCase',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitleCase.html',\n            ],\n            'Docum"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitleLength.html'",
                "line": 134,
                "context": "        => 'StandardWithDocs.Content.DocumentationTitleLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitleLength.html',\n            ],\n            'Doc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitlePCREFallback.html'",
                "line": 138,
                "context": "  => 'StandardWithDocs.Content.DocumentationTitlePCREFallback',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitlePCREFallback.html',\n            ],\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardBlankLines.html'",
                "line": 142,
                "context": "iffs'         => 'StandardWithDocs.Content.StandardBlankLines',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardBlankLines.html',\n            ],\n            'Standard "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardEncoding.html'",
                "line": 146,
                "context": "sniffs'         => 'StandardWithDocs.Content.StandardEncoding',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardEncoding.html',\n            ],\n            'Standard El"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardIndent.html'",
                "line": 150,
                "context": " 'sniffs'         => 'StandardWithDocs.Content.StandardIndent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardIndent.html',\n            ],\n            'Standard Elem"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardLineWrapping.html'",
                "line": 154,
                "context": "fs'         => 'StandardWithDocs.Content.StandardLineWrapping',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardLineWrapping.html',\n            ],\n            'Code Ti"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeTitleLineWrapping.html'",
                "line": 158,
                "context": "s'         => 'StandardWithDocs.Content.CodeTitleLineWrapping',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeTitleLineWrapping.html',\n            ],\n            'Code T"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeTitleWhitespace.html'",
                "line": 162,
                "context": "ffs'         => 'StandardWithDocs.Content.CodeTitleWhitespace',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeTitleWhitespace.html',\n            ],\n            'Code Com"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonBlankLines.html'",
                "line": 166,
                "context": "        => 'StandardWithDocs.Content.CodeComparisonBlankLines',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonBlankLines.html',\n            ],\n            'Cod"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonBlockLength.html'",
                "line": 170,
                "context": "       => 'StandardWithDocs.Content.CodeComparisonBlockLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonBlockLength.html',\n            ],\n            'Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonEncoding.html'",
                "line": 174,
                "context": "'         => 'StandardWithDocs.Content.CodeComparisonEncoding',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonEncoding.html',\n            ],\n            'Code "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonLineLength.html'",
                "line": 178,
                "context": "        => 'StandardWithDocs.Content.CodeComparisonLineLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonLineLength.html',\n            ],\n            'Uns"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 182,
                "context": "         => 'StandardWithDocs.Unsupported.ElementAtWrongLevel',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Unsupported: one correc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputUnsupportedOneElmAtWrongLevel.html'",
                "line": 186,
                "context": "'         => 'StandardWithDocs.Unsupported.OneElmAtWrongLevel',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputUnsupportedOneElmAtWrongLevel.html',\n            ],\n           "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputUnsupportedSuperfluousCodeElement.html'",
                "line": 190,
                "context": "      => 'StandardWithDocs.Unsupported.SuperfluousCodeElement',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputUnsupportedSuperfluousCodeElement.html',\n            ],\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 194,
                "context": "iffs'         => 'StandardWithDocs.Unsupported.UnknownElement',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Invalid: code compariso"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMismatchedCodeElms.html'",
                "line": 198,
                "context": "=> 'StandardWithDocs.Invalid.CodeComparisonMismatchedCodeElms',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMismatchedCodeElms.html',\n            ],\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMissingCodeElm.html'",
                "line": 202,
                "context": "    => 'StandardWithDocs.Invalid.CodeComparisonMissingCodeElm',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMissingCodeElm.html',\n            ],\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoCode.html'",
                "line": 206,
                "context": "fs'         => 'StandardWithDocs.Invalid.CodeComparisonNoCode',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoCode.html',\n            ],\n            '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoContent.html'",
                "line": 210,
                "context": "         => 'StandardWithDocs.Invalid.CodeComparisonNoContent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoContent.html',\n            ],\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonOneEmptyCodeElm.html'",
                "line": 214,
                "context": "   => 'StandardWithDocs.Invalid.CodeComparisonOneEmptyCodeElm',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonOneEmptyCodeElm.html',\n            ],\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonTwoEmptyCodeElms.html'",
                "line": 218,
                "context": "  => 'StandardWithDocs.Invalid.CodeComparisonTwoEmptyCodeElms',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonTwoEmptyCodeElms.html',\n            ],\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleEmpty.html'",
                "line": 222,
                "context": " 'sniffs'         => 'StandardWithDocs.Invalid.CodeTitleEmpty',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleEmpty.html',\n            ],\n            'Invali"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleMissing.html'",
                "line": 226,
                "context": "sniffs'         => 'StandardWithDocs.Invalid.CodeTitleMissing',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleMissing.html',\n            ],\n            'Inva"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleEmpty.html'",
                "line": 230,
                "context": "         => 'StandardWithDocs.Invalid.DocumentationTitleEmpty',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleEmpty.html',\n            ],\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleMissing.html'",
                "line": 234,
                "context": "       => 'StandardWithDocs.Invalid.DocumentationTitleMissing',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleMissing.html',\n            ],\n        "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidStandardNoContent.html'",
                "line": 238,
                "context": "niffs'         => 'StandardWithDocs.Invalid.StandardNoContent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidStandardNoContent.html',\n            ],\n        ];\n\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/AnchorLinksTest.xml'",
                "line": 253,
                "context": "  */\n    public function testAnchorLinks()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/AnchorLinksTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitleToAnchorSlug.html'",
                "line": 257,
                "context": "ble([\"--standard=$standard\"]);\n        $ruleset  = new Ruleset($config);\n\n        $pathToExpected = __DIR__.'/Expectations/ExpectedOutputDocumentationTitleToAnchorSlug.html';\n        $expected       ="
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 279,
                "context": "d\n     */\n    public function testFooter()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/OneDocTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n        $"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 314,
                "context": "()\n    {\n        $expected = error_reporting();\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/OneDocTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n        $"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 353,
                "context": "  $originalIni = @ini_set('date.timezone', '');\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/OneDocTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n        $"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Generators/MarkdownTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/NoDocsTest.xml'",
                "line": 64,
                "context": "   return [\n            'Standard without docs'            => [\n                'standard'       => __DIR__.'/NoDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutput"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 65,
                "context": "\n                'standard'       => __DIR__.'/NoDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Standard with one doc f"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 68,
                "context": "         ],\n            'Standard with one doc file'       => [\n                'standard'       => __DIR__.'/OneDocTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutput"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputOneDoc.md'",
                "line": 69,
                "context": "\n                'standard'       => __DIR__.'/OneDocTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputOneDoc.md',\n            ],\n            'Standard with multiple "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/StructureDocsTest.xml'",
                "line": 72,
                "context": "         ],\n            'Standard with multiple doc files' => [\n                'standard'       => __DIR__.'/StructureDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/Expecte"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStructureDocs.md'",
                "line": 73,
                "context": "          'standard'       => __DIR__.'/StructureDocsTest.xml',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStructureDocs.md',\n            ],\n        ];\n\n    }//end dataDo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/AllValidDocsTest.xml'",
                "line": 93,
                "context": "testDocSpecifics($sniffs, $pathToExpected)\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/AllValidDocsTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\", \"--sn"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitleCase.md'",
                "line": 130,
                "context": "'         => 'StandardWithDocs.Content.DocumentationTitleCase',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitleCase.md',\n            ],\n            'Documen"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitleLength.md'",
                "line": 134,
                "context": "        => 'StandardWithDocs.Content.DocumentationTitleLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitleLength.md',\n            ],\n            'Docum"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputDocumentationTitlePCREFallback.md'",
                "line": 138,
                "context": "  => 'StandardWithDocs.Content.DocumentationTitlePCREFallback',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputDocumentationTitlePCREFallback.md',\n            ],\n            "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardBlankLines.md'",
                "line": 142,
                "context": "iffs'         => 'StandardWithDocs.Content.StandardBlankLines',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardBlankLines.md',\n            ],\n            'Standard El"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardEncoding.md'",
                "line": 146,
                "context": "sniffs'         => 'StandardWithDocs.Content.StandardEncoding',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardEncoding.md',\n            ],\n            'Standard Elem"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardIndent.md'",
                "line": 150,
                "context": " 'sniffs'         => 'StandardWithDocs.Content.StandardIndent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardIndent.md',\n            ],\n            'Standard Elemen"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputStandardLineWrapping.md'",
                "line": 154,
                "context": "fs'         => 'StandardWithDocs.Content.StandardLineWrapping',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputStandardLineWrapping.md',\n            ],\n            'Code Titl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeTitleLineWrapping.md'",
                "line": 158,
                "context": "s'         => 'StandardWithDocs.Content.CodeTitleLineWrapping',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeTitleLineWrapping.md',\n            ],\n            'Code Tit"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeTitleWhitespace.md'",
                "line": 162,
                "context": "ffs'         => 'StandardWithDocs.Content.CodeTitleWhitespace',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeTitleWhitespace.md',\n            ],\n            'Code Compa"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonBlankLines.md'",
                "line": 166,
                "context": "        => 'StandardWithDocs.Content.CodeComparisonBlankLines',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonBlankLines.md',\n            ],\n            'Code "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonBlockLength.md'",
                "line": 170,
                "context": "       => 'StandardWithDocs.Content.CodeComparisonBlockLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonBlockLength.md',\n            ],\n            'Code"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonEncoding.md'",
                "line": 174,
                "context": "'         => 'StandardWithDocs.Content.CodeComparisonEncoding',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonEncoding.md',\n            ],\n            'Code Co"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputCodeComparisonLineLength.md'",
                "line": 178,
                "context": "        => 'StandardWithDocs.Content.CodeComparisonLineLength',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputCodeComparisonLineLength.md',\n            ],\n            'Unsup"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 182,
                "context": "         => 'StandardWithDocs.Unsupported.ElementAtWrongLevel',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Unsupported: one correc"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputUnsupportedOneElmAtWrongLevel.md'",
                "line": 186,
                "context": "'         => 'StandardWithDocs.Unsupported.OneElmAtWrongLevel',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputUnsupportedOneElmAtWrongLevel.md',\n            ],\n            '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputUnsupportedSuperfluousCodeElement.md'",
                "line": 190,
                "context": "      => 'StandardWithDocs.Unsupported.SuperfluousCodeElement',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputUnsupportedSuperfluousCodeElement.md',\n            ],\n         "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputEmpty.txt'",
                "line": 194,
                "context": "iffs'         => 'StandardWithDocs.Unsupported.UnknownElement',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputEmpty.txt',\n            ],\n            'Invalid: code compariso"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMismatchedCodeElms.md'",
                "line": 198,
                "context": "=> 'StandardWithDocs.Invalid.CodeComparisonMismatchedCodeElms',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMismatchedCodeElms.md',\n            ],\n   "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMissingCodeElm.md'",
                "line": 202,
                "context": "    => 'StandardWithDocs.Invalid.CodeComparisonMissingCodeElm',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonMissingCodeElm.md',\n            ],\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoCode.md'",
                "line": 206,
                "context": "fs'         => 'StandardWithDocs.Invalid.CodeComparisonNoCode',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoCode.md',\n            ],\n            'In"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoContent.md'",
                "line": 210,
                "context": "         => 'StandardWithDocs.Invalid.CodeComparisonNoContent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonNoContent.md',\n            ],\n            "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonOneEmptyCodeElm.md'",
                "line": 214,
                "context": "   => 'StandardWithDocs.Invalid.CodeComparisonOneEmptyCodeElm',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonOneEmptyCodeElm.md',\n            ],\n      "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonTwoEmptyCodeElms.md'",
                "line": 218,
                "context": "  => 'StandardWithDocs.Invalid.CodeComparisonTwoEmptyCodeElms',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeComparisonTwoEmptyCodeElms.md',\n            ],\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleEmpty.md'",
                "line": 222,
                "context": " 'sniffs'         => 'StandardWithDocs.Invalid.CodeTitleEmpty',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleEmpty.md',\n            ],\n            'Invalid:"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleMissing.md'",
                "line": 226,
                "context": "sniffs'         => 'StandardWithDocs.Invalid.CodeTitleMissing',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidCodeTitleMissing.md',\n            ],\n            'Invali"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleEmpty.md'",
                "line": 230,
                "context": "         => 'StandardWithDocs.Invalid.DocumentationTitleEmpty',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleEmpty.md',\n            ],\n            "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleMissing.md'",
                "line": 234,
                "context": "       => 'StandardWithDocs.Invalid.DocumentationTitleMissing',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidDocumentationTitleMissing.md',\n            ],\n          "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/Expectations/ExpectedOutputInvalidStandardNoContent.md'",
                "line": 238,
                "context": "niffs'         => 'StandardWithDocs.Invalid.StandardNoContent',\n                'pathToExpected' => __DIR__.'/Expectations/ExpectedOutputInvalidStandardNoContent.md',\n            ],\n        ];\n\n    }/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 253,
                "context": "d\n     */\n    public function testFooter()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/OneDocTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n        $"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 286,
                "context": "()\n    {\n        $expected = error_reporting();\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/OneDocTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n        $"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 325,
                "context": "  $originalIni = @ini_set('date.timezone', '');\n\n        // Set up the ruleset.\n        $standard = __DIR__.'/OneDocTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n        $"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Generators/GeneratorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/NoDocsTest.xml'",
                "line": 61,
                "context": "        return [\n            'Standard without docs'             => [\n                'standard' => __DIR__.'/NoDocsTest.xml',\n                'expected' => [],\n            ],\n            'Standard wi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/NoValidDocsTest.xml'",
                "line": 65,
                "context": ",\n            ],\n            'Standard with an invalid doc file' => [\n                'standard' => __DIR__.'/NoValidDocsTest.xml',\n                'expected' => [\n                    $pathToDocsInFix"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 71,
                "context": ",\n            ],\n            'Standard with one doc file'        => [\n                'standard' => __DIR__.'/OneDocTest.xml',\n                'expected' => [\n                    $pathToDocsInFixture."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/StructureDocsTest.xml'",
                "line": 77,
                "context": ",\n            ],\n            'Standard with multiple doc files'  => [\n                'standard' => __DIR__.'/StructureDocsTest.xml',\n                'expected' => [\n                    $pathToDocsInF"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/NoValidDocsTest.xml'",
                "line": 104,
                "context": "tGeneratingInvalidDocsResultsInException()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/NoValidDocsTest.xml';\n        $config   = new ConfigDouble([\"--standard=$standard\"]);\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/NoDocsTest.xml'",
                "line": 178,
                "context": "\n        return [\n            'Standard without docs'            => [\n                'standard' => __DIR__.'/NoDocsTest.xml',\n                'expected' => '',\n            ],\n            'Standard wi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/OneDocTest.xml'",
                "line": 182,
                "context": "',\n            ],\n            'Standard with one doc file'       => [\n                'standard' => __DIR__.'/OneDocTest.xml',\n                'expected' => 'One Standard Block, No Code'.PHP_EOL,\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/StructureDocsTest.xml'",
                "line": 186,
                "context": "L,\n            ],\n            'Standard with multiple doc files' => [\n                'standard' => __DIR__.'/StructureDocsTest.xml',\n                'expected' => $multidocExpected,\n            ],\n  "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/AllValidDocsTest.xml'",
                "line": 203,
                "context": " function testGetTitleFallbackToFilename()\n    {\n        // Set up the ruleset.\n        $standard = __DIR__.'/AllValidDocsTest.xml';\n        $sniffs   = 'StandardWithDocs.Content.DocumentationTitlePCR"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/AbstractMethodUnitTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Failed to find the test marker: %s in test case file %s'",
                "line": 209,
                "context": "ring\n        );\n\n        if ($comment === false) {\n            throw new Exception(\n                sprintf('Failed to find the test marker: %s in test case file %s', $commentString, $phpcsFile->getFi"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Autoloader/DetermineLoadedClassTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/TestFiles/Sub/C.inc'",
                "line": 33,
                "context": "    *\n     * @return void\n     */\n    public static function includeFixture()\n    {\n        include __DIR__.'/TestFiles/Sub/C.inc';\n\n    }//end includeFixture()\n\n\n    /**\n     * Test for when class li"
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../autoload.php'",
                "line": 41,
                "context": "HP_CODESNIFFER_VERBOSITY') === false) {\n    define('PHP_CODESNIFFER_VERBOSITY', 0);\n}\n\nrequire_once __DIR__.'/../autoload.php';\n\n$tokens = new \\PHP_CodeSniffer\\Util\\Tokens();\n\n// Compatibility for PHP"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit_Framework_TestSuite'",
                "line": 46,
                "context": "$tokens = new \\PHP_CodeSniffer\\Util\\Tokens();\n\n// Compatibility for PHPUnit < 6 and PHPUnit 6+.\nif (class_exists('PHPUnit_Framework_TestSuite') === true && class_exists('PHPUnit\\Framework\\TestSuite') "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit\\Framework\\TestSuite'",
                "line": 46,
                "context": "ibility for PHPUnit < 6 and PHPUnit 6+.\nif (class_exists('PHPUnit_Framework_TestSuite') === true && class_exists('PHPUnit\\Framework\\TestSuite') === false) {\n    class_alias('PHPUnit_Framework_TestSuit"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit_Framework_TestCase'",
                "line": 50,
                "context": "= false) {\n    class_alias('PHPUnit_Framework_TestSuite', 'PHPUnit'.'\\Framework\\TestSuite');\n}\n\nif (class_exists('PHPUnit_Framework_TestCase') === true && class_exists('PHPUnit\\Framework\\TestCase') =="
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit\\Framework\\TestCase'",
                "line": 50,
                "context": "', 'PHPUnit'.'\\Framework\\TestSuite');\n}\n\nif (class_exists('PHPUnit_Framework_TestCase') === true && class_exists('PHPUnit\\Framework\\TestCase') === false) {\n    class_alias('PHPUnit_Framework_TestCase'"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit_TextUI_TestRunner'",
                "line": 54,
                "context": "=== false) {\n    class_alias('PHPUnit_Framework_TestCase', 'PHPUnit'.'\\Framework\\TestCase');\n}\n\nif (class_exists('PHPUnit_TextUI_TestRunner') === true && class_exists('PHPUnit\\TextUI\\TestRunner') === "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit\\TextUI\\TestRunner'",
                "line": 54,
                "context": "se', 'PHPUnit'.'\\Framework\\TestCase');\n}\n\nif (class_exists('PHPUnit_TextUI_TestRunner') === true && class_exists('PHPUnit\\TextUI\\TestRunner') === false) {\n    class_alias('PHPUnit_TextUI_TestRunner', "
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit_Framework_TestResult'",
                "line": 58,
                "context": ") === false) {\n    class_alias('PHPUnit_TextUI_TestRunner', 'PHPUnit'.'\\TextUI\\TestRunner');\n}\n\nif (class_exists('PHPUnit_Framework_TestResult') === true && class_exists('PHPUnit\\Framework\\TestResult'"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHPUnit\\Framework\\TestResult'",
                "line": 58,
                "context": "', 'PHPUnit'.'\\TextUI\\TestRunner');\n}\n\nif (class_exists('PHPUnit_Framework_TestResult') === true && class_exists('PHPUnit\\Framework\\TestResult') === false) {\n    class_alias('PHPUnit_Framework_TestRes"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 77,
                "context": "S']);\n    if (empty($GLOBALS['PHP_CODESNIFFER_SNIFF_CASE_FILES']) === false) {\n        $files     = call_user_func_array('array_merge', $GLOBALS['PHP_CODESNIFFER_SNIFF_CASE_FILES']);\n        $files   "
            }
        ],
        "vendor/squizlabs/php_codesniffer/scripts/build-phar.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../src'",
                "line": 107,
                "context": "\n    /*\n        Add the files.\n    */\n\n    echo \"\\t=> adding files... \";\n\n    $srcDir    = realpath(__DIR__.'/../src');\n    $srcDirLen = strlen($srcDir);\n\n    $rdi = new RecursiveDirectoryIterator($sr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../autoload.php'",
                "line": 142,
                "context": "    // Add autoloader.\n    $phar->addFromString('autoload.php', stripWhitespaceAndComments(realpath(__DIR__.'/../autoload.php'), $config));\n\n    // Add licence file.\n    $phar->addFile(realpath(__DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/../licence.txt'",
                "line": 145,
                "context": "lpath(__DIR__.'/../autoload.php'), $config));\n\n    // Add licence file.\n    $phar->addFile(realpath(__DIR__.'/../licence.txt'), 'licence.txt');\n\n    echo 'done'.PHP_EOL;\n    echo \"\\t   Added \".$fileCo"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Filters/Filter.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $filterClass",
                "line": 142,
                "context": "blic function getChildren()\n    {\n        $filterClass = get_called_class();\n        $children    = new $filterClass(\n            new RecursiveDirectoryIterator($this->current(), (RecursiveDirectoryIt"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Ruleset.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $sniffClass",
                "line": 1455,
                "context": "ffObject) {\n            $this->sniffs[$sniffClass] = null;\n            $this->sniffs[$sniffClass] = new $sniffClass();\n\n            $sniffCode = Common::getSniffCode($sniffClass);\n            $this->s"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Files/File.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Internal.ParseError.%sHasMemberVar'",
                "line": 1876,
                "context": "     $error = 'Possible parse error: %ss may not include member vars';\n                    $code  = sprintf('Internal.ParseError.%sHasMemberVar', ucfirst($this->tokens[$ptr]['content']));\n            "
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $tokenizerClass",
                "line": 578,
                "context": "kenizerClass  = 'PHP_CodeSniffer\\Tokenizers\\\\'.$this->tokenizerType;\n            $this->tokenizer = new $tokenizerClass($this->content, $this->config, $this->eolChar);\n            $this->tokens    = $"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Files/FileList.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $filterClass",
                "line": 90,
                "context": "veDirectoryIterator::SKIP_DOTS | FilesystemIterator::FOLLOW_SYMLINKS));\n                $filter   = new $filterClass($di, $path, $config, $ruleset);\n                $iterator = new RecursiveIteratorIt"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $filterClass",
                "line": 131,
                "context": "is->getFilterClass();\n\n        $di       = new RecursiveArrayIterator([$path]);\n        $filter   = new $filterClass($di, $path, $this->config, $this->ruleset);\n        $iterator = new RecursiveIterat"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Reporter.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('PHP_CodeSniffer\\Reports\\\\'",
                "line": 117,
                "context": "        }\n\n                $reportClassName = Autoload::loadFile($filename);\n            } else if (class_exists('PHP_CodeSniffer\\Reports\\\\'.ucfirst($type)) === true) {\n                // PHPCS native"
            },
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $reportClassName",
                "line": 145,
                "context": ";\n                throw new DeepExitException($error, 3);\n            }\n\n            $reportClass = new $reportClassName();\n            if (($reportClass instanceof Report) === false) {\n              "
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Runner.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $class",
                "line": 98,
                "context": "ass     = 'PHP_CodeSniffer\\Generators\\\\'.$this->config->generator;\n                    $generator = new $class($ruleset);\n                    $generator->generate();\n                }\n\n               "
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Standards/PEAR/Sniffs/Commenting/FileCommentSniff.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 285,
                "context": "od) === true) {\n                    // Process each tag if a method is defined.\n                    call_user_func([$this, $method], $phpcsFile, $tagTokens[$tag]);\n                }\n            }\n\n   "
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Standards/Generic/Sniffs/Strings/UnnecessaryHeredocSniff.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"<?php <<<EOD\\n%s\\nEOD;\\n?>\"",
                "line": 58,
                "context": "+) {\n            $body .= $tokens[$i]['content'];\n        }\n\n        $tokenizedBody = token_get_all(sprintf(\"<?php <<<EOD\\n%s\\nEOD;\\n?>\", $body));\n        foreach ($tokenizedBody as $ptr => $bodyToken"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Standards/Generic/Sniffs/CodeAnalysis/UnusedFunctionParameterSniff.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('<?php %s;?>'",
                "line": 229,
                "context": "      break;\n                    }\n                }\n\n                $stringTokens = token_get_all(sprintf('<?php %s;?>', $content));\n                foreach ($stringTokens as $stringPtr => $stringTo"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Standards/Squiz/Sniffs/PHP/CommentedOutCodeSniff.php": [
            {
                "pattern": "new\\s+\\$[a-zA-Z_]\\w*",
                "match": "new $tokenizerClass",
                "line": 181,
                "context": "try {\n            $tokenizerClass = get_class($phpcsFile->tokenizer);\n            $tokenizer      = new $tokenizerClass($content, $phpcsFile->config, $phpcsFile->eolChar);\n            $stringTokens   "
            }
        ],
        "vendor/sebastian/comparator/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/comparator/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/comparator/src/ArrayComparator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"    %s => %s\\n\"",
                "line": 58,
                "context": "g[$key]);\n\n            if (!array_key_exists($key, $actual)) {\n                $expectedAsString .= sprintf(\n                    \"    %s => %s\\n\",\n                    $exporter->export($key),\n        "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"    %s => %s\\n\"",
                "line": 75,
                "context": "ctual[$key], $delta, $canonicalize, $ignoreCase, $processed);\n\n                $expectedAsString .= sprintf(\n                    \"    %s => %s\\n\",\n                    $exporter->export($key),\n        "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"    %s => %s\\n\"",
                "line": 81,
                "context": "         $exporter->shortenedExport($value),\n                );\n\n                $actualAsString .= sprintf(\n                    \"    %s => %s\\n\",\n                    $exporter->export($key),\n        "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"    %s => %s\\n\"",
                "line": 87,
                "context": "               );\n            } catch (ComparisonFailure $e) {\n                $expectedAsString .= sprintf(\n                    \"    %s => %s\\n\",\n                    $exporter->export($key),\n        "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    \"    %s => %s\\n\"",
                "line": 93,
                "context": "xporter->shortenedExport($e->getExpected()),\n                );\n\n                $actualAsString .= sprintf(\n                    \"    %s => %s\\n\",\n                    $exporter->export($key),\n        "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                \"    %s => %s\\n\"",
                "line": 104,
                "context": "       }\n        }\n\n        foreach ($remaining as $key => $value) {\n            $actualAsString .= sprintf(\n                \"    %s => %s\\n\",\n                $exporter->export($key),\n                "
            }
        ],
        "vendor/sebastian/comparator/src/TypeComparator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s does not match expected type \"",
                "line": 35,
                "context": "al,\n                // we don't need a diff\n                '',\n                '',\n                sprintf(\n                    '%s does not match expected type \"%s\".',\n                    (new Expor"
            }
        ],
        "vendor/sebastian/comparator/src/EnumerationComparator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Failed asserting that two values of enumeration %s are equal, %s does not match expected %s.'",
                "line": 42,
                "context": "sonFailure(\n            $expected,\n            $actual,\n            '',\n            '',\n            sprintf(\n                'Failed asserting that two values of enumeration %s are equal, %s does not "
            }
        ],
        "vendor/sebastian/comparator/src/ObjectComparator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    '%s is not instance of expected class \"",
                "line": 44,
                "context": "          $exporter->export($expected),\n                $exporter->export($actual),\n                sprintf(\n                    '%s is not instance of expected class \"%s\".',\n                    $expo"
            }
        ],
        "vendor/sebastian/comparator/src/NumericComparator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Failed asserting that %s matches expected %s.'",
                "line": 59,
                "context": "        $expected,\n                $actual,\n                '',\n                '',\n                sprintf(\n                    'Failed asserting that %s matches expected %s.',\n                    $e"
            }
        ],
        "vendor/sebastian/comparator/src/ScalarComparator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Failed asserting that %s matches expected %s.'",
                "line": 84,
                "context": "ual,\n                // no diff is required\n                '',\n                '',\n                sprintf(\n                    'Failed asserting that %s matches expected %s.',\n                    $e"
            }
        ],
        "vendor/sebastian/comparator/src/DOMNodeComparator.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\"Failed asserting that two DOM %s are equal.\\n\"",
                "line": 47,
                "context": "       $actual,\n                $expectedAsString,\n                $actualAsString,\n                sprintf(\"Failed asserting that two DOM %s are equal.\\n\", $type),\n            );\n        }\n    }\n\n   "
            }
        ],
        "vendor/sebastian/global-state/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/global-state/tests/unit/CodeExporterTest.php": [
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 28,
                "context": "{\n    public function testCanExportGlobalVariablesToCode(): void\n    {\n        $expected = <<<'EOT'\ncall_user_func(\n    function ()\n    {\n        foreach (array_keys($GLOBALS) as $key) {\n            u"
            }
        ],
        "vendor/sebastian/global-state/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/global-state/src/CodeExporter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '$GLOBALS[%s] = %s;'",
                "line": 53,
                "context": "\n\n\nEOT;\n\n        foreach ($snapshot->globalVariables() as $name => $value) {\n            $result .= sprintf(\n                '$GLOBALS[%s] = %s;' . PHP_EOL,\n                $this->exportVariable($name"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '@ini_set(%s, %s);'",
                "line": 68,
                "context": "result = '';\n\n        foreach ($snapshot->iniSettings() as $key => $value) {\n            $result .= sprintf(\n                '@ini_set(%s, %s);' . \"\\n\",\n                $this->exportVariable($key),\n  "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 40,
                "context": "}\n\n    public function globalVariables(Snapshot $snapshot): string\n    {\n        $result = <<<'EOT'\ncall_user_func(\n    function ()\n    {\n        foreach (array_keys($GLOBALS) as $key) {\n            u"
            }
        ],
        "vendor/sebastian/object-enumerator/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/object-enumerator/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/object-reflector/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/object-reflector/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/complexity/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n    ->in(__DIR__ . '/tests/integration')\n;\n\n$con"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/unit'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n    ->in(__DIR__ . '/tests/integration')\n;\n\n$config = new PhpCsFixer\\Config"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/integration'",
                "line": 15,
                "context": "inder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n    ->in(__DIR__ . '/tests/integration')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 361,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/complexity/tests/unit/CyclomaticComplexityCalculatingVisitorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/example_function.php'",
                "line": 25,
                "context": "lculatesCyclomaticComplexityForAbstractSyntaxTree(): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/example_function.php');\n\n        $this->assertIsString($source);\n\n        $n"
            }
        ],
        "vendor/sebastian/complexity/tests/unit/ComplexityCalculatingVisitorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 47,
                "context": "tractSyntaxTreeOfClass(bool $shortCircuitTraversal): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/ExampleClass.php');\n\n        $this->assertIsString($source);\n\n        $nodes"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/anonymous_class.php'",
                "line": 96,
                "context": "axTreeOfAnonymousClass(bool $shortCircuitTraversal): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/anonymous_class.php');\n\n        $this->assertIsString($source);\n\n        $no"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleInterface.php'",
                "line": 145,
                "context": "tSyntaxTreeOfInterface(bool $shortCircuitTraversal): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/ExampleInterface.php');\n\n        $this->assertIsString($source);\n\n        $n"
            }
        ],
        "vendor/sebastian/complexity/tests/integration/CalculatorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 30,
                "context": "yOfClassMethodInSourceFile(): void\n    {\n        $result = (new Calculator)->calculateForSourceFile(__DIR__ . '/../_fixture/ExampleClass.php')->asArray();\n\n        $this->assertSame('SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleTrait.php'",
                "line": 38,
                "context": "yOfTraitMethodInSourceFile(): void\n    {\n        $result = (new Calculator)->calculateForSourceFile(__DIR__ . '/../_fixture/ExampleTrait.php')->asArray();\n\n        $this->assertSame('SebastianBergmann"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/example_function.php'",
                "line": 46,
                "context": "xityOfFunctionInSourceFile(): void\n    {\n        $result = (new Calculator)->calculateForSourceFile(__DIR__ . '/../_fixture/example_function.php')->asArray();\n\n        $this->assertSame('SebastianBerg"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 54,
                "context": " testCalculatesCyclomaticComplexityInSourceString(): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/ExampleClass.php');\n\n        $this->assertIsString($source);\n\n        $resul"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 66,
                "context": "alculatesCyclomaticComplexityInAbstractSyntaxTree(): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/ExampleClass.php');\n\n        $this->assertIsString($source);\n\n        $nodes"
            }
        ],
        "vendor/sebastian/complexity/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/diff/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/diff/tests/Output/StrictUnifiedDiffOutputBuilderTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 636,
                "context": "$this->expectException(ConfigurationException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote($expectedMessage, '#')));\n\n        new StrictUnifiedDiffOutputBuilder($"
            }
        ],
        "vendor/sebastian/diff/tests/Output/Integration/UnifiedDiffOutputBuilderIntegrationTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../fixtures/out/'",
                "line": 70,
                "context": "Y,\n        );\n    }\n\n    protected function setUp(): void\n    {\n        $this->dir       = realpath(__DIR__ . '/../../fixtures/out/') . '/';\n        $this->fileFrom  = $this->dir . 'from.txt';\n       "
            }
        ],
        "vendor/sebastian/diff/tests/Output/Integration/StrictUnifiedDiffOutputBuilderIntegrationTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../../vendor'",
                "line": 73,
                "context": "terable\n    {\n        $cases     = [];\n        $fromFile  = __FILE__;\n        $vendorDir = realpath(__DIR__ . '/../../../vendor');\n\n        $fileIterator = new RecursiveIteratorIterator(new RecursiveD"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../fixtures/out'",
                "line": 94,
                "context": "eturn $cases;\n    }\n\n    protected function setUp(): void\n    {\n        $this->dir       = realpath(__DIR__ . '/../../fixtures/out') . '/';\n        $this->fileFrom  = $this->dir . 'from.txt';\n        "
            }
        ],
        "vendor/sebastian/diff/tests/Utils/UnifiedDiffAssertTraitTest.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 64,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Expected diff to end with a line break, got \"C\".', '#')));\n\n        $t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 72,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote(\"Expected line to start with '@', '-' or '+', got \\\"A\\n\\\". Line 1.\", '#"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 80,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote(\"Line 1 indicates a header, so line 2 must start with \\\"+++\\\".\\nLine 1:"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 88,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote(\"Header line does not match expected pattern, got \\\"+++ file\tX\\n\\\". Lin"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 96,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Date of header line does not match expected pattern, got \"[invalid dat"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 112,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote(\"Expected header line to start with \\\"+++  \\\", got \\\"+++INVALID\\n\\\". Li"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 128,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote(\"Expected line to start with '@', '-' or '+', got \\\"1\\n\\\". Line 5.\", '#"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 144,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Expected string length of minimal 2, got 1. Line 4.', '#')));\n\n       "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 159,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote(\"Hunk header line does not match expected pattern, got \\\"@@ INVALID -1,"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 174,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected new hunk; \"from\" (\\'-\\') start overlaps previous hunk. Line"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 192,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected new hunk; \"to\" (\\'+\\') start overlaps previous hunk. Line 6"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 210,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Expected hunk start (\\'@\\'), got \"+\". Line 6.', '#')));\n\n        $this"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 226,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected hunk start (\\'@\\'). Line 6.', '#')));\n\n        $this->asser"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 242,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected line as 2 \"No newline\" markers have found, \". Line 8.', '#'"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 260,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected line as 2 \"No newline\" markers have found, \". Line 7.', '#'"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 277,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected line as 2 \"No newline\" markers have found, \". Line 7.', '#'"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 294,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected \"\\ No newline at end of file\", it must be preceded by \\'+\\'"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 305,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected \"\\\\ No newline at end of file\", \"\\\\\" was already closed. Li"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 323,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Not expected from (\\'-\\'), already closed by \"\\ No newline at end of f"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 340,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Not expected same (\\' \\'), \\'-\\' already closed by \"\\ No newline at en"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 357,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Not expected to (\\'+\\'), already closed by \"\\ No newline at end of fil"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 374,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Not expected same (\\' \\'), \\'+\\' already closed by \"\\ No newline at en"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 391,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected EOF, number of lines in hunk \"from\" (\\'-\\')) mismatched. Li"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 407,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected EOF, number of lines in hunk \"to\" (\\'+\\')) mismatched. Line"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('#^%s$#'",
                "line": 423,
                "context": "his->expectException(UnexpectedValueException::class);\n        $this->expectExceptionMessageMatches(sprintf('#^%s$#', preg_quote('Unexpected EOF, number of lines in hunk \"from\" (\\'-\\')) and \"to\" (\\'+\\"
            }
        ],
        "vendor/sebastian/diff/tests/Utils/UnifiedDiffAssertTrait.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Expected string length of minimal %d, got %d. %s'",
                "line": 206,
                "context": "ngth = strlen($line);\n\n        if ($length < $min) {\n            throw new UnexpectedValueException(sprintf('Expected string length of minimal %d, got %d. %s', $min, $length, $message));\n        }\n   "
            }
        ],
        "vendor/sebastian/diff/tests/Utils/UnifiedDiffAssertTraitIntegrationTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixtures/UnifiedDiffAssertTraitIntegrationTest'",
                "line": 41,
                "context": "ases(): iterable\n    {\n        // created cases based on dedicated fixtures\n        $dir = realpath(__DIR__ . '/../fixtures/UnifiedDiffAssertTraitIntegrationTest');\n        Assert::assertIsString($dir"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../vendor'",
                "line": 59,
                "context": "ases based on PHP files within the vendor directory for integration testing\n        $dir = realpath(__DIR__ . '/../../vendor');\n        Assert::assertIsString($dir);\n        $dirLength = strlen($dir);"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../fixtures/out/patch.txt'",
                "line": 81,
                "context": "e = $toFile;\n        }\n    }\n\n    protected function setUp(): void\n    {\n        $this->filePatch = __DIR__ . '/../fixtures/out/patch.txt';\n\n        $this->cleanUpTempFiles();\n    }\n\n    protected fun"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s/%d_a.txt'",
                "line": 46,
                "context": "g($dir);\n        $dirLength = strlen($dir);\n\n        for ($i = 1; ; $i++) {\n            $fromFile = sprintf('%s/%d_a.txt', $dir, $i);\n            $toFile   = sprintf('%s/%d_b.txt', $dir, $i);\n\n       "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s/%d_b.txt'",
                "line": 47,
                "context": "$i = 1; ; $i++) {\n            $fromFile = sprintf('%s/%d_a.txt', $dir, $i);\n            $toFile   = sprintf('%s/%d_b.txt', $dir, $i);\n\n            if (!file_exists($fromFile)) {\n                break;"
            }
        ],
        "vendor/sebastian/diff/tests/ParserTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/fixtures/serialized_diff.bin'",
                "line": 41,
                "context": "c static function diffProvider(): array\n    {\n        $diff = unserialize(FileUtils::getFileContent(__DIR__ . '/fixtures/serialized_diff.bin'));\n\n        assert(is_array($diff));\n        assert($diff["
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/fixtures/patch.txt'",
                "line": 61,
                "context": "er;\n    }\n\n    public function testParse(): void\n    {\n        $content = FileUtils::getFileContent(__DIR__ . '/fixtures/patch.txt');\n\n        $diffs = $this->parser->parse($content);\n\n        $this->"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/fixtures/patch2.txt'",
                "line": 79,
                "context": "lic function testParseWithMultipleChunks(): void\n    {\n        $content = FileUtils::getFileContent(__DIR__ . '/fixtures/patch2.txt');\n\n        $diffs = $this->parser->parse($content);\n\n        $this-"
            }
        ],
        "vendor/sebastian/diff/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/diff/src/Output/StrictUnifiedDiffOutputBuilder.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            \"--- %s%s\\n+++ %s%s\\n\"",
                "line": 82,
                "context": "fromFileDate');\n        $this->assertStringOrNull($options, 'toFileDate');\n\n        $this->header = sprintf(\n            \"--- %s%s\\n+++ %s%s\\n\",\n            $options['fromFile'],\n            null === "
            }
        ],
        "vendor/sebastian/recursion-context/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/recursion-context/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/lines-of-code/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n    ->in(__DIR__ . '/tests/integration')\n;\n\n$con"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/unit'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n    ->in(__DIR__ . '/tests/integration')\n;\n\n$config = new PhpCsFixer\\Config"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/integration'",
                "line": 15,
                "context": "inder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n    ->in(__DIR__ . '/tests/integration')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 361,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/lines-of-code/tests/unit/LineCountingVisitorTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 34,
                "context": "   public static function provideData(): array\n    {\n        return [\n            [\n                __DIR__ . '/../_fixture/ExampleClass.php',\n                51,\n                5,\n                46"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/source_with_ignore.php'",
                "line": 41,
                "context": "            5,\n                46,\n                13,\n            ],\n            [\n                __DIR__ . '/../_fixture/source_with_ignore.php',\n                44,\n                9,\n            "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/source_without_newline.php'",
                "line": 48,
                "context": "             9,\n                35,\n                4,\n            ],\n            [\n                __DIR__ . '/../_fixture/source_without_newline.php',\n                1,\n                1,\n         "
            }
        ],
        "vendor/sebastian/lines-of-code/tests/integration/CounterTest.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 26,
                "context": "n testCountsLinesOfCodeInSourceFile(): void\n    {\n        $count = (new Counter)->countInSourceFile(__DIR__ . '/../_fixture/ExampleClass.php');\n\n        $this->assertSame(43, $count->linesOfCode());\n "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 36,
                "context": "blic function testCountsLinesOfCodeInSourceString(): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/ExampleClass.php');\n\n        assert($source !== false);\n\n        $count = (n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/ExampleClass.php'",
                "line": 50,
                "context": "unction testCountsLinesOfCodeInAbstractSyntaxTree(): void\n    {\n        $source = file_get_contents(__DIR__ . '/../_fixture/ExampleClass.php');\n\n        assert($source !== false);\n\n        $nodes = (n"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../_fixture/source_without_newline.php'",
                "line": 68,
                "context": "ction testHandlesFileWithoutNewline(): void\n    {\n        $count = (new Counter)->countInSourceFile(__DIR__ . '/../_fixture/source_without_newline.php');\n\n        $this->assertSame(1, $count->linesOfC"
            }
        ],
        "vendor/sebastian/lines-of-code/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/type/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->set"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests/unit'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRi"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/autoload.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/composer/autoload_real.php'",
                "line": 23,
                "context": " $err;\n        }\n    }\n    trigger_error(\n        $err,\n        E_USER_ERROR\n    );\n}\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInitf9e7218f71d5874b5632927df4f72"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan/bootstrap.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/autoload.php'",
                "line": 28,
                "context": "}\n\n\t\t\tif (self::$composerAutoloader === null) {\n\t\t\t\tself::$composerAutoloader = require 'phar://' . __DIR__ . '/phpstan.phar/vendor/autoload.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php'",
                "line": 29,
                "context": "r = require 'phar://' . __DIR__ . '/phpstan.phar/vendor/autoload.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php';\n\t\t\t\trequire_once 'ph"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php'",
                "line": 30,
                "context": " '/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php';\n\t\t\t\trequire_once 'phar://' ."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/react/promise/src/functions_include.php'",
                "line": 31,
                "context": "_DIR__ . '/phpstan.phar/vendor/react/async/src/functions_include.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/react/promise/src/functions_include.php';\n\t\t\t}\n\t\t\tself::$composerAut"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php'",
                "line": 54,
                "context": "_composer_autoload_files']['a4a119a56e50fbb293281d9a48007e0e'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php';\n\t\t\t\trequire_once 'phar://' . __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/bootstrap.php'",
                "line": 55,
                "context": "' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/Php80.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php80/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tempty($GLOB"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php'",
                "line": 63,
                "context": "_composer_autoload_files']['0e6d7bf4a5811bfa5cf40c5ccd6fae6a'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php';\n\t\t\t\trequire_once 'phar://' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/bootstrap.php'",
                "line": 64,
                "context": "DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/Mbstring.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-mbstring/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tempty($G"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php'",
                "line": 72,
                "context": "_composer_autoload_files']['e69f7f6ee287b969198c3c9d6777bd38'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php';\n\t\t\t\trequire_once '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/bootstrap.php'",
                "line": 73,
                "context": "/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/Normalizer.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-normalizer/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php'",
                "line": 82,
                "context": "_composer_autoload_files']['8825ede83f2f289127722d4e842cf7e8'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php';\n\t\t\t\trequire_once 'phar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/bootstrap.php'",
                "line": 83,
                "context": " . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/Grapheme.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-intl-grapheme/bootstrap.php';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tPHP"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php'",
                "line": 92,
                "context": "_composer_autoload_files']['23c18046f52bef3eea034657bafda50f'] = true;\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php';\n\t\t\t\trequire_once 'phar://' . __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/bootstrap.php'",
                "line": 93,
                "context": "' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/Php81.php';\n\t\t\t\trequire_once 'phar://' . __DIR__ . '/phpstan.phar/vendor/symfony/polyfill-php81/bootstrap.php';\n\t\t\t}\n\t\t}\n\n\t\t$filename = str_r"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/'",
                "line": 100,
                "context": "\t\t\t$filename = substr($filename, strlen('PHPStan\\\\BetterReflection\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/' . $filename . '.php';\n\t\t} else "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/phpstan.phar/src/'",
                "line": 103,
                "context": ".php';\n\t\t} else {\n\t\t\t$filename = substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/src/' . $filename . '.php';\n\t\t}\n\n\t\tif (!file_exists($filepath)) {\n\t\t\treturn"
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$filename . '.php'",
                "line": 100,
                "context": ";\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/' . $filename . '.php';\n\t\t} else {\n\t\t\t$filename = substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath ="
            },
            {
                "pattern": "\\$[a-zA-Z_]\\w*\\s*\\.\\s*['\"]\\.php['\"]",
                "match": "$filename . '.php'",
                "line": 103,
                "context": "substr($filename, strlen('PHPStan\\\\'));\n\t\t\t$filepath = 'phar://' . __DIR__ . '/phpstan.phar/src/' . $filename . '.php';\n\t\t}\n\n\t\tif (!file_exists($filepath)) {\n\t\t\treturn;\n\t\t}\n\n\t\trequire $filepath;\n\t}\n}\n"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/extension-installer/src/Plugin.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/GeneratedConfig.php'",
                "line": 103,
                "context": "oser();\n\t\t$installationManager = $composer->getInstallationManager();\n\n\t\t$generatedConfigFilePath = __DIR__ . '/GeneratedConfig.php';\n\t\t$oldGeneratedConfigFileHash = null;\n\t\tif (is_file($generatedConf"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <info>%s:</info> installed'",
                "line": 205,
                "context": "ileContents)) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach (array_keys($installedPackages) as $name) {\n\t\t\t$io->write(sprintf('> <info>%s:</info> installed', $name));\n\t\t}\n\n\t\tforeach (array_keys($notInstalledPackages) a"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <comment>%s:</comment> not supported'",
                "line": 209,
                "context": "o> installed', $name));\n\t\t}\n\n\t\tforeach (array_keys($notInstalledPackages) as $name) {\n\t\t\t$io->write(sprintf('> <comment>%s:</comment> not supported', $name));\n\t\t}\n\n\t\tforeach ($ignoredPackages as $name"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('> <comment>%s:</comment> ignored'",
                "line": 213,
                "context": "t>%s:</comment> not supported', $name));\n\t\t}\n\n\t\tforeach ($ignoredPackages as $name) {\n\t\t\t$io->write(sprintf('> <comment>%s:</comment> ignored', $name));\n\t\t}\n\t}\n\n\tprivate function constraintIntoString("
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t'%s%s, %s%s'",
                "line": 219,
                "context": "\t\t}\n\t}\n\n\tprivate function constraintIntoString(ConstraintInterface $constraint): string\n\t{\n\t\treturn sprintf(\n\t\t\t'%s%s, %s%s',\n\t\t\t$constraint->getLowerBound()->isInclusive() ? '>=' : '>',\n\t\t\t$constrain"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/ForeachLoop/OverwriteVariablesWithForeachRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Foreach overwrites $%s with its key variable.'",
                "line": 34,
                "context": " $scope->hasVariableType($node->keyVar->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('Foreach overwrites $%s with its key variable.', $node->keyVar->name))\n\t\t\t\t->identifier('for"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Foreach overwrites $%s with its value variable.'",
                "line": 57,
                "context": "e)\n\t\t\t&& $scope->hasVariableType($expr->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('Foreach overwrites $%s with its value variable.', $expr->name))\n\t\t\t\t->identifier('foreach.v"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Methods/IllegalConstructorStaticCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s::%s'",
                "line": 89,
                "context": "ts($functionName, $traitAliases)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $traitAliases[$functionName] === sprintf('%s::%s', $scope->getTraitReflection()->getName(), '__construct');\n\t}\n\n}\n"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Methods/WrongCaseOfInheritedMethodRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t'Method %s::%s() does not match %s method name: %s::%s().'",
                "line": 76,
                "context": "$parentMethod->getName() === $methodName) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn RuleErrorBuilder::message(sprintf(\n\t\t\t'Method %s::%s() does not match %s method name: %s::%s().',\n\t\t\t$declaringClass->getDispl"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticModuloRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the left side.',\n\t\t\t\t$leftType->desc"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %%, %s given on the right side.',\n\t\t\t\t$rightType->de"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticSubtractionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in -, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandInArithmeticIncrementOrDecrementRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in %s, %s given.'",
                "line": 44,
                "context": "s->helper->isValidForDecrement($scope, $node->var)\n\t\t) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in %s, %s given.',\n\t\t\t\t$this->describeOperation(),\n\t\t\t\t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.nonNumeric'",
                "line": 48,
                "context": "\t\t$this->describeOperation(),\n\t\t\t\t$varType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.nonNumeric', $this->getIdentifier()))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n\tabstract p"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticExponentiationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the left side.',\n\t\t\t\t$leftType->desc"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in **, %s given on the right side.',\n\t\t\t\t$rightType->de"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticMultiplicationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in *, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticDivisionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the left side.'",
                "line": 48,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the right side.'",
                "line": 56,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in /, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Operators/OperandsInArithmeticAdditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the left side.'",
                "line": 54,
                "context": ">helper->isValidForArithmeticOperation($scope, $left)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the left side.',\n\t\t\t\t$leftType->descr"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the right side.'",
                "line": 60,
                "context": "helper->isValidForArithmeticOperation($scope, $right)) {\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only numeric types are allowed in +, %s given on the right side.',\n\t\t\t\t$rightType->des"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Classes/RequireParentConstructCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'%s::__construct() does not call parent constructor from %s.'",
                "line": 59,
                "context": "rClass($classReflection);\n\t\tif ($parentClass !== false) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'%s::__construct() does not call parent constructor from %s.',\n\t\t\t\t\t$classReflection->"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Cast/UselessCastRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Casting to %s something that\\'",
                "line": 70,
                "context": "rorBuilder->treatPhpDocTypesAsCertainTip();\n\t\t\t};\n\t\t\treturn [\n\t\t\t\t$addTip(RuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Casting to %s something that\\'s already %s.',\n\t\t\t\t\t$castType->describe(VerbosityLevel"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInElseIfConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in an elseif condition, %s given.'",
                "line": 40,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in an elseif condition, %s given.',\n\t\t\t\t$conditionExpression"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanAndRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.'",
                "line": 39,
                "context": ") {\n\t\t\t$leftType = $scope->getType($originalNode->left);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$left"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.leftNotBoolean'",
                "line": 43,
                "context": " left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$leftType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.leftNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\t$rightScope = $node->getRightScope()"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.'",
                "line": 49,
                "context": "$rightType = $rightScope->getType($originalNode->right);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rig"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.rightNotBoolean'",
                "line": 53,
                "context": "ight side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rightType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.rightNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n}\n"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanOrRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.'",
                "line": 39,
                "context": ") {\n\t\t\t$leftType = $scope->getType($originalNode->left);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$left"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.leftNotBoolean'",
                "line": 43,
                "context": " left side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$leftType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.leftNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\t$rightScope = $node->getRightScope()"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.'",
                "line": 49,
                "context": "$rightType = $rightScope->getType($originalNode->right);\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in %s, %s given on the right side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rig"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s.rightNotBoolean'",
                "line": 53,
                "context": "ight side.',\n\t\t\t\t$nodeText,\n\t\t\t\t$rightType->describe(VerbosityLevel::typeOnly()),\n\t\t\t))->identifier(sprintf('%s.rightNotBoolean', $identifierType))->build();\n\t\t}\n\n\t\treturn $messages;\n\t}\n\n}\n"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInBooleanNotRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a negated boolean, %s given.'",
                "line": 40,
                "context": "[];\n\t\t}\n\n\t\t$expressionType = $scope->getType($node->expr);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a negated boolean, %s given.',\n\t\t\t\t$expressionType->descr"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInTernaryOperatorRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in a ternary operator condition, %s given.'",
                "line": 44,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in a ternary operator condition, %s given.',\n\t\t\t\t$conditionE"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/BooleansInConditions/BooleanInIfConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Only booleans are allowed in an if condition, %s given.'",
                "line": 40,
                "context": "\t\t$conditionExpressionType = $scope->getType($node->cond);\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Only booleans are allowed in an if condition, %s given.',\n\t\t\t\t$conditionExpressionType"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/DisallowedConstructs/DisallowedImplicitArrayCreationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Implicit array creation is not allowed - variable $%s does not exist.'",
                "line": 48,
                "context": "->hasVariableType($node->name);\n\t\tif ($certainty->no()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf('Implicit array creation is not allowed - variable $%s does not exist.', $node->name))\n\t\t\t\t\t"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Implicit array creation is not allowed - variable $%s might not exist.'",
                "line": 56,
                "context": ")\n\t\t\t\t\t->build(),\n\t\t\t];\n\t\t}\n\n\t\tif ($certainty->maybe()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf('Implicit array creation is not allowed - variable $%s might not exist.', $node->name))\n\t\t\t\t"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/SwitchConditions/MatchingTypeInSwitchCaseConditionRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Switch condition type (%s) does not match case condition %s (%s).'",
                "line": 46,
                "context": "e->isSuperTypeOf($caseType)->no()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf(\n\t\t\t\t'Switch condition type (%s) does not match case condition %s (%s).',\n\t\t\t\t$conditionType"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/DynamicCallOnStaticMethodsRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().'",
                "line": 65,
                "context": "PStanTestCase::class,\n\t\t\t], true)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().',\n\t\t\t\t\t$methodReflection->getDeclaringClass()"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/DynamicCallOnStaticMethodsCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().'",
                "line": 54,
                "context": "od($name, $scope);\n\t\tif ($methodReflection->isStatic()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Dynamic call to static method %s::%s().',\n\t\t\t\t\t$methodReflection->getDeclaringClass()"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/StrictCalls/StrictFunctionCallsRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be set.'",
                "line": 73,
                "context": "!array_key_exists($argumentPosition, $node->getArgs())) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be set.',\n\t\t\t\t\t$functionName,\n\t\t\t\t\t$a"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be true.'",
                "line": 85,
                "context": "\n\t\tif (!$trueType->isSuperTypeOf($argumentType)->yes()) {\n\t\t\treturn [\n\t\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t\t'Call to function %s() requires parameter #%d to be true.',\n\t\t\t\t\t$functionName,\n\t\t\t\t\t$"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/ForLoop/OverwriteVariablesWithForLoopInitRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('For loop initial assignment overwrites variable $%s.'",
                "line": 54,
                "context": "e)\n\t\t\t&& $scope->hasVariableType($expr->name)->yes()\n\t\t) {\n\t\t\t$errors[] = RuleErrorBuilder::message(sprintf('For loop initial assignment overwrites variable $%s.', $expr->name))\n\t\t\t\t->identifier('for."
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/Functions/ClosureUsesThisRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Anonymous function uses $this assigned to variable $%s. Use $this directly in the function body.'",
                "line": 44,
                "context": "if (!$varType instanceof ThisType) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$messages[] = RuleErrorBuilder::message(sprintf('Anonymous function uses $this assigned to variable $%s. Use $this directly in the function "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticMethodCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static method call on %s.'",
                "line": 37,
                "context": "de->getClass())->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static method call on %s.',\n\t\t\t\t$methodCalledOn,\n\t\t\t))->identifier('staticMet"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableMethodCallableRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable method call on %s.'",
                "line": 31,
                "context": ">getName() instanceof Node\\Identifier) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable method call on %s.',\n\t\t\t\t$scope->getType($node->getVar())->describe(Verbosity"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariablePropertyFetchRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable property access on %s.'",
                "line": 63,
                "context": "MLElement($classReflection)\n\t\t\t) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable property access on %s.',\n\t\t\t\t$fetchedOnType->describe(VerbosityLevel::typeOnl"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableMethodCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable method call on %s.'",
                "line": 31,
                "context": "node->name instanceof Node\\Identifier) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable method call on %s.',\n\t\t\t\t$scope->getType($node->var)->describe(VerbosityLevel"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticMethodCallRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static method call on %s.'",
                "line": 37,
                "context": "e($node->class)->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static method call on %s.',\n\t\t\t\t$methodCalledOn,\n\t\t\t))->identifier('staticMet"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan-strict-rules/src/Rules/VariableVariables/VariableStaticPropertyFetchRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n\t\t\t\t'Variable static property access on %s.'",
                "line": 37,
                "context": "e($node->class)->describe(VerbosityLevel::typeOnly());\n\t\t}\n\n\t\treturn [\n\t\t\tRuleErrorBuilder::message(sprintf(\n\t\t\t\t'Variable static property access on %s.',\n\t\t\t\t$propertyAccessedOn,\n\t\t\t))->identifier('s"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/composer/ClassLoader.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/component'",
                "line": 21,
                "context": "assLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__.'/framework'",
                "line": 22,
                "context": "  $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     //"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 118,
                "context": "  public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return ar"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/composer/autoload_static.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 10,
                "context": "5632927df4f72bd7\n{\n    public static $files = array (\n        '9b38cf48e83f5d8f60375221cd213eee' => __DIR__ . '/..' . '/phpstan/phpstan/bootstrap.php',\n    );\n\n    public static $prefixLengthsPsr4 = a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 32,
                "context": "refixDirsPsr4 = array (\n        'TomasVotruba\\\\TypeCoverage\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/tomasvotruba/type-coverage/src',\n        ),\n        'PHPStan\\\\ExtensionInstaller"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 36,
                "context": "erage/src',\n        ),\n        'PHPStan\\\\ExtensionInstaller\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/phpstan/extension-installer/src',\n        ),\n        'PHPStan\\\\' => \n        arr"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 40,
                "context": "pstan/extension-installer/src',\n        ),\n        'PHPStan\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/phpstan/phpstan-strict-rules/src',\n        ),\n        'Ergebnis\\\\PHPStan\\\\Rules\\"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 44,
                "context": "ct-rules/src',\n        ),\n        'Ergebnis\\\\PHPStan\\\\Rules\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/ergebnis/phpstan-rules/src',\n        ),\n    );\n\n    public static $classMap = ar"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 49,
                "context": ",\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Nette\\\\ArgumentOutOfRangeException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 50,
                "context": "_DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'Nette\\\\ArgumentOutOfRangeException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DeprecatedException' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 51,
                "context": "on' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DeprecatedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DirectoryNotFoundException' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 52,
                "context": "__DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\DirectoryNotFoundException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\FileNotFoundException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 53,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\FileNotFoundException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\HtmlStringable' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 54,
                "context": "ception' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\HtmlStringable' => __DIR__ . '/..' . '/nette/utils/src/HtmlStringable.php',\n        'Nette\\\\IOException' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 55,
                "context": "ngable' => __DIR__ . '/..' . '/nette/utils/src/HtmlStringable.php',\n        'Nette\\\\IOException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidArgumentException' => __"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 56,
                "context": "> __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidArgumentException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidStateException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 57,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\InvalidStateException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Iterators\\\\CachingIterator' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 58,
                "context": "__DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Iterators\\\\CachingIterator' => __DIR__ . '/..' . '/nette/utils/src/Iterators/CachingIterator.php',\n        'Nette\\\\Iterators\\\\Mappe"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 59,
                "context": "_ . '/..' . '/nette/utils/src/Iterators/CachingIterator.php',\n        'Nette\\\\Iterators\\\\Mapper' => __DIR__ . '/..' . '/nette/utils/src/Iterators/Mapper.php',\n        'Nette\\\\Localization\\\\ITranslator"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 60,
                "context": "__ . '/..' . '/nette/utils/src/Iterators/Mapper.php',\n        'Nette\\\\Localization\\\\ITranslator' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Localization\\\\Translator' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 61,
                "context": "_DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Localization\\\\Translator' => __DIR__ . '/..' . '/nette/utils/src/Translator.php',\n        'Nette\\\\MemberAccessException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 62,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Translator.php',\n        'Nette\\\\MemberAccessException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotImplementedException' => __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 63,
                "context": "=> __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotImplementedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotSupportedException' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 64,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\NotSupportedException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\OutOfRangeException' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 65,
                "context": "on' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\OutOfRangeException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\SmartObject' => __DIR__ . '/..'"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 66,
                "context": "eException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\SmartObject' => __DIR__ . '/..' . '/nette/utils/src/SmartObject.php',\n        'Nette\\\\StaticClass' => __DIR__ . '/.."
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 67,
                "context": "artObject' => __DIR__ . '/..' . '/nette/utils/src/SmartObject.php',\n        'Nette\\\\StaticClass' => __DIR__ . '/..' . '/nette/utils/src/StaticClass.php',\n        'Nette\\\\UnexpectedValueException' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 68,
                "context": " __DIR__ . '/..' . '/nette/utils/src/StaticClass.php',\n        'Nette\\\\UnexpectedValueException' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Utils\\\\ArrayHash' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 69,
                "context": "ption' => __DIR__ . '/..' . '/nette/utils/src/exceptions.php',\n        'Nette\\\\Utils\\\\ArrayHash' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayHash.php',\n        'Nette\\\\Utils\\\\ArrayList' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 70,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayHash.php',\n        'Nette\\\\Utils\\\\ArrayList' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayList.php',\n        'Nette\\\\Utils\\\\Arrays' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 71,
                "context": "ist' => __DIR__ . '/..' . '/nette/utils/src/Utils/ArrayList.php',\n        'Nette\\\\Utils\\\\Arrays' => __DIR__ . '/..' . '/nette/utils/src/Utils/Arrays.php',\n        'Nette\\\\Utils\\\\AssertionException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 72,
                "context": "_DIR__ . '/..' . '/nette/utils/src/Utils/Arrays.php',\n        'Nette\\\\Utils\\\\AssertionException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Callback' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 73,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Callback' => __DIR__ . '/..' . '/nette/utils/src/Utils/Callback.php',\n        'Nette\\\\Utils\\\\DateTime' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 74,
                "context": "ck' => __DIR__ . '/..' . '/nette/utils/src/Utils/Callback.php',\n        'Nette\\\\Utils\\\\DateTime' => __DIR__ . '/..' . '/nette/utils/src/Utils/DateTime.php',\n        'Nette\\\\Utils\\\\FileInfo' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 75,
                "context": "me' => __DIR__ . '/..' . '/nette/utils/src/Utils/DateTime.php',\n        'Nette\\\\Utils\\\\FileInfo' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileInfo.php',\n        'Nette\\\\Utils\\\\FileSystem' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 76,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileInfo.php',\n        'Nette\\\\Utils\\\\FileSystem' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileSystem.php',\n        'Nette\\\\Utils\\\\Finder' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 77,
                "context": "em' => __DIR__ . '/..' . '/nette/utils/src/Utils/FileSystem.php',\n        'Nette\\\\Utils\\\\Finder' => __DIR__ . '/..' . '/nette/utils/src/Utils/Finder.php',\n        'Nette\\\\Utils\\\\Floats' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 78,
                "context": "Finder' => __DIR__ . '/..' . '/nette/utils/src/Utils/Finder.php',\n        'Nette\\\\Utils\\\\Floats' => __DIR__ . '/..' . '/nette/utils/src/Utils/Floats.php',\n        'Nette\\\\Utils\\\\Helpers' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 79,
                "context": "loats' => __DIR__ . '/..' . '/nette/utils/src/Utils/Floats.php',\n        'Nette\\\\Utils\\\\Helpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/Helpers.php',\n        'Nette\\\\Utils\\\\Html' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 80,
                "context": "Helpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/Helpers.php',\n        'Nette\\\\Utils\\\\Html' => __DIR__ . '/..' . '/nette/utils/src/Utils/Html.php',\n        'Nette\\\\Utils\\\\IHtmlString' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 81,
                "context": "tml' => __DIR__ . '/..' . '/nette/utils/src/Utils/Html.php',\n        'Nette\\\\Utils\\\\IHtmlString' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Utils\\\\Image' => __DIR__ . '"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 82,
                "context": "String' => __DIR__ . '/..' . '/nette/utils/src/compatibility.php',\n        'Nette\\\\Utils\\\\Image' => __DIR__ . '/..' . '/nette/utils/src/Utils/Image.php',\n        'Nette\\\\Utils\\\\ImageColor' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 83,
                "context": "age' => __DIR__ . '/..' . '/nette/utils/src/Utils/Image.php',\n        'Nette\\\\Utils\\\\ImageColor' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageColor.php',\n        'Nette\\\\Utils\\\\ImageException' =>"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 84,
                "context": "_DIR__ . '/..' . '/nette/utils/src/Utils/ImageColor.php',\n        'Nette\\\\Utils\\\\ImageException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ImageType' => __DI"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 85,
                "context": " => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ImageType' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageType.php',\n        'Nette\\\\Utils\\\\Iterables' => __DIR"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 86,
                "context": "' => __DIR__ . '/..' . '/nette/utils/src/Utils/ImageType.php',\n        'Nette\\\\Utils\\\\Iterables' => __DIR__ . '/..' . '/nette/utils/src/Utils/Iterables.php',\n        'Nette\\\\Utils\\\\Json' => __DIR__ . "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 87,
                "context": "ables' => __DIR__ . '/..' . '/nette/utils/src/Utils/Iterables.php',\n        'Nette\\\\Utils\\\\Json' => __DIR__ . '/..' . '/nette/utils/src/Utils/Json.php',\n        'Nette\\\\Utils\\\\JsonException' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 88,
                "context": "n' => __DIR__ . '/..' . '/nette/utils/src/Utils/Json.php',\n        'Nette\\\\Utils\\\\JsonException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ObjectHelpers' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 89,
                "context": "__DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\ObjectHelpers' => __DIR__ . '/..' . '/nette/utils/src/Utils/ObjectHelpers.php',\n        'Nette\\\\Utils\\\\Paginator' => _"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 90,
                "context": " __DIR__ . '/..' . '/nette/utils/src/Utils/ObjectHelpers.php',\n        'Nette\\\\Utils\\\\Paginator' => __DIR__ . '/..' . '/nette/utils/src/Utils/Paginator.php',\n        'Nette\\\\Utils\\\\Random' => __DIR__ "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 91,
                "context": "tor' => __DIR__ . '/..' . '/nette/utils/src/Utils/Paginator.php',\n        'Nette\\\\Utils\\\\Random' => __DIR__ . '/..' . '/nette/utils/src/Utils/Random.php',\n        'Nette\\\\Utils\\\\Reflection' => __DIR__"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 92,
                "context": "om' => __DIR__ . '/..' . '/nette/utils/src/Utils/Random.php',\n        'Nette\\\\Utils\\\\Reflection' => __DIR__ . '/..' . '/nette/utils/src/Utils/Reflection.php',\n        'Nette\\\\Utils\\\\ReflectionMethod' "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 93,
                "context": "IR__ . '/..' . '/nette/utils/src/Utils/Reflection.php',\n        'Nette\\\\Utils\\\\ReflectionMethod' => __DIR__ . '/..' . '/nette/utils/src/Utils/ReflectionMethod.php',\n        'Nette\\\\Utils\\\\RegexpExcept"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 94,
                "context": ". '/..' . '/nette/utils/src/Utils/ReflectionMethod.php',\n        'Nette\\\\Utils\\\\RegexpException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Strings' => __DIR_"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 95,
                "context": "n' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Strings' => __DIR__ . '/..' . '/nette/utils/src/Utils/Strings.php',\n        'Nette\\\\Utils\\\\Type' => __DIR__ . '/"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 96,
                "context": "Strings' => __DIR__ . '/..' . '/nette/utils/src/Utils/Strings.php',\n        'Nette\\\\Utils\\\\Type' => __DIR__ . '/..' . '/nette/utils/src/Utils/Type.php',\n        'Nette\\\\Utils\\\\UnknownImageFileExceptio"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 97,
                "context": "_ . '/..' . '/nette/utils/src/Utils/Type.php',\n        'Nette\\\\Utils\\\\UnknownImageFileException' => __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Validators' => __D"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/..'",
                "line": 98,
                "context": "=> __DIR__ . '/..' . '/nette/utils/src/Utils/exceptions.php',\n        'Nette\\\\Utils\\\\Validators' => __DIR__ . '/..' . '/nette/utils/src/Utils/Validators.php',\n    );\n\n    public static function getIni"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/composer/autoload_real.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/ClassLoader.php'",
                "line": 12,
                "context": "sLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/autoload_static.php'",
                "line": 29,
                "context": "ray('ComposerAutoloaderInitf9e7218f71d5874b5632927df4f72bd7', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9e721"
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 30,
                "context": "b5632927df4f72bd7', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9e7218f71d5874b5632927df4f72bd7::getInitializer"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/composer/InstalledVersions.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 275,
                "context": "s/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '/installed.php';\n            } else {\n                self::$installed = array();\n       "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/installed.php'",
                "line": 365,
                "context": " bool, replaced?: string[], provided?: string[]}>} $required */\n                $required = require __DIR__ . '/installed.php';\n                self::$installed = $required;\n            } else {\n     "
            },
            {
                "pattern": "call_user_func",
                "match": "call_user_func",
                "line": 68,
                "context": "unt($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    /**\n     * Returns a list of all packag"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/composer/installed.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 8,
                "context": " '5478c261196db97e0c806265858f92ae4c4807a6',\n        'type' => 'library',\n        'install_path' => __DIR__ . '/../../',\n        'aliases' => array(),\n        'dev' => true,\n    ),\n    'versions' => a"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../'",
                "line": 18,
                "context": "61196db97e0c806265858f92ae4c4807a6',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../../',\n            'aliases' => array(),\n            'dev_requirement' => false,\n     "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../ergebnis/phpstan-rules'",
                "line": 27,
                "context": "73ef9cd355279fff5122e080',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../ergebnis/phpstan-rules',\n            'aliases' => array(),\n            'dev_requireme"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../nette/utils'",
                "line": 36,
                "context": "7e257dbe0fcf6ce81b4d6dbe05c6899f96',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../nette/utils',\n            'aliases' => array(),\n            'dev_requirement' => true"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/extension-installer'",
                "line": 45,
                "context": "2326fba0403ec24fe912372936',\n            'type' => 'composer-plugin',\n            'install_path' => __DIR__ . '/../phpstan/extension-installer',\n            'aliases' => array(),\n            'dev_requ"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/phpstan'",
                "line": 54,
                "context": "3b87c03b12cc7e46a30a524648e497758f',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../phpstan/phpstan',\n            'aliases' => array(),\n            'dev_requirement' => "
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../phpstan/phpstan-strict-rules'",
                "line": 63,
                "context": "e0c99154ab622dace071c3ba',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../phpstan/phpstan-strict-rules',\n            'aliases' => array(),\n            'dev_req"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../tomasvotruba/type-coverage'",
                "line": 72,
                "context": "da538fa44f2939236a990e0c',\n            'type' => 'phpstan-extension',\n            'install_path' => __DIR__ . '/../tomasvotruba/type-coverage',\n            'aliases' => array(),\n            'dev_requi"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/nette/utils/src/Utils/ArrayHash.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('Key must be either a string or an integer, %s given.'",
                "line": 69,
                "context": "ue): void\n\t{\n\t\tif (!is_scalar($key)) { // prevents null\n\t\t\tthrow new Nette\\InvalidArgumentException(sprintf('Key must be either a string or an integer, %s given.', get_debug_type($key)));\n\t\t}\n\n\t\t$this"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/nette/utils/src/Utils/Strings.php": [
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Normalizer'",
                "line": 137,
                "context": " static function normalize(string $s): string\n\t{\n\t\t// convert to compressed normal form (NFC)\n\t\tif (class_exists('Normalizer', false) && ($n = \\Normalizer::normalize($s, \\Normalizer::FORM_C)) !== fals"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Transliterator'",
                "line": 191,
                "context": "CONV_IMPL, '\"\\'') : null;\n\t\tstatic $transliterator = null;\n\t\tif ($transliterator === null) {\n\t\t\tif (class_exists('Transliterator', false)) {\n\t\t\t\t$transliterator = \\Transliterator::create('Any-Latin; L"
            },
            {
                "pattern": "class_exists\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "match": "class_exists('Normalizer'",
                "line": 354,
                "context": "*/\n\tpublic static function compare(string $left, string $right, ?int $length = null): bool\n\t{\n\t\tif (class_exists('Normalizer', false)) {\n\t\t\t$left = \\Normalizer::normalize($left, \\Normalizer::FORM_D); "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/tomasvotruba/type-coverage/rector.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 9,
                "context": "es=1);\n\nuse Rector\\Config\\RectorConfig;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->withPhpSets()\n    ->withPreparedSets(dead"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 10,
                "context": "RectorConfig;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->withPhpSets()\n    ->withPreparedSets(deadCode: true, codeQuality: t"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoNullableReturnTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class has a nullable return type declaration.'",
                "line": 52,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class has a nullable return type declaration.',\n "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() has a nullable return type declaration.'",
                "line": 64,
                "context": "aration()->toString())\n                    ->build(),\n            ];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() has a nullable return type declaration.',\n            $classRe"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithContainerTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class has a parameter $%s with a type declaration of %s, but containers should not be injected.'",
                "line": 155,
                "context": "ion\n    ): Rules\\RuleError {\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class has a parameter $%s with a type declaration"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() has a parameter $%s with a type declaration of %s, but containers should not be injected.'",
                "line": 167,
                "context": "thContainerTypeDeclaration()->toString())\n                ->build();\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() has a parameter $%s with a type declaration of %s, but contain"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/FinalInAbstractClassRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() is not final, but since the containing class is abstract, it should be.'",
                "line": 82,
                "context": "   if ('__construct' === $node->name->name) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() is not final, but since the containing class is abstract, it s"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoConstructorParameterWithDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Constructor in anonymous class has parameter $%s with default value.'",
                "line": 63,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Constructor in anonymous class has parameter $%s with default value.',"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Constructor in %s has parameter $%s with default value.'",
                "line": 83,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Constructor in %s has parameter $%s with default value.',\n                "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/PrivateInFinalClassRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class is protected, but since the containing class is final, it can be private.'",
                "line": 102,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class is protected, but since the containing clas"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() is protected, but since the containing class is final, it can be private.'",
                "line": 114,
                "context": "alClass()->toString())\n                    ->build(),\n            ];\n        }\n\n        $message = \\sprintf(\n            'Method %s::%s() is protected, but since the containing class is final, it can "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s with a nullable type declaration.'",
                "line": 69,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s with a nullable type "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s with a nullable type declaration.'",
                "line": 90,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s with a nullable type declaration.',\n    "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s that is passed by reference.'",
                "line": 61,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s that is passed by ref"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s that is passed by reference.'",
                "line": 82,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s that is passed by reference.',\n         "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                    'Method %s() in anonymous class has parameter $%s with null as default value.'",
                "line": 69,
                "context": "ng $parameterName */\n                $parameterName = $variable->name;\n\n                $message = \\sprintf(\n                    'Method %s() in anonymous class has parameter $%s with null as default "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s::%s() has parameter $%s with null as default value.'",
                "line": 90,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Method %s::%s() has parameter $%s with null as default value.',\n          "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Methods/NoReturnByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Method %s() in anonymous class returns by reference.'",
                "line": 46,
                "context": "cope->getClassReflection();\n\n        if ($classReflection->isAnonymous()) {\n            $message = \\sprintf(\n                'Method %s() in anonymous class returns by reference.',\n                $me"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Method %s::%s() returns by reference.'",
                "line": 60,
                "context": "),\n            ];\n        }\n\n        $className = $classReflection->getName();\n\n        $message = \\sprintf(\n            'Method %s::%s() returns by reference.',\n            $className,\n            $m"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/ErrorIdentifier.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'ergebnis.%s'",
                "line": 125,
                "context": "new self('testCaseWithSuffix');\n    }\n\n    public function toString(): string\n    {\n        return \\sprintf(\n            'ergebnis.%s',\n            $this->value,\n        );\n    }\n}\n"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Classes/PHPUnit/Framework/TestCaseWithSuffixRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Class %s extends %s, is concrete, but does not have a Test suffix.'",
                "line": 83,
                "context": "match('/Test$/', $fullyQualifiedClassName)) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Class %s extends %s, is concrete, but does not have a Test suffix.',\n         "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoNullableReturnTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Function %s() has a nullable return type declaration.'",
                "line": 51,
                "context": "bleTypeDeclaration($node->getReturnType())) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Function %s() has a nullable return type declaration.',\n            $node->nam"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s with a nullable type declaration.'",
                "line": 64,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s with a nullable type declaration.',\n      "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s that is passed by reference.'",
                "line": 56,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s that is passed by reference.',\n           "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Function %s() has parameter $%s with null as default value.'",
                "line": 64,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Function %s() has parameter $%s with null as default value.',\n            "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Functions/NoReturnByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n            'Function %s() returns by reference.'",
                "line": 39,
                "context": "array {\n        if (false === $node->byRef) {\n            return [];\n        }\n\n        $message = \\sprintf(\n            'Function %s() returns by reference.',\n            $node->namespacedName,\n     "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterWithNullableTypeDeclarationRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s with a nullable type declaration.'",
                "line": 62,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s with a nullable type declaration.',\n            "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterPassedByReferenceRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s that is passed by reference.'",
                "line": 54,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s that is passed by reference.',\n                $"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/ergebnis/phpstan-rules/src/Closures/NoParameterWithNullDefaultValueRule.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'Closure has parameter $%s with null as default value.'",
                "line": 62,
                "context": "var string $parameterName */\n            $parameterName = $variable->name;\n\n            $message = \\sprintf(\n                'Closure has parameter $%s with null as default value.',\n                $p"
            }
        ],
        "vendor/sebastian/type/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/version/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAllo"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 359,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/version/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/cli-parser/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/cli-parser/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/environment/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/environment/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/environment/src/Runtime.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s with PCOV %s'",
                "line": 111,
                "context": "WithVersionAndCodeCoverageDriver(): string\n    {\n        if ($this->hasPCOV()) {\n            return sprintf(\n                '%s with PCOV %s',\n                $this->getNameWithVersion(),\n           "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s with Xdebug %s'",
                "line": 119,
                "context": " phpversion('pcov'),\n            );\n        }\n\n        if ($this->hasXdebug()) {\n            return sprintf(\n                '%s with Xdebug %s',\n                $this->getNameWithVersion(),\n         "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf('%s=%s'",
                "line": 235,
                "context": " if ((!isset($config[$value]) || ($set !== $config[$value]))) {\n                    $diff[$value] = sprintf('%s=%s', $value, $set);\n                }\n            }\n        }\n\n        return $diff;\n   "
            }
        ],
        "vendor/sebastian/exporter/.php-cs-fixer.dist.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/src'",
                "line": 13,
                "context": "stributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinde"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/tests'",
                "line": 14,
                "context": "code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests')\n;\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAl"
            },
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/.php-cs-fixer.cache/'",
                "line": 360,
                "context": "_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\n$config->setCacheFile(__DIR__ . '/.php-cs-fixer.cache/' . json_decode((string) @file_get_contents('composer.json'), true)["
            }
        ],
        "vendor/sebastian/exporter/build/scripts/extract-release-notes.php": [
            {
                "pattern": "__DIR__\\s*\\.\\s*['\"]([^'\"]+)['\"]",
                "match": "__DIR__ . '/../../ChangeLog.md'",
                "line": 11,
                "context": "gc !== 2) {\n    print $argv[0] . ' <tag>' . PHP_EOL;\n\n    exit(1);\n}\n\n$version = $argv[1];\n\n$file = __DIR__ . '/../../ChangeLog.md';\n\nif (!is_file($file) || !is_readable($file)) {\n    print $file . ' "
            }
        ],
        "vendor/sebastian/exporter/src/Exporter.php": [
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s Enum (%s, %s)'",
                "line": 140,
                "context": "          return $string;\n        }\n\n        if ($value instanceof BackedEnum) {\n            return sprintf(\n                '%s Enum (%s, %s)',\n                $value::class,\n                $value->"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s Enum (%s)'",
                "line": 149,
                "context": "lue->value),\n            );\n        }\n\n        if ($value instanceof UnitEnum) {\n            return sprintf(\n                '%s Enum (%s)',\n                $value::class,\n                $value->name"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s Object (%s)'",
                "line": 157,
                "context": "        $value->name,\n            );\n        }\n\n        if (is_object($value)) {\n            return sprintf(\n                '%s Object (%s)',\n                $value::class,\n                $this->cou"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '[%s]'",
                "line": 165,
                "context": "lue) > 0 ? '...' : '',\n            );\n        }\n\n        if (is_array($value)) {\n            return sprintf(\n                '[%s]',\n                count($value) > 0 ? '...' : '',\n            );\n    "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                'resource(%d) of type (%s)'",
                "line": 303,
                "context": "       return 'resource (closed)';\n        }\n\n        if (is_resource($value)) {\n            return sprintf(\n                'resource(%d) of type (%s)',\n                (int) $value,\n                "
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s Enum #%d (%s, %s)'",
                "line": 311,
                "context": "e($value),\n            );\n        }\n\n        if ($value instanceof BackedEnum) {\n            return sprintf(\n                '%s Enum #%d (%s, %s)',\n                $value::class,\n                spl_"
            },
            {
                "pattern": "sprintf\\s*\\(\\s*['\"][^'\"]*%s[^'\"]*['\"]",
                "match": "sprintf(\n                '%s Enum #%d (%s)'",
                "line": 321,
                "context": "lue->value),\n            );\n        }\n\n        if ($value instanceof UnitEnum) {\n            return sprintf(\n                '%s Enum #%d (%s)',\n                $value::class,\n                spl_obje"
            }
        ]
    },
    "string_references": {
        "src/Admin/MPAIAjaxHandler.php": [
            {
                "term": "chat-interface-ajax",
                "match": "'templates/chat-interface-ajax.php'",
                "line": 103,
                "type": "string_literal"
            },
            {
                "term": "templates/chat-interface-ajax.php",
                "match": "'templates/chat-interface-ajax.php'",
                "line": 103,
                "type": "string_literal"
            },
            {
                "term": "chat-interface",
                "match": "'templates/chat-interface-ajax.php'",
                "line": 103,
                "type": "string_literal"
            },
            {
                "term": "chat-interface",
                "match": "'templates/chat-interface.php'",
                "line": 107,
                "type": "string_literal"
            },
            {
                "term": "templates/chat-interface.php",
                "match": "'templates/chat-interface.php'",
                "line": 107,
                "type": "string_literal"
            },
            {
                "term": "chat-interface-ajax",
                "match": "'templates/chat-interface-ajax.php'",
                "line": 103,
                "type": "string_literal"
            },
            {
                "term": "templates/chat-interface-ajax.php",
                "match": "'templates/chat-interface-ajax.php'",
                "line": 103,
                "type": "string_literal"
            },
            {
                "term": "chat-interface",
                "match": "'templates/chat-interface-ajax.php'",
                "line": 103,
                "type": "string_literal"
            },
            {
                "term": "chat-interface",
                "match": "'templates/chat-interface.php'",
                "line": 107,
                "type": "string_literal"
            },
            {
                "term": "templates/chat-interface.php",
                "match": "'templates/chat-interface.php'",
                "line": 107,
                "type": "string_literal"
            }
        ],
        "templates/settings-page.php": [
            {
                "term": "chat-interface",
                "match": "'templates/chat-interface.php'",
                "line": 153,
                "type": "string_literal"
            },
            {
                "term": "templates/chat-interface.php",
                "match": "'templates/chat-interface.php'",
                "line": 153,
                "type": "string_literal"
            }
        ],
        "templates/dashboard-tab.php": [
            {
                "term": "dashboard-tab",
                "match": "\"mpai-dashboard-tab\"",
                "line": 38,
                "type": "string_literal"
            }
        ],
        "memberpress-ai-assistant.php": [
            {
                "term": "welcome-page",
                "match": "'templates/welcome-page.php'",
                "line": 650,
                "type": "string_literal"
            },
            {
                "term": "templates/welcome-page.php",
                "match": "'templates/welcome-page.php'",
                "line": 650,
                "type": "string_literal"
            }
        ]
    },
    "conditional_loading": {
        "src/Tools/WordPressTool.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1435,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('MeprUser')) {\n            return [\n "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1467,
                "context": " is properly installed and configured\n        if (class_exists('MeprUser') && class_exists('MeprSubs"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1467,
                "context": "onfigured\n        if (class_exists('MeprUser') && class_exists('MeprSubscription')) {\n            tr"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1649,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('MeprProduct')) {\n            return "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1675,
                "context": " is properly installed and configured\n        if (class_exists('MeprProduct')) {\n            try {\n "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1696,
                "context": "($products as $product) {\n                    if (class_exists('MeprProduct')) {\n                   "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 2095,
                "context": " Fall back to creating a new instance\n        if (class_exists('\\MemberpressAiAssistant\\Tools\\Member"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 2107,
                "context": "w MemberPressService instance\n                if (class_exists('\\MemberpressAiAssistant\\Services\\Mem"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1367,
                "context": "Check if get_plugins function exists\n        if (!function_exists('get_plugins')) {\n            requ"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1302,
                "context": "t of the operation\n     */\n    protected function get_option(array $parameters): array {\n        // "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1307,
                "context": "        // Get the option\n        $option_value = get_option($option_name);\n\n        // Check if opt"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1375,
                "context": "  // Get active plugins\n        $active_plugins = get_option('active_plugins', []);\n        \n       "
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 827,
                "context": " }\n\n        // Get user meta\n        $user_meta = get_user_meta($user_id);\n        $meta_data = [];\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1435,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('MeprUser')) {\n            return [\n "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1467,
                "context": " is properly installed and configured\n        if (class_exists('MeprUser') && class_exists('MeprSubs"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1467,
                "context": "onfigured\n        if (class_exists('MeprUser') && class_exists('MeprSubscription')) {\n            tr"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1649,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('MeprProduct')) {\n            return "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1675,
                "context": " is properly installed and configured\n        if (class_exists('MeprProduct')) {\n            try {\n "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1696,
                "context": "($products as $product) {\n                    if (class_exists('MeprProduct')) {\n                   "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 2095,
                "context": " Fall back to creating a new instance\n        if (class_exists('\\MemberpressAiAssistant\\Tools\\Member"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 2107,
                "context": "w MemberPressService instance\n                if (class_exists('\\MemberpressAiAssistant\\Services\\Mem"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1367,
                "context": "Check if get_plugins function exists\n        if (!function_exists('get_plugins')) {\n            requ"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1302,
                "context": "t of the operation\n     */\n    protected function get_option(array $parameters): array {\n        // "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1307,
                "context": "        // Get the option\n        $option_value = get_option($option_name);\n\n        // Check if opt"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1375,
                "context": "  // Get active plugins\n        $active_plugins = get_option('active_plugins', []);\n        \n       "
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 827,
                "context": " }\n\n        // Get user meta\n        $user_meta = get_user_meta($user_id);\n        $meta_data = [];\n"
            }
        ],
        "src/Llm/Providers/OpenAiClient.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 59,
                "context": " {\n            // Log the request\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 70,
                "context": "orRequest($request);\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 101,
                "context": "value;\n            }\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 108,
                "context": "'/chat/completions';\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 114,
                "context": "$headers, $payload);\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 121,
                "context": "e) {\n            // Log the error\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 59,
                "context": " {\n            // Log the request\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 70,
                "context": "orRequest($request);\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 101,
                "context": "value;\n            }\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 108,
                "context": "'/chat/completions';\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 114,
                "context": "$headers, $payload);\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 121,
                "context": "e) {\n            // Log the error\n            if (function_exists('error_log')) {\n                \\M"
            }
        ],
        "src/Llm/Providers/AbstractLlmClient.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 118,
                "context": " {\n        // Log the request details\n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 141,
                "context": "crotime(true) - $start_time;\n        \n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 150,
                "context": "e->get_error_code();\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 161,
                "context": "te_retrieve_body($response);\n        \n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 173,
                "context": "on_last_error_msg();\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 187,
                "context": " : 'Unknown error');\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 118,
                "context": " {\n        // Log the request details\n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 141,
                "context": "crotime(true) - $start_time;\n        \n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 150,
                "context": "e->get_error_code();\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 161,
                "context": "te_retrieve_body($response);\n        \n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 173,
                "context": "on_last_error_msg();\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 187,
                "context": " : 'Unknown error');\n            \n            if (function_exists('error_log')) {\n                \\M"
            }
        ],
        "src/Llm/Services/LlmCacheAdapter.php": [
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 224,
                "context": "  // Fallback to WordPress options\n        return get_option($key, $default);\n    }\n}"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 224,
                "context": "  // Fallback to WordPress options\n        return get_option($key, $default);\n    }\n}"
            }
        ],
        "src/Llm/Services/LlmOrchestrator.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 73,
                "context": "vider = $settings['primary_api'];\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 79,
                "context": "pai_primary_provider', 'openai');\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 93,
                "context": "nse {\n        // Add detailed logging\n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 109,
                "context": "hat we're overriding the provider\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 114,
                "context": "s');\n            }\n        }\n        \n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 121,
                "context": "  if ($cachedResponse !== null) {\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 129,
                "context": "           // Execute the request\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 135,
                "context": "est, $providerName);\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 145,
                "context": "allback provider if available\n                if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 154,
                "context": "e) {\n            // Log the error\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 164,
                "context": "Provider !== $providerName) {\n                if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 237,
                "context": "the fallback if a logger is available\n        if (function_exists('mpai_log_info')) {\n            mp"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 70,
                "context": "rimary provider from settings\n        $settings = get_option('mpai_settings', []);\n        if (!empt"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 78,
                "context": "ompatibility\n            $this->primaryProvider = get_option('mpai_primary_provider', 'openai');\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 73,
                "context": "vider = $settings['primary_api'];\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 79,
                "context": "pai_primary_provider', 'openai');\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 93,
                "context": "nse {\n        // Add detailed logging\n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 109,
                "context": "hat we're overriding the provider\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 114,
                "context": "s');\n            }\n        }\n        \n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 121,
                "context": "  if ($cachedResponse !== null) {\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 129,
                "context": "           // Execute the request\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 135,
                "context": "est, $providerName);\n            \n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 145,
                "context": "allback provider if available\n                if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 154,
                "context": "e) {\n            // Log the error\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 164,
                "context": "Provider !== $providerName) {\n                if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 237,
                "context": "the fallback if a logger is available\n        if (function_exists('mpai_log_info')) {\n            mp"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 70,
                "context": "rimary provider from settings\n        $settings = get_option('mpai_settings', []);\n        if (!empt"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 78,
                "context": "ompatibility\n            $this->primaryProvider = get_option('mpai_primary_provider', 'openai');\n   "
            }
        ],
        "src/DI/Providers/ToolRegistryProvider.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 55,
                "context": "       // Register WordPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\WordPre"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 73,
                "context": "     // Register MemberPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\MemberP"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 95,
                "context": "         // Register Content tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\Content"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 49,
                "context": "): void {\n        // Log registration\n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 61,
                "context": "ol);\n                    \n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 65,
                "context": "} catch (\\Exception $e) {\n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 84,
                "context": "ol);\n                    \n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 88,
                "context": "\n                } else {\n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 112,
                "context": "ol);\n                    \n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 116,
                "context": "} catch (\\Exception $e) {\n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 123,
                "context": "        } catch (\\Exception $e) {\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 55,
                "context": "       // Register WordPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\WordPre"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 73,
                "context": "     // Register MemberPress tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\MemberP"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 95,
                "context": "         // Register Content tool\n            if (class_exists('MemberpressAiAssistant\\Tools\\Content"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 49,
                "context": "): void {\n        // Log registration\n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 61,
                "context": "ol);\n                    \n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 65,
                "context": "} catch (\\Exception $e) {\n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 84,
                "context": "ol);\n                    \n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 88,
                "context": "\n                } else {\n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 112,
                "context": "ol);\n                    \n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 116,
                "context": "} catch (\\Exception $e) {\n                    if (function_exists('error_log')) {\n                  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 123,
                "context": "        } catch (\\Exception $e) {\n            if (function_exists('error_log')) {\n                \\M"
            }
        ],
        "src/DI/Providers/LlmServiceProvider.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 80,
                "context": "\n            // Log what we found\n            if (function_exists('error_log')) {\n                \\M"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 80,
                "context": "\n            // Log what we found\n            if (function_exists('error_log')) {\n                \\M"
            }
        ],
        "src/DI/ServiceLocator.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 72,
                "context": "       } elseif (is_string($def['definition']) && class_exists($def['definition'])) {\n            $i"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 72,
                "context": "       } elseif (is_string($def['definition']) && class_exists($def['definition'])) {\n            $i"
            }
        ],
        "src/ChatInterface.php": [
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1125,
                "context": "ce() {\n        // Don't load in admin\n        if (is_admin()) {\n            return false;\n        }\n"
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1222,
                "context": " only\" is selected\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_"
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1234,
                "context": "\"Both\" is selected\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_"
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1285,
                "context": "   'reason' => $reason,\n            'is_admin' => is_admin(),\n            'wp_doing_ajax' => wp_doin"
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 382,
                "context": "R['REQUEST_URI'] ?? 'unknown';\n        $is_ajax = wp_doing_ajax();\n        $user_id = get_current_us"
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1135,
                "context": "       // Don't load in AJAX requests\n        if (wp_doing_ajax()) {\n            return false;\n     "
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1222,
                "context": "ted\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_CRON');\n       "
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1234,
                "context": "ted\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_CRON');\n       "
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1259,
                "context": "ng AJAX requests (except our own)\n            if (wp_doing_ajax() && (!isset($_REQUEST['action']) ||"
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1286,
                "context": "in' => is_admin(),\n            'wp_doing_ajax' => wp_doing_ajax(),\n            'settings_available' "
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 733,
                "context": "e current user ID if logged in\n        $user_id = is_user_logged_in() ? get_current_user_id() : 0;\n\n"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 1096,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            return new \\WP_"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 1310,
                "context": "calize_script('mpai-chat', 'mpai_user_logged_in', is_user_logged_in());\n        \n        // If user "
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 1313,
                "context": " logged in, get their conversation ID\n        if (is_user_logged_in()) {\n            $user_id = get_"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 1303,
                "context": "'memberpress-ai/v1/chat'),\n            'debug' => defined('WP_DEBUG') && WP_DEBUG,\n            'maxM"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1106,
                "context": "d based on your specific requirements\n        if (function_exists('current_user_can') && !current_us"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 453,
                "context": " direct option access\n            $raw_settings = get_option('mpai_settings', []);\n            if (i"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1154,
                "context": " direct option access\n            $raw_settings = get_option('mpai_settings', []);\n            if (i"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1209,
                "context": "settings_available) {\n            $raw_settings = get_option('mpai_settings', []);\n            if (i"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 1332,
                "context": " getUserConversationId($user_id) {\n        return get_user_meta($user_id, 'mpai_conversation_id', tr"
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1125,
                "context": "ce() {\n        // Don't load in admin\n        if (is_admin()) {\n            return false;\n        }\n"
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1222,
                "context": " only\" is selected\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_"
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1234,
                "context": "\"Both\" is selected\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_"
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 1285,
                "context": "   'reason' => $reason,\n            'is_admin' => is_admin(),\n            'wp_doing_ajax' => wp_doin"
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 382,
                "context": "R['REQUEST_URI'] ?? 'unknown';\n        $is_ajax = wp_doing_ajax();\n        $user_id = get_current_us"
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1135,
                "context": "       // Don't load in AJAX requests\n        if (wp_doing_ajax()) {\n            return false;\n     "
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1222,
                "context": "ted\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_CRON');\n       "
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1234,
                "context": "ted\n                $should_load = is_admin() && !wp_doing_ajax() && !defined('DOING_CRON');\n       "
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1259,
                "context": "ng AJAX requests (except our own)\n            if (wp_doing_ajax() && (!isset($_REQUEST['action']) ||"
            },
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 1286,
                "context": "in' => is_admin(),\n            'wp_doing_ajax' => wp_doing_ajax(),\n            'settings_available' "
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 733,
                "context": "e current user ID if logged in\n        $user_id = is_user_logged_in() ? get_current_user_id() : 0;\n\n"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 1096,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            return new \\WP_"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 1310,
                "context": "calize_script('mpai-chat', 'mpai_user_logged_in', is_user_logged_in());\n        \n        // If user "
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 1313,
                "context": " logged in, get their conversation ID\n        if (is_user_logged_in()) {\n            $user_id = get_"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 1303,
                "context": "'memberpress-ai/v1/chat'),\n            'debug' => defined('WP_DEBUG') && WP_DEBUG,\n            'maxM"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1106,
                "context": "d based on your specific requirements\n        if (function_exists('current_user_can') && !current_us"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 453,
                "context": " direct option access\n            $raw_settings = get_option('mpai_settings', []);\n            if (i"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1154,
                "context": " direct option access\n            $raw_settings = get_option('mpai_settings', []);\n            if (i"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 1209,
                "context": "settings_available) {\n            $raw_settings = get_option('mpai_settings', []);\n            if (i"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 1332,
                "context": " getUserConversationId($user_id) {\n        return get_user_meta($user_id, 'mpai_conversation_id', tr"
            }
        ],
        "src/Admin/MPAIAdminMenu.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 418,
                "context": "ion mpai_is_memberpress_active(): bool {\n    if (!function_exists('is_plugin_active')) {\n        inc"
            },
            {
                "pattern": "is_plugin_active\\s*\\(",
                "match": "is_plugin_active(",
                "line": 422,
                "context": "admin/includes/plugin.php';\n    }\n    \n    return is_plugin_active('memberpress/memberpress.php');\n}"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 418,
                "context": "ion mpai_is_memberpress_active(): bool {\n    if (!function_exists('is_plugin_active')) {\n        inc"
            },
            {
                "pattern": "is_plugin_active\\s*\\(",
                "match": "is_plugin_active(",
                "line": 422,
                "context": "admin/includes/plugin.php';\n    }\n    \n    return is_plugin_active('memberpress/memberpress.php');\n}"
            }
        ],
        "src/Admin/MPAIAjaxHandler.php": [
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 89,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            $this->log('Cha"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 227,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            wp_send_json_er"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 283,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            $this->log('Cha"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 89,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            $this->log('Cha"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 227,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            wp_send_json_er"
            },
            {
                "pattern": "is_user_logged_in\\s*\\(\\s*\\)",
                "match": "is_user_logged_in()",
                "line": 283,
                "context": "       // Check if user is logged in\n        if (!is_user_logged_in()) {\n            $this->log('Cha"
            }
        ],
        "src/Admin/MPAIKeyManager.php": [
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 185,
                "context": "/ Must be in WordPress admin context\n        if (!is_admin()) {\n            $this->log_error('Not in"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 117,
                "context": "ey from WordPress options\n        $all_settings = get_option('mpai_settings', []);\n        \\Memberpr"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 144,
                "context": " = \"mpai_{$service_type}_api_key\";\n        $key = get_option($option_name, '');\n        \n        if "
            },
            {
                "pattern": "is_admin\\s*\\(\\s*\\)",
                "match": "is_admin()",
                "line": 185,
                "context": "/ Must be in WordPress admin context\n        if (!is_admin()) {\n            $this->log_error('Not in"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 117,
                "context": "ey from WordPress options\n        $all_settings = get_option('mpai_settings', []);\n        \\Memberpr"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 144,
                "context": " = \"mpai_{$service_type}_api_key\";\n        $key = get_option($option_name, '');\n        \n        if "
            }
        ],
        "src/Admin/MPAIPostHandler.php": [
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 122,
                "context": "rification in development environment\n        if (defined('WP_DEBUG') && WP_DEBUG) {\n            Log"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 122,
                "context": "rification in development environment\n        if (defined('WP_DEBUG') && WP_DEBUG) {\n            Log"
            }
        ],
        "src/Agents/SystemAgent.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 292,
                "context": "nsure plugin functions are available\n        if (!function_exists('get_plugins')) {\n            requ"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 307,
                "context": "nformation\n        $update_data = [];\n        if (function_exists('wp_get_update_data')) {\n         "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 332,
                "context": "  $new_version = '';\n            \n            if (function_exists('get_site_transient')) {\n         "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 298,
                "context": "lugins = get_plugins();\n        $active_plugins = get_option('active_plugins');\n        \n        $pl"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 292,
                "context": "nsure plugin functions are available\n        if (!function_exists('get_plugins')) {\n            requ"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 307,
                "context": "nformation\n        $update_data = [];\n        if (function_exists('wp_get_update_data')) {\n         "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 332,
                "context": "  $new_version = '';\n            \n            if (function_exists('get_site_transient')) {\n         "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 298,
                "context": "lugins = get_plugins();\n        $active_plugins = get_option('active_plugins');\n        \n        $pl"
            }
        ],
        "src/Agents/MemberPressAgent.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 246,
                "context": "king if the MeprProduct class exists\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 409,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 541,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 668,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 804,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1017,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1211,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1349,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1520,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 246,
                "context": "king if the MeprProduct class exists\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 409,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 541,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 668,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 804,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1017,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1211,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1349,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprRule')) {\n            if ($this"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1520,
                "context": "   // Check if MemberPress is active\n        if (!class_exists('\\MeprProduct')) {\n            if ($t"
            }
        ],
        "src/Utilities/DebugLogger.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 26,
                "context": " Check if debug logs should be suppressed\n    if (class_exists('\\\\MemberpressAiAssistant\\\\Utilities\\"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 26,
                "context": " Check if debug logs should be suppressed\n    if (class_exists('\\\\MemberpressAiAssistant\\\\Utilities\\"
            }
        ],
        "src/Utilities/LoggingUtility.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 177,
                "context": "og using WordPress error_log function\n        if (function_exists('error_log')) {\n            error_"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 177,
                "context": "og using WordPress error_log function\n        if (function_exists('error_log')) {\n            error_"
            }
        ],
        "src/Orchestration/ContextManager.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 650,
                "context": " method in WordPress environment)\n            if (function_exists('set_transient')) {\n              "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 681,
                "context": " method in WordPress environment)\n            if (function_exists('set_transient')) {\n              "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 765,
                "context": "ation's data first\n        if ($conversationId && function_exists('get_transient')) {\n            //"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 810,
                "context": "nsient exists before trying to get it\n        if (function_exists('get_option') && $conversationId) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 828,
                "context": "ess transients with legacy key format\n        if (function_exists('get_transient')) {\n            $c"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 977,
                "context": " // Delete the transient if it exists\n        if (function_exists('delete_transient')) {\n           "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 650,
                "context": " method in WordPress environment)\n            if (function_exists('set_transient')) {\n              "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 681,
                "context": " method in WordPress environment)\n            if (function_exists('set_transient')) {\n              "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 765,
                "context": "ation's data first\n        if ($conversationId && function_exists('get_transient')) {\n            //"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 810,
                "context": "nsient exists before trying to get it\n        if (function_exists('get_option') && $conversationId) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 828,
                "context": "ess transients with legacy key format\n        if (function_exists('get_transient')) {\n            $c"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 977,
                "context": " // Delete the transient if it exists\n        if (function_exists('delete_transient')) {\n           "
            }
        ],
        "src/Orchestration/AgentOrchestrator.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1029,
                "context": "   // Add logging for message history\n        if (function_exists('error_log')) {\n            \\Membe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1029,
                "context": "   // Add logging for message history\n        if (function_exists('error_log')) {\n            \\Membe"
            }
        ],
        "src/Registry/AgentRegistry.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 193,
                "context": "oreAgentClasses as $agentClass) {\n            if (class_exists($agentClass)) {\n                try {"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 245,
                "context": "ginAgentClasses as $agentClass) {\n            if (class_exists($agentClass)) {\n                try {"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 282,
                "context": "file);\n            \n            if ($className && class_exists($className)) {\n                try {\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 193,
                "context": "oreAgentClasses as $agentClass) {\n            if (class_exists($agentClass)) {\n                try {"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 245,
                "context": "ginAgentClasses as $agentClass) {\n            if (class_exists($agentClass)) {\n                try {"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 282,
                "context": "file);\n            \n            if ($className && class_exists($className)) {\n                try {\n"
            }
        ],
        "src/Registry/ToolRegistry.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 193,
                "context": "$coreToolClasses as $toolClass) {\n            if (class_exists($toolClass)) {\n                try {\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 257,
                "context": "luginToolClasses as $toolClass) {\n            if (class_exists($toolClass)) {\n                try {\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 294,
                "context": "file);\n            \n            if ($className && class_exists($className)) {\n                try {\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 193,
                "context": "$coreToolClasses as $toolClass) {\n            if (class_exists($toolClass)) {\n                try {\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 257,
                "context": "luginToolClasses as $toolClass) {\n            if (class_exists($toolClass)) {\n                try {\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 294,
                "context": "file);\n            \n            if ($className && class_exists($className)) {\n                try {\n"
            }
        ],
        "src/Factory/AgentFactory.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 129,
                "context": "        // Check if the class exists\n        if (!class_exists($agentClass)) {\n            throw new"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 129,
                "context": "        // Check if the class exists\n        if (!class_exists($agentClass)) {\n            throw new"
            }
        ],
        "src/Services/ConfigurationService.php": [
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 148,
                "context": "Load TTL config from options\n        $ttlConfig = get_option('mpai_ttl_config', []);\n        if (!em"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 154,
                "context": "ns from options\n        $nonCacheableOperations = get_option('mpai_non_cacheable_operations', []);\n "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 160,
                "context": "oad strategies from options\n        $strategies = get_option('mpai_strategies', []);\n        if (!em"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 166,
                "context": " from options\n        $operationCharacteristics = get_option('mpai_operation_characteristics', []);\n"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 172,
                "context": "ming config from options\n        $warmingConfig = get_option('mpai_warming_config', []);\n        if "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 178,
                "context": "rations from options\n        $warmingOperations = get_option('mpai_warming_operations', []);\n       "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 148,
                "context": "Load TTL config from options\n        $ttlConfig = get_option('mpai_ttl_config', []);\n        if (!em"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 154,
                "context": "ns from options\n        $nonCacheableOperations = get_option('mpai_non_cacheable_operations', []);\n "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 160,
                "context": "oad strategies from options\n        $strategies = get_option('mpai_strategies', []);\n        if (!em"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 166,
                "context": " from options\n        $operationCharacteristics = get_option('mpai_operation_characteristics', []);\n"
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 172,
                "context": "ming config from options\n        $warmingConfig = get_option('mpai_warming_config', []);\n        if "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 178,
                "context": "rations from options\n        $warmingOperations = get_option('mpai_warming_operations', []);\n       "
            }
        ],
        "src/Services/Settings/SettingsModelService.php": [
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 291,
                "context": "t settings from options\n        $saved_settings = get_option($this->option_name, []);\n        \n     "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 291,
                "context": "t settings from options\n        $saved_settings = get_option($this->option_name, []);\n        \n     "
            }
        ],
        "src/Services/Adapters/UserAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 40,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 80,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 152,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 502,
                "context": "ck if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 646,
                "context": "ck if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 40,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 80,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 152,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprUser')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 502,
                "context": "ck if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 646,
                "context": "ck if MemberPress product exists\n            if (!class_exists('\\MeprProduct')) {\n                th"
            }
        ],
        "src/Services/Adapters/ProductAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 38,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 69,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 139,
                "context": "  ]);\n            }\n            \n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 604,
                "context": " might have different methods\n                if (class_exists('\\MeprRule')) {\n                    /"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 38,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 69,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 139,
                "context": "  ]);\n            }\n            \n            if (!class_exists('\\MeprProduct')) {\n                th"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 604,
                "context": " might have different methods\n                if (class_exists('\\MeprRule')) {\n                    /"
            }
        ],
        "src/Services/Adapters/RuleAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 38,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 69,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 145,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 38,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 69,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 145,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprRule')) {\n                throw"
            }
        ],
        "src/Services/Adapters/TransactionAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 40,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n              "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 80,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n              "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 202,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n              "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 40,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n              "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 80,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n              "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 202,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprTransaction')) {\n              "
            }
        ],
        "src/Services/Adapters/SubscriptionAdapter.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 40,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n             "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 80,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n             "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 181,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n             "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 40,
                "context": "ion get(int $id) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n             "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 80,
                "context": "rgs = []): array {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n             "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 181,
                "context": "ate(array $data) {\n        try {\n            if (!class_exists('\\MeprSubscription')) {\n             "
            }
        ],
        "src/Services/Transformers/UserTransformer.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 71,
                "context": "getStatus(\\MeprUser $user): string {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 231,
                "context": "getAddress(\\MeprUser $user): array {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 252,
                "context": "stomFields(\\MeprUser $user): array {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 311,
                "context": "etLoginCount(\\MeprUser $user): int {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 327,
                "context": "tion getLastLogin(\\MeprUser $user) {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 75,
                "context": "n 'unknown';\n        }\n        \n        $status = get_user_meta($user->ID, '_mepr_user_status', true"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 236,
                "context": "     \n        return [\n            'address_1' => get_user_meta($user->ID, 'mepr-address-one', true)"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 237,
                "context": "r-address-one', true),\n            'address_2' => get_user_meta($user->ID, 'mepr-address-two', true)"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 238,
                "context": " 'mepr-address-two', true),\n            'city' => get_user_meta($user->ID, 'mepr-address-city', true"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 239,
                "context": "mepr-address-city', true),\n            'state' => get_user_meta($user->ID, 'mepr-address-state', tru"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 240,
                "context": "'mepr-address-state', true),\n            'zip' => get_user_meta($user->ID, 'mepr-address-zip', true)"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 241,
                "context": "epr-address-zip', true),\n            'country' => get_user_meta($user->ID, 'mepr-address-country', t"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 257,
                "context": "        // Get all user meta\n        $user_meta = get_user_meta($user->ID);\n        \n        // Filt"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 315,
                "context": "turn 0;\n        }\n        \n        $login_count = get_user_meta($user->ID, '_mepr_login_count', true"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 331,
                "context": "rn null;\n        }\n        \n        $last_login = get_user_meta($user->ID, '_mepr_last_login_date', "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 71,
                "context": "getStatus(\\MeprUser $user): string {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 231,
                "context": "getAddress(\\MeprUser $user): array {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 252,
                "context": "stomFields(\\MeprUser $user): array {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 311,
                "context": "etLoginCount(\\MeprUser $user): int {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 327,
                "context": "tion getLastLogin(\\MeprUser $user) {\n        if (!function_exists('get_user_meta')) {\n            re"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 75,
                "context": "n 'unknown';\n        }\n        \n        $status = get_user_meta($user->ID, '_mepr_user_status', true"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 236,
                "context": "     \n        return [\n            'address_1' => get_user_meta($user->ID, 'mepr-address-one', true)"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 237,
                "context": "r-address-one', true),\n            'address_2' => get_user_meta($user->ID, 'mepr-address-two', true)"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 238,
                "context": " 'mepr-address-two', true),\n            'city' => get_user_meta($user->ID, 'mepr-address-city', true"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 239,
                "context": "mepr-address-city', true),\n            'state' => get_user_meta($user->ID, 'mepr-address-state', tru"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 240,
                "context": "'mepr-address-state', true),\n            'zip' => get_user_meta($user->ID, 'mepr-address-zip', true)"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 241,
                "context": "epr-address-zip', true),\n            'country' => get_user_meta($user->ID, 'mepr-address-country', t"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 257,
                "context": "        // Get all user meta\n        $user_meta = get_user_meta($user->ID);\n        \n        // Filt"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 315,
                "context": "turn 0;\n        }\n        \n        $login_count = get_user_meta($user->ID, '_mepr_login_count', true"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 331,
                "context": "rn null;\n        }\n        \n        $last_login = get_user_meta($user->ID, '_mepr_last_login_date', "
            }
        ],
        "src/Services/Transformers/RuleTransformer.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 258,
                "context": "rn '';\n            }\n            \n            if (class_exists('\\MeprProduct')) {\n                $p"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 258,
                "context": "rn '';\n            }\n            \n            if (class_exists('\\MeprProduct')) {\n                $p"
            }
        ],
        "src/Services/Transformers/TransactionTransformer.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 251,
                "context": "k to getting the product directly\n            if (class_exists('\\MeprProduct') && $transaction->prod"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 290,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 340,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 413,
                "context": "getting the subscription directly\n            if (class_exists('\\MeprSubscription')) {\n             "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 251,
                "context": "k to getting the product directly\n            if (class_exists('\\MeprProduct') && $transaction->prod"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 290,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 340,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $transaction->user_id"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 413,
                "context": "getting the subscription directly\n            if (class_exists('\\MeprSubscription')) {\n             "
            }
        ],
        "src/Services/Transformers/SubscriptionTransformer.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 374,
                "context": "k to getting the product directly\n            if (class_exists('\\MeprProduct') && $subscription->pro"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 413,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_i"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 463,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_i"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 374,
                "context": "k to getting the product directly\n            if (class_exists('\\MeprProduct') && $subscription->pro"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 413,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_i"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 463,
                "context": "back to getting the user directly\n            if (class_exists('\\MeprUser') && $subscription->user_i"
            }
        ],
        "src/Services/MemberPressService.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 354,
                "context": "tion isMemberPressActive(): bool {\n        return class_exists('MeprProduct') && class_exists('MeprU"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 354,
                "context": "l {\n        return class_exists('MeprProduct') && class_exists('MeprUser');\n    }\n\n    /**\n     * Ge"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 354,
                "context": "tion isMemberPressActive(): bool {\n        return class_exists('MeprProduct') && class_exists('MeprU"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 354,
                "context": "l {\n        return class_exists('MeprProduct') && class_exists('MeprUser');\n    }\n\n    /**\n     * Ge"
            }
        ],
        "src/Validation/ParameterValidator.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 694,
                "context": "tion with better object cache support\n        if (function_exists('wp_cache_flush_group')) {\n       "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 694,
                "context": "tion with better object cache support\n        if (function_exists('wp_cache_flush_group')) {\n       "
            }
        ],
        "tests/Unit/Registry/ToolRegistryTest.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 364,
                "context": "on_exists('class_exists')) {\n            function class_exists($class) {\n                return in_a"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 351,
                "context": "mock WordPress filter for core tools\n        if (!function_exists('apply_filters')) {\n            fu"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 363,
                "context": " to return true for our mock classes\n        if (!function_exists('class_exists')) {\n            fun"
            }
        ],
        "tests/Unit/Factory/AgentFactoryTest.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 218,
                "context": "     // Define the class for testing\n        if (!class_exists($validAgentClass)) {\n            eval"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 262,
                "context": "     // Define the class for testing\n        if (!class_exists($invalidAgentClass)) {\n            ev"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 288,
                "context": "     // Define the class for testing\n        if (!class_exists($abstractAgentClass)) {\n            e"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 313,
                "context": " a function to mock WordPress filter\n        if (!function_exists('apply_filters')) {\n            fu"
            }
        ],
        "scripts/cross-reference-validator.php": [
            {
                "pattern": "WP_ENV",
                "match": "WP_ENV",
                "line": 558,
                "context": "'defined\\s*\\(\\s*[\\'\"]WP_DEBUG[\\'\"]',\n            'WP_ENV',\n            'SCRIPT_DEBUG',\n            \n"
            },
            {
                "pattern": "SCRIPT_DEBUG",
                "match": "SCRIPT_DEBUG",
                "line": 559,
                "context": "P_DEBUG[\\'\"]',\n            'WP_ENV',\n            'SCRIPT_DEBUG',\n            \n            // Plugin "
            }
        ],
        "templates/dashboard-tab.php": [
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 35,
                "context": "\n\n// Check if debug mode is enabled\n$debug_mode = defined('WP_DEBUG') && WP_DEBUG;\n?>\n\n<div class=\"m"
            }
        ],
        "memberpress-ai-assistant.php": [
            {
                "pattern": "wp_doing_ajax\\s*\\(\\s*\\)",
                "match": "wp_doing_ajax()",
                "line": 607,
                "context": "X, cron, or other system request\n            if (!wp_doing_ajax() && !wp_doing_cron() && !defined('D"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 372,
                "context": "level if no setting is available\n        else if (defined('WP_DEBUG') && WP_DEBUG) {\n            $lo"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 396,
                "context": "{\n        // Enable detailed logging\n        if (!defined('WP_DEBUG')) {\n            define('WP_DEBU"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 523,
                "context": "ress debug log if enabled\n                    if (defined('WP_DEBUG') && WP_DEBUG && defined('WP_DEB"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 533,
                "context": "ress debug log if enabled\n                    if (defined('WP_DEBUG') && WP_DEBUG && defined('WP_DEB"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 543,
                "context": "ress debug log if enabled\n                    if (defined('WP_DEBUG') && WP_DEBUG && defined('WP_DEB"
            },
            {
                "pattern": "defined\\s*\\(\\s*['\"]WP_DEBUG['\"]",
                "match": "defined('WP_DEBUG'",
                "line": 553,
                "context": "ress debug log if enabled\n                    if (defined('WP_DEBUG') && WP_DEBUG && defined('WP_DEB"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 450,
                "context": "   // Check if MemberPress is active\n        if (!function_exists('is_plugin_active')) {\n           "
            },
            {
                "pattern": "is_plugin_active\\s*\\(",
                "match": "is_plugin_active(",
                "line": 458,
                "context": " MemberPress is installed and active\n        if (!is_plugin_active($memberpress_plugin)) {\n         "
            },
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 130,
                "context": "nce, so we'll check if it's already been run\nif (!get_option('mpai_debug_logs_replaced')) {\n    // I"
            }
        ],
        "vendor/myclabs/deep-copy/src/DeepCopy/deep_copy.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 7,
                "context": "py;\n\nuse function function_exists;\n\nif (false === function_exists('DeepCopy\\deep_copy')) {\n    /**\n "
            }
        ],
        "vendor/staabm/side-effects-detector/tests/SideEffectsDetectorTest.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 85,
                "context": "ect::STANDARD_OUTPUT]];\n        yield [\"<?php if (class_exists('autoload_root', false)) echo 'skip A"
            }
        ],
        "vendor/nikic/php-parser/tools/fuzzing/target.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 10,
                "context": "Parser\\Node\\Stmt;\nuse PhpParser\\NodeVisitor;\n\nif (class_exists(PhpParser\\Parser\\Php7::class)) {\n    "
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/compatibility_tokens.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 5,
                "context": "are(strict_types=1);\n\nnamespace PhpParser;\n\nif (!\\function_exists('PhpParser\\defineCompatibilityToke"
            }
        ],
        "vendor/nikic/php-parser/lib/PhpParser/JsonDecoder.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 97,
                "context": "ode\\\\' . strtr($nodeType, '_', '\\\\');\n        if (class_exists($className)) {\n            return $cl"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 102,
                "context": "        }\n\n        $className .= '_';\n        if (class_exists($className)) {\n            return $cl"
            }
        ],
        "vendor/composer/ClassLoader.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 367,
                "context": "ix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_ge"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Tests/NamingConventions/PrefixAllGlobalsUnitTest.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 58,
                "context": "fined( '\\E_DEPRECATED' ) ) ? 0 : 1,\n\t\t\t\t\t238 => ( class_exists( '\\IntlTimeZone' ) ) ? 0 : 1,\n\t\t\t\t\t31"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 55,
                "context": ",\n\t\t\t\t\t90  => 1,\n\t\t\t\t\t// Backfills.\n\t\t\t\t\t225 => ( function_exists( '\\mb_strpos' ) ) ? 0 : 1,\n\t\t\t\t\t23"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 56,
                "context": "n_exists( '\\mb_strpos' ) ) ? 0 : 1,\n\t\t\t\t\t230 => ( function_exists( '\\array_column' ) ) ? 0 : 1,\n\t\t\t\t"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniffs/WP/DeprecatedFunctionsSniff.php": [
            {
                "pattern": "get_option\\s*\\(",
                "match": "get_option(",
                "line": 188,
                "context": "\n\t\t),\n\t\t'get_settings' => array(\n\t\t\t'alt'     => 'get_option()',\n\t\t\t'version' => '2.1.0',\n\t\t),\n\t\t'li"
            },
            {
                "pattern": "get_user_meta\\s*\\(",
                "match": "get_user_meta(",
                "line": 571,
                "context": "\n\t\t),\n\t\t'get_usermeta' => array(\n\t\t\t'alt'     => 'get_user_meta()',\n\t\t\t'version' => '3.0.0',\n\t\t),\n\t\t"
            }
        ],
        "vendor/wp-coding-standards/wpcs/WordPress/Sniffs/NamingConventions/PrefixAllGlobalsSniff.php": [
            {
                "pattern": "SCRIPT_DEBUG",
                "match": "SCRIPT_DEBUG",
                "line": 159,
                "context": "    => true,\n\t\t'WP_CACHE'             => true,\n\t\t'SCRIPT_DEBUG'         => true,\n\t\t'MEDIA_TRASH'    "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 419,
                "context": "r ]['type'] ) {\n\t\t\t\t\t\tcase 'T_CLASS':\n\t\t\t\t\t\t\tif ( class_exists( '\\\\' . $item_name, false ) ) {\n\t\t\t\t\t"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 194,
                "context": "s.\n\t *\n\t * Using this list rather than a call to `function_exists()` prevents\n\t * false negatives fr"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 437,
                "context": "ionUse.NewFunctions.trait_existsFound\n\t\t\t\t\t\t\tif ( function_exists( '\\trait_exists' ) && trait_exists"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 981,
                "context": "}\n\n\t\t\t$prefix_length = strlen( $prefix );\n\t\t\tif ( function_exists( 'iconv_strlen' ) ) {\n\t\t\t\t$prefix_"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/phpstan/bootstrap.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 51,
                "context": "es']['a4a119a56e50fbb293281d9a48007e0e'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Php80\\Php80::class,"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 60,
                "context": "es']['0e6d7bf4a5811bfa5cf40c5ccd6fae6a'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Mbstring\\Mbstring::"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 69,
                "context": "es']['e69f7f6ee287b969198c3c9d6777bd38'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Intl\\Normalizer\\Nor"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 79,
                "context": "es']['8825ede83f2f289127722d4e842cf7e8'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Intl\\Grapheme\\Graph"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 89,
                "context": "es']['23c18046f52bef3eea034657bafda50f'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Php81\\Php81::class,"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/phpstan/extension-installer/src/Plugin.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 182,
                "context": "l;\n\t\tif (count($phpstanVersionConstraints) > 0 && class_exists(Intervals::class)) {\n\t\t\tif (count($ph"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/composer/ClassLoader.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 367,
                "context": "ix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_ge"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/nette/utils/src/Utils/Strings.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 137,
                "context": "\t// convert to compressed normal form (NFC)\n\t\tif (class_exists('Normalizer', false) && ($n = \\Normal"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 191,
                "context": " = null;\n\t\tif ($transliterator === null) {\n\t\t\tif (class_exists('Transliterator', false)) {\n\t\t\t\t$tran"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 354,
                "context": "tring $right, ?int $length = null): bool\n\t{\n\t\tif (class_exists('Normalizer', false)) {\n\t\t\t$left = \\N"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 116,
                "context": "int $start, ?int $length = null): string\n\t{\n\t\tif (function_exists('mb_substr')) {\n\t\t\treturn mb_subst"
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/nette/utils/src/Utils/Validators.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 372,
                "context": "c function isType(string $type): bool\n\t{\n\t\treturn class_exists($type) || interface_exists($type) || "
            }
        ],
        "vendor/phpunit/phpunit/tools/.phpstan/vendor/nette/utils/src/Utils/Image.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 752,
                "context": "): mixed\n\t{\n\t\t$function = 'image' . $name;\n\t\tif (!function_exists($function)) {\n\t\t\tObjectHelpers::st"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/generate-global-assert-wrappers.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 73,
                "context": "    $constraintMethods .= \\sprintf(\n        \"if (!function_exists('PHPUnit\\Framework\\\\\" . $method->g"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 105,
                "context": "...\\\\func_get_args());\\n}\";\n\n    $buffer .= \"if (!function_exists('PHPUnit\\Framework\\\\\" . $method->g"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 113,
                "context": " .= $constraintMethods;\n\n$buffer .= <<<'EOT'\nif (!function_exists('PHPUnit\\Framework\\callback')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 127,
                "context": "return Assert::callback($callback);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\any')) {\n    /*"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 138,
                "context": " return new AnyInvokedCountMatcher;\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\never')) {\n    "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 148,
                "context": " return new InvokedCountMatcher(0);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\atLeast')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 161,
                "context": "    $requiredInvocations\n        );\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\atLeastOnce')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 171,
                "context": "turn new InvokedAtLeastOnceMatcher;\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\once')) {\n    /"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 181,
                "context": " return new InvokedCountMatcher(1);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\exactly')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 192,
                "context": "rn new InvokedCountMatcher($count);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\atMost')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 203,
                "context": "tCountMatcher($allowedInvocations);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\throwException'"
            }
        ],
        "vendor/phpunit/phpunit/build/scripts/phar-set-timestamps/vendor/composer/ClassLoader.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 367,
                "context": "ix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_ge"
            }
        ],
        "vendor/phpunit/phpunit/src/TextUI/Application.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 839,
                "context": "Name] = explode('::', $method);\n\n            if (!class_exists($className) || !method_exists($classN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 811,
                "context": "s()['functions'] as $function) {\n            if (!function_exists($function)) {\n                Even"
            }
        ],
        "vendor/phpunit/phpunit/src/Util/PHP/DefaultJobRunner.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 182,
                "context": "seif ($runtime->hasXdebug()) {\n            assert(function_exists('xdebug_is_debugger_active'));\n\n  "
            }
        ],
        "vendor/phpunit/phpunit/src/Util/ExcludeList.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 205,
                "context": "AMES as $className => $parent) {\n            if (!class_exists($className)) {\n                contin"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/TestSuite.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 488,
                "context": "ction isForTestClass(): bool\n    {\n        return class_exists($this->name, false) && is_subclass_of"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Assert/Functions.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 66,
                "context": "PUnit\\Util\\Xml\\XmlException;\nuse Throwable;\n\nif (!function_exists('PHPUnit\\Framework\\assertArrayIsEq"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 87,
                "context": "ringListOfKeys(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertArrayIsEq"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 108,
                "context": "ringListOfKeys(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertArrayIsId"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 129,
                "context": "ringListOfKeys(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertArrayIsId"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 150,
                "context": "ringListOfKeys(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertArrayHasK"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 169,
                "context": "ertArrayHasKey(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertArrayNotH"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 188,
                "context": "ArrayNotHasKey(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsList'))"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 204,
                "context": "::assertIsList(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContains'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 223,
                "context": "assertContains(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsE"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 239,
                "context": "ContainsEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotContai"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 258,
                "context": "ertNotContains(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotContai"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 274,
                "context": "ContainsEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 296,
                "context": "rtContainsOnly(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 314,
                "context": "tainsOnlyArray(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 332,
                "context": "ntainsOnlyBool(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 350,
                "context": "nsOnlyCallable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 368,
                "context": "tainsOnlyFloat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 386,
                "context": "ontainsOnlyInt(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 404,
                "context": "nsOnlyIterable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 422,
                "context": "ntainsOnlyNull(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 440,
                "context": "insOnlyNumeric(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 458,
                "context": "ainsOnlyObject(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 476,
                "context": "nsOnlyResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 494,
                "context": "ClosedResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 512,
                "context": "ainsOnlyScalar(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 530,
                "context": "ainsOnlyString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 550,
                "context": "nlyInstancesOf(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotContai"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 572,
                "context": "otContainsOnly(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 590,
                "context": "nsNotOnlyArray(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 608,
                "context": "insNotOnlyBool(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 626,
                "context": "otOnlyCallable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 644,
                "context": "nsNotOnlyFloat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 662,
                "context": "ainsNotOnlyInt(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 680,
                "context": "otOnlyIterable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 698,
                "context": "insNotOnlyNull(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 716,
                "context": "NotOnlyNumeric(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 734,
                "context": "sNotOnlyObject(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 752,
                "context": "otOnlyResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 770,
                "context": "ClosedResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 788,
                "context": "sNotOnlyScalar(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 806,
                "context": "sNotOnlyString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertContainsN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 826,
                "context": "nlyInstancesOf(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertCount')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 846,
                "context": "t::assertCount(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotCount'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 866,
                "context": "assertNotCount(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertEquals'))"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 882,
                "context": "::assertEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertEqualsCan"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 898,
                "context": "Canonicalizing(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertEqualsIgn"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 914,
                "context": "lsIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertEqualsWit"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 930,
                "context": "qualsWithDelta(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotEquals"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 946,
                "context": "ssertNotEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotEquals"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 962,
                "context": "Canonicalizing(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotEquals"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 978,
                "context": "lsIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotEquals"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 994,
                "context": "qualsWithDelta(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertObjectEqu"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1008,
                "context": "rtObjectEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertObjectNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1022,
                "context": "bjectNotEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertEmpty')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1041,
                "context": "t::assertEmpty(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotEmpty'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1060,
                "context": "assertNotEmpty(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertGreaterTh"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1076,
                "context": "ertGreaterThan(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertGreaterTh"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1092,
                "context": "terThanOrEqual(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertLessThan'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1108,
                "context": "assertLessThan(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertLessThanO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1124,
                "context": "essThanOrEqual(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileEqual"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1141,
                "context": "sertFileEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileEqual"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1158,
                "context": "Canonicalizing(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileEqual"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1175,
                "context": "lsIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileNotEq"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1192,
                "context": "tFileNotEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileNotEq"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1209,
                "context": "Canonicalizing(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileNotEq"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1226,
                "context": "lsIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringEqu"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1243,
                "context": "ringEqualsFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringEqu"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1260,
                "context": "Canonicalizing(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringEqu"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1277,
                "context": "leIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1294,
                "context": "gNotEqualsFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1311,
                "context": "Canonicalizing(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1328,
                "context": "leIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsReadabl"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1344,
                "context": "sertIsReadable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotRead"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1360,
                "context": "tIsNotReadable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsWritabl"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1376,
                "context": "sertIsWritable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotWrit"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1392,
                "context": "tIsNotWritable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertDirectory"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1408,
                "context": "irectoryExists(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertDirectory"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1424,
                "context": "ryDoesNotExist(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertDirectory"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1440,
                "context": "toryIsReadable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertDirectory"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1456,
                "context": "yIsNotReadable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertDirectory"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1472,
                "context": "toryIsWritable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertDirectory"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1488,
                "context": "yIsNotWritable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileExist"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1504,
                "context": "sertFileExists(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileDoesN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1520,
                "context": "leDoesNotExist(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileIsRea"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1536,
                "context": "FileIsReadable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileIsNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1552,
                "context": "eIsNotReadable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileIsWri"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1568,
                "context": "FileIsWritable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileIsNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1584,
                "context": "eIsNotWritable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertTrue')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1602,
                "context": "rt::assertTrue(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotTrue')"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1620,
                "context": ":assertNotTrue(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFalse')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1638,
                "context": "t::assertFalse(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotFalse'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1656,
                "context": "assertNotFalse(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNull')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1674,
                "context": "rt::assertNull(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotNull')"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1692,
                "context": ":assertNotNull(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFinite'))"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1708,
                "context": "::assertFinite(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertInfinite'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1724,
                "context": "assertInfinite(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNan')) {\n"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1740,
                "context": "ert::assertNan(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertObjectHas"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1756,
                "context": "ectHasProperty(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertObjectNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1772,
                "context": "NotHasProperty(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertSame')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1796,
                "context": "rt::assertSame(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotSame')"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1814,
                "context": ":assertNotSame(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertInstanceO"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1838,
                "context": "sertInstanceOf(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotInstan"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1861,
                "context": "tNotInstanceOf(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsArray')"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1880,
                "context": ":assertIsArray(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsBool'))"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1899,
                "context": "::assertIsBool(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsFloat')"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1918,
                "context": ":assertIsFloat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsInt')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1937,
                "context": "t::assertIsInt(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNumeric"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1956,
                "context": "ssertIsNumeric(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsObject'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1975,
                "context": "assertIsObject(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsResourc"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 1994,
                "context": "sertIsResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsClosedR"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2013,
                "context": "ClosedResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsString'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2032,
                "context": "assertIsString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsScalar'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2051,
                "context": "assertIsScalar(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsCallabl"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2070,
                "context": "sertIsCallable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsIterabl"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2089,
                "context": "sertIsIterable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotArra"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2108,
                "context": "sertIsNotArray(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotBool"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2127,
                "context": "ssertIsNotBool(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotFloa"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2146,
                "context": "sertIsNotFloat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotInt'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2165,
                "context": "assertIsNotInt(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotNume"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2184,
                "context": "rtIsNotNumeric(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotObje"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2203,
                "context": "ertIsNotObject(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotReso"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2222,
                "context": "tIsNotResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotClos"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2241,
                "context": "ClosedResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotStri"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2260,
                "context": "ertIsNotString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotScal"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2279,
                "context": "ertIsNotScalar(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotCall"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2298,
                "context": "tIsNotCallable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertIsNotIter"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2317,
                "context": "tIsNotIterable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertMatchesRe"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2333,
                "context": "ularExpression(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertDoesNotMa"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2349,
                "context": "ularExpression(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertSameSize'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2371,
                "context": "assertSameSize(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertNotSameSi"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2393,
                "context": "ertNotSameSize(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringCon"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2407,
                "context": "ingLineEndings(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringEqu"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2423,
                "context": "ingLineEndings(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileMatch"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2439,
                "context": "eMatchesFormat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertFileMatch"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2455,
                "context": "chesFormatFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringMat"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2471,
                "context": "gMatchesFormat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringMat"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2487,
                "context": "chesFormatFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringSta"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2506,
                "context": "ringStartsWith(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringSta"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2525,
                "context": "gStartsNotWith(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringCon"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2539,
                "context": "ContainsString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringCon"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2553,
                "context": "ngIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2567,
                "context": "ContainsString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringNot"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2581,
                "context": "ngIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringEnd"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2600,
                "context": "StringEndsWith(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertStringEnd"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2619,
                "context": "ingEndsNotWith(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertXmlFileEq"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2637,
                "context": "eEqualsXmlFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertXmlFileNo"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2654,
                "context": "tEqualsXmlFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertXmlString"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2671,
                "context": "gEqualsXmlFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertXmlString"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2688,
                "context": "tEqualsXmlFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertXmlString"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2705,
                "context": "qualsXmlString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertXmlString"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2722,
                "context": "qualsXmlString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertThat')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2738,
                "context": "rt::assertThat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertJson')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2754,
                "context": "rt::assertJson(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertJsonStrin"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2770,
                "context": "ualsJsonString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertJsonStrin"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2786,
                "context": "ualsJsonString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertJsonStrin"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2802,
                "context": "EqualsJsonFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertJsonStrin"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2818,
                "context": "EqualsJsonFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertJsonFileE"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2834,
                "context": "EqualsJsonFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\assertJsonFileN"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2850,
                "context": "EqualsJsonFile(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\logicalAnd')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2857,
                "context": "rt::logicalAnd(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\logicalOr')) {\n"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2864,
                "context": "ert::logicalOr(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\logicalNot')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2871,
                "context": "rt::logicalNot(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\logicalXor')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2878,
                "context": "rt::logicalXor(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\anything')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2885,
                "context": "sert::anything(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isTrue')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2892,
                "context": "Assert::isTrue(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isFalse')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2899,
                "context": "ssert::isFalse(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isJson')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2906,
                "context": "Assert::isJson(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isNull')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2913,
                "context": "Assert::isNull(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isFinite')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2920,
                "context": "sert::isFinite(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isInfinite')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2927,
                "context": "rt::isInfinite(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isNan')) {\n    "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2934,
                "context": " Assert::isNan(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsEqual')"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2941,
                "context": ":containsEqual(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsIdentic"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2948,
                "context": "tainsIdentical(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnly'))"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2955,
                "context": "::containsOnly(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyArr"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2962,
                "context": "tainsOnlyArray(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyBoo"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2969,
                "context": "ntainsOnlyBool(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyCal"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2976,
                "context": "nsOnlyCallable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyFlo"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2983,
                "context": "tainsOnlyFloat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyInt"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2990,
                "context": "ontainsOnlyInt(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyIte"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 2997,
                "context": "nsOnlyIterable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyNul"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3004,
                "context": "ntainsOnlyNull(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyNum"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3011,
                "context": "insOnlyNumeric(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyObj"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3018,
                "context": "ainsOnlyObject(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyRes"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3025,
                "context": "nsOnlyResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyClo"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3032,
                "context": "ClosedResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlySca"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3039,
                "context": "ainsOnlyScalar(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyStr"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3046,
                "context": "ainsOnlyString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\containsOnlyIns"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3053,
                "context": "nlyInstancesOf(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\arrayHasKey')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3060,
                "context": "t::arrayHasKey(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isList')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3067,
                "context": "Assert::isList(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\equalTo')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3074,
                "context": "ssert::equalTo(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\equalToCanonica"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3081,
                "context": "Canonicalizing(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\equalToIgnoring"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3088,
                "context": "ToIgnoringCase(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\equalToWithDelt"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3095,
                "context": "ualToWithDelta(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isEmpty')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3102,
                "context": "ssert::isEmpty(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isWritable')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3109,
                "context": "rt::isWritable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isReadable')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3116,
                "context": "rt::isReadable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\directoryExists"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3123,
                "context": "irectoryExists(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\fileExists')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3130,
                "context": "rt::fileExists(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\greaterThan')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3137,
                "context": "t::greaterThan(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\greaterThanOrEq"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3144,
                "context": "terThanOrEqual(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\identicalTo')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3151,
                "context": "t::identicalTo(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isInstanceOf'))"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3158,
                "context": "::isInstanceOf(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isArray')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3165,
                "context": "ssert::isArray(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isBool')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3172,
                "context": "Assert::isBool(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isCallable')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3179,
                "context": "rt::isCallable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isFloat')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3186,
                "context": "ssert::isFloat(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isInt')) {\n    "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3193,
                "context": " Assert::isInt(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isIterable')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3200,
                "context": "rt::isIterable(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isNumeric')) {\n"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3207,
                "context": "ert::isNumeric(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isObject')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3214,
                "context": "sert::isObject(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isResource')) {"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3221,
                "context": "rt::isResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isClosedResourc"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3228,
                "context": "ClosedResource(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isScalar')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3235,
                "context": "sert::isScalar(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isString')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3242,
                "context": "sert::isString(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\isType')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3249,
                "context": "Assert::isType(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\lessThan')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3256,
                "context": "sert::lessThan(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\lessThanOrEqual"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3263,
                "context": "essThanOrEqual(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\matchesRegularE"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3270,
                "context": "ularExpression(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\matches')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3277,
                "context": "ssert::matches(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\stringStartsWit"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3284,
                "context": "ringStartsWith(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\stringContains'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3291,
                "context": "stringContains(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\stringEndsWith'"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3298,
                "context": "stringEndsWith(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\stringEqualsStr"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3305,
                "context": "ingLineEndings(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\countOf')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3312,
                "context": "ssert::countOf(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\objectEquals'))"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3319,
                "context": "::objectEquals(...func_get_args());\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\callback')) {\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3333,
                "context": "return Assert::callback($callback);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\any')) {\n    /*"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3344,
                "context": " return new AnyInvokedCountMatcher;\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\never')) {\n    "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3354,
                "context": " return new InvokedCountMatcher(0);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\atLeast')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3367,
                "context": "   $requiredInvocations,\n        );\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\atLeastOnce')) "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3377,
                "context": "turn new InvokedAtLeastOnceMatcher;\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\once')) {\n    /"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3387,
                "context": " return new InvokedCountMatcher(1);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\exactly')) {\n  "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3398,
                "context": "rn new InvokedCountMatcher($count);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\atMost')) {\n   "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 3409,
                "context": "tCountMatcher($allowedInvocations);\n    }\n}\n\nif (!function_exists('PHPUnit\\Framework\\throwException'"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/DataProviderTestSuite.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 80,
                "context": "] = explode('::', $this->name());\n\n        assert(class_exists($className));\n        assert($methodN"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Assert.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1755,
                "context": "l, string $message = ''): void\n    {\n        if (!class_exists($expected) && !interface_exists($expe"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1780,
                "context": "l, string $message = ''): void\n    {\n        if (!class_exists($expected) && !interface_exists($expe"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Generator/Generator.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 372,
                "context": "  $testDoubleClassPrefix,\n        );\n\n        if (class_exists($_mockClassName['fullClassName'])) {\n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 571,
                "context": "((string) mt_rand()), 0, 8);\n            } while (class_exists($className, false));\n        }\n\n     "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 662,
                "context": "eKnownType(string $type): void\n    {\n        if (!class_exists($type) && !interface_exists($type)) {"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 700,
                "context": " '') {\n            return;\n        }\n\n        if (class_exists($className, false) ||\n            int"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 845,
                "context": "exists($property, 'isFinal'));\n            assert(class_exists(PropertyHookType::class));\n\n         "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/MockObject/Generator/DoubledClass.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 50,
                "context": "ic function generate(): string\n    {\n        if (!class_exists($this->mockName, false)) {\n          "
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/TestCase.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1393,
                "context": "ency->getTargetClassName();\n\n                if (!class_exists($dependencyClassName)) {\n            "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 1912,
                "context": "Name] = explode('::', $dependency);\n\n        if (!class_exists($className)) {\n            return fal"
            }
        ],
        "vendor/phpunit/phpunit/src/Framework/Constraint/Type/IsInstanceOf.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 37,
                "context": "ction __construct(string $name)\n    {\n        if (class_exists($name)) {\n            $this->type = '"
            }
        ],
        "vendor/phpunit/phpunit/src/Runner/Extension/ExtensionBootstrapper.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 45,
                "context": "Name, array $parameters): void\n    {\n        if (!class_exists($className)) {\n            EventFacad"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/Value/TestSuite/TestSuiteBuilder.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 45,
                "context": "de('::', $testSuite->name());\n\n            assert(class_exists($className));\n            assert($met"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 70,
                "context": "assName = $testSuite->name();\n\n            assert(class_exists($testClassName));\n\n            $refle"
            }
        ],
        "vendor/phpunit/phpunit/src/Event/TypeMap.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 115,
                "context": "ists(string $eventClass): void\n    {\n        if (!class_exists($eventClass)) {\n            throw new"
            }
        ],
        "vendor/phpunit/phpunit/src/Metadata/Parser/AttributeParser.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 107,
                "context": "assName): MetadataCollection\n    {\n        assert(class_exists($className));\n\n        $reflector = n"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 117,
                "context": "        continue;\n            }\n\n            if (!class_exists($attribute->getName())) {\n           "
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 473,
                "context": "hodName): MetadataCollection\n    {\n        assert(class_exists($className));\n        assert(method_e"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 484,
                "context": "        continue;\n            }\n\n            if (!class_exists($attribute->getName())) {\n           "
            }
        ],
        "vendor/phpunit/phpunit/src/Metadata/Parser/CachingParser.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 51,
                "context": "assName): MetadataCollection\n    {\n        assert(class_exists($className));\n\n        if (isset($thi"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 68,
                "context": "hodName): MetadataCollection\n    {\n        assert(class_exists($className));\n        assert(method_e"
            }
        ],
        "vendor/phpunit/phpunit/src/Metadata/Api/HookMethods.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 46,
                "context": "hods(string $className): array\n    {\n        if (!class_exists($className)) {\n            return sel"
            }
        ],
        "vendor/phpunit/phpunit/src/Metadata/Api/Requirements.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 165,
                "context": "stanceof RequiresFunction);\n\n                if (!function_exists($metadata->functionName())) {\n    "
            }
        ],
        "vendor/phpunit/phpunit/src/Logging/TestDox/NamePrettifier.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 67,
                "context": "Name(string $className): string\n    {\n        if (class_exists($className)) {\n            $classLeve"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/phpstan/bootstrap.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 51,
                "context": "es']['a4a119a56e50fbb293281d9a48007e0e'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Php80\\Php80::class,"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 60,
                "context": "es']['0e6d7bf4a5811bfa5cf40c5ccd6fae6a'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Mbstring\\Mbstring::"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 69,
                "context": "es']['e69f7f6ee287b969198c3c9d6777bd38'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Intl\\Normalizer\\Nor"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 79,
                "context": "es']['8825ede83f2f289127722d4e842cf7e8'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Intl\\Grapheme\\Graph"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 89,
                "context": "es']['23c18046f52bef3eea034657bafda50f'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Php81\\Php81::class,"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/phpstan/extension-installer/src/Plugin.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 182,
                "context": "l;\n\t\tif (count($phpstanVersionConstraints) > 0 && class_exists(Intervals::class)) {\n\t\t\tif (count($ph"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/composer/ClassLoader.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 367,
                "context": "ix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_ge"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/nette/utils/src/Utils/Strings.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 137,
                "context": "\t// convert to compressed normal form (NFC)\n\t\tif (class_exists('Normalizer', false) && ($n = \\Normal"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 191,
                "context": " = null;\n\t\tif ($transliterator === null) {\n\t\t\tif (class_exists('Transliterator', false)) {\n\t\t\t\t$tran"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 354,
                "context": "tring $right, ?int $length = null): bool\n\t{\n\t\tif (class_exists('Normalizer', false)) {\n\t\t\t$left = \\N"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 116,
                "context": "int $start, ?int $length = null): string\n\t{\n\t\tif (function_exists('mb_substr')) {\n\t\t\treturn mb_subst"
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/nette/utils/src/Utils/Validators.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 372,
                "context": "c function isType(string $type): bool\n\t{\n\t\treturn class_exists($type) || interface_exists($type) || "
            }
        ],
        "vendor/phpunit/php-code-coverage/tools/.phpstan/vendor/nette/utils/src/Utils/Image.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 767,
                "context": "): mixed\n\t{\n\t\t$function = 'image' . $name;\n\t\tif (!function_exists($function)) {\n\t\t\tObjectHelpers::st"
            }
        ],
        "vendor/phpunit/php-invoker/src/exceptions/ProcessControlExtensionNotLoadedException.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 28,
                "context": "for PHP must be loaded.';\n        }\n\n        if (!function_exists('pcntl_signal')) {\n            $me"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 32,
                "context": "n must not be disabled.';\n        }\n\n        if (!function_exists('pcntl_async_signals')) {\n        "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 36,
                "context": "n must not be disabled.';\n        }\n\n        if (!function_exists('pcntl_alarm')) {\n            $mes"
            }
        ],
        "vendor/phpunit/php-invoker/src/Invoker.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 63,
                "context": "    {\n        return extension_loaded('pcntl') && function_exists('pcntl_signal') && function_exists"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 63,
                "context": "ed('pcntl') && function_exists('pcntl_signal') && function_exists('pcntl_async_signals') && function"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 63,
                "context": "al') && function_exists('pcntl_async_signals') && function_exists('pcntl_alarm');\n    }\n}\n"
            }
        ],
        "vendor/squizlabs/php_codesniffer/autoload.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 22,
                "context": "omposer\\Autoload\\ClassLoader;\nuse Exception;\n\nif (class_exists('PHP_CodeSniffer\\Autoload', false) =="
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/AllTests.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 19,
                "context": "o different suite objects.\n$phpunit7 = false;\nif (class_exists('\\PHPUnit\\Runner\\Version') === true) "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/Core/Ruleset/SetSniffPropertyTest.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 390,
                "context": "'PHPUnit\\Framework\\Error\\Deprecated';\n        if (class_exists($exceptionClass) === false) {\n       "
            }
        ],
        "vendor/squizlabs/php_codesniffer/tests/bootstrap.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 46,
                "context": "Compatibility for PHPUnit < 6 and PHPUnit 6+.\nif (class_exists('PHPUnit_Framework_TestSuite') === tr"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 46,
                "context": "exists('PHPUnit_Framework_TestSuite') === true && class_exists('PHPUnit\\Framework\\TestSuite') === fa"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 50,
                "context": "Suite', 'PHPUnit'.'\\Framework\\TestSuite');\n}\n\nif (class_exists('PHPUnit_Framework_TestCase') === tru"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 50,
                "context": "_exists('PHPUnit_Framework_TestCase') === true && class_exists('PHPUnit\\Framework\\TestCase') === fal"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 54,
                "context": "stCase', 'PHPUnit'.'\\Framework\\TestCase');\n}\n\nif (class_exists('PHPUnit_TextUI_TestRunner') === true"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 54,
                "context": "s_exists('PHPUnit_TextUI_TestRunner') === true && class_exists('PHPUnit\\TextUI\\TestRunner') === fals"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 58,
                "context": "tRunner', 'PHPUnit'.'\\TextUI\\TestRunner');\n}\n\nif (class_exists('PHPUnit_Framework_TestResult') === t"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 58,
                "context": "xists('PHPUnit_Framework_TestResult') === true && class_exists('PHPUnit\\Framework\\TestResult') === f"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Tokenizers/Tokenizer.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 180,
                "context": "S');\n\n        $checkEncoding = false;\n        if (function_exists('iconv_strlen') === true) {\n      "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 592,
                "context": "    {\n        $checkEncoding = false;\n        if (function_exists('iconv_strlen') === true) {\n      "
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Util/Common.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 206,
                "context": "he POSIX extensions we will use them.\n        if (function_exists('posix_isatty') === true) {\n      "
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Util/MessageCollector.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 295,
                "context": "olumn(array $input, $columnKey)\n    {\n        if (function_exists('array_column') === true) {\n      "
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Config.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 233,
                "context": "is->settings[$name] === 'auto') {\n            if (function_exists('shell_exec') === true) {\n        "
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Reporter.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 117,
                "context": "load::loadFile($filename);\n            } else if (class_exists('PHP_CodeSniffer\\Reports\\\\'.ucfirst($"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 120,
                "context": "Reports\\\\'.ucfirst($type);\n            } else if (class_exists($type) === true) {\n                //"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 133,
                "context": "e;\n                    }\n\n                    if (class_exists($nsPrefix.'\\\\'.$trimmedType) === true"
            }
        ],
        "vendor/squizlabs/php_codesniffer/src/Runner.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 433,
                "context": "nsion isn't installed, we can't fork.\n        if (function_exists('pcntl_fork') === false) {\n       "
            }
        ],
        "vendor/sebastian/comparator/tests/unit/FactoryTest.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 82,
                "context": "rationComparator::class],\n        ];\n\n        if (class_exists(Number::class)) {\n            $instan"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/phpstan/bootstrap.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 51,
                "context": "es']['a4a119a56e50fbb293281d9a48007e0e'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Php80\\Php80::class,"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 60,
                "context": "es']['0e6d7bf4a5811bfa5cf40c5ccd6fae6a'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Mbstring\\Mbstring::"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 69,
                "context": "es']['e69f7f6ee287b969198c3c9d6777bd38'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Intl\\Normalizer\\Nor"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 79,
                "context": "es']['8825ede83f2f289127722d4e842cf7e8'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Intl\\Grapheme\\Graph"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 89,
                "context": "es']['23c18046f52bef3eea034657bafda50f'])\n\t\t\t\t&& !class_exists(\\Symfony\\Polyfill\\Php81\\Php81::class,"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/phpstan/extension-installer/src/Plugin.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 182,
                "context": "l;\n\t\tif (count($phpstanVersionConstraints) > 0 && class_exists(Intervals::class)) {\n\t\t\tif (count($ph"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/composer/ClassLoader.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 367,
                "context": "ix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_ge"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/nette/utils/src/Utils/Strings.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 137,
                "context": "\t// convert to compressed normal form (NFC)\n\t\tif (class_exists('Normalizer', false) && ($n = \\Normal"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 191,
                "context": " = null;\n\t\tif ($transliterator === null) {\n\t\t\tif (class_exists('Transliterator', false)) {\n\t\t\t\t$tran"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 354,
                "context": "tring $right, ?int $length = null): bool\n\t{\n\t\tif (class_exists('Normalizer', false)) {\n\t\t\t$left = \\N"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 116,
                "context": "int $start, ?int $length = null): string\n\t{\n\t\tif (function_exists('mb_substr')) {\n\t\t\treturn mb_subst"
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/nette/utils/src/Utils/Validators.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 372,
                "context": "c function isType(string $type): bool\n\t{\n\t\treturn class_exists($type) || interface_exists($type) || "
            }
        ],
        "vendor/sebastian/type/tools/.phpstan/vendor/nette/utils/src/Utils/Image.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 767,
                "context": "): mixed\n\t{\n\t\t$function = 'image' . $name;\n\t\tif (!function_exists($function)) {\n\t\t\tObjectHelpers::st"
            }
        ],
        "vendor/sebastian/type/src/type/CallableType.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 101,
                "context": "pe->className()->qualifiedName();\n\n        assert(class_exists($className));\n\n        return (new Re"
            },
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 168,
                "context": "odName] = $type->value();\n        }\n\n        if (!class_exists($className)) {\n            return fal"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 112,
                "context": "          return false;\n        }\n\n        return function_exists($type->value());\n    }\n\n    privat"
            }
        ],
        "vendor/sebastian/type/src/type/IterableType.php": [
            {
                "pattern": "class_exists\\s*\\(",
                "match": "class_exists(",
                "line": 49,
                "context": "className()->qualifiedName();\n\n            assert(class_exists($className));\n\n            return (ne"
            }
        ],
        "vendor/sebastian/environment/src/Console.php": [
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 75,
                "context": " }\n\n        if ($this->isWindows() &&\n            function_exists('sapi_windows_vt100_support') &&\n "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 123,
                "context": " (is_resource($fileDescriptor)) {\n            if (function_exists('stream_isatty') && @stream_isatty"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 127,
                "context": "      return true;\n            }\n\n            if (function_exists('fstat')) {\n                $stat "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 136,
                "context": "          return false;\n        }\n\n        return function_exists('posix_isatty') && @posix_isatty($"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 149,
                "context": "mberOfColumnsInteractive(): int\n    {\n        if (function_exists('shell_exec') && preg_match('#\\d+ "
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 155,
                "context": ") $match[1];\n            }\n        }\n\n        if (function_exists('shell_exec') && preg_match('#colu"
            },
            {
                "pattern": "function_exists\\s*\\(",
                "match": "function_exists(",
                "line": 174,
                "context": "  $columns = (int) $matches[1];\n        } elseif (function_exists('proc_open')) {\n            $proce"
            }
        ]
    },
    "corrected_usage": {
        "improved_registrations": [
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 204
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 205
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 206
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "dashicons",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 214
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 339
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post-admin",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 340
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles-admin",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 341
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "jquery",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 158
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 207
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 208
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 209
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 210
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 211
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "jquery",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 293
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 342
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 343
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 344
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 345
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 346
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 108
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 117
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 125
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 243
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post-admin",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 252
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles-admin",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 260
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 134
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 142
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 150
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 162
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 171
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 269
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 277
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 285
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 297
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 306
            },
            {
                "file": "src/Services/Settings/SettingsControllerService.php",
                "asset": "mpai-settings",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 424
            },
            {
                "file": "src/Services/Settings/SettingsControllerService.php",
                "asset": "mpai-settings",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 432
            },
            {
                "file": "templates/settings-page.php",
                "asset": "jquery",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 133
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 204
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 205
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 206
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "dashicons",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 214
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 339
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post-admin",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 340
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles-admin",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 341
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "jquery",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 158
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 207
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 208
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 209
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 210
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 211
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "jquery",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 293
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 342
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 343
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 344
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 345
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 346
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 108
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 117
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 125
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 243
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-post-admin",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 252
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-table-styles-admin",
                "pattern": "wp_register_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 260
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 134
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 142
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 150
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 162
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 171
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-xml-processor-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 269
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-data-handler-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 277
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-text-formatter-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 285
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-blog-formatter-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 297
            },
            {
                "file": "src/ChatInterface.php",
                "asset": "mpai-chat-admin",
                "pattern": "wp_register_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 306
            },
            {
                "file": "src/Services/Settings/SettingsControllerService.php",
                "asset": "mpai-settings",
                "pattern": "wp_enqueue_style\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 424
            },
            {
                "file": "src/Services/Settings/SettingsControllerService.php",
                "asset": "mpai-settings",
                "pattern": "wp_enqueue_script\\s*\\(\\s*['\"]([^'\"]+)['\"]",
                "line": 432
            }
        ]
    },
    "recommendations": [
        {
            "type": "template_cleanup",
            "priority": "high",
            "count": 1,
            "action": "Verify 1 potentially unused templates",
            "files": [
                "templates/settings-page.php"
            ]
        }
    ]
}
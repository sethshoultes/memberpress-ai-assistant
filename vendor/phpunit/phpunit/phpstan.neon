parameters:
    level: 6

    paths:
        - src

    excludePaths:
        # exclude partial traits, which are only used in runtime generated code
        - src/Framework/MockObject/Runtime/Api

    checkTooWideReturnTypesInProtectedAndPublicMethods: true
    reportAlwaysTrueInLastCondition: true
    reportPossiblyNonexistentConstantArrayOffset: true
    reportPossiblyNonexistentGeneralArrayOffset: true
    treatPhpDocTypesAsCertain: false

    strictRules:
        allRules: false
        booleansInConditions: true
        closureUsesThis: true
        disallowedBacktick: true
        disallowedEmpty: true
        disallowedImplicitArrayCreation: true
        disallowedLooseComparison: true
        disallowedShortTernary: true
        illegalConstructorMethodCall: true
        matchingInheritedMethodNames: true
        noVariableVariables: true
        numericOperandsInArithmeticOperators: true
        overwriteVariablesWithLoop: true
        requireParentConstructorCall: true
        strictArrayFilter: true
        strictFunctionCalls: true
        switchConditionsMatchingType: true
        uselessCast: true

    ergebnis:
        allRules: false
        final:
            enabled: true
            classesNotRequiredToBeAbstractOrFinal:
                - PHPUnit\Framework\Constraint\Count
                - PHPUnit\Framework\AssertionFailedError
                - PHPUnit\Framework\Exception
                - PHPUnit\Framework\TestSuite
        privateInFinalClass:
            enabled: true

    type_coverage:
        declare: 100
        return: 100
        param: 100
        property: 100
        constant: 100

    ignoreErrors:
        # ignore errors caused by defensive programming
        - '#Call to function assert\(\) with true will always evaluate to true.#'
        - '#Instanceof between .* and .* will always evaluate to true.#'
        - '#Strict comparison using !== between .*non-empty-string.* and .* will always evaluate to true.#'
        - '#Strict comparison using !== between .*non-falsy-string.* and .* will always evaluate to true.#'
        - identifier: argument.named

includes:
	- phar://phpstan.phar/conf/bleedingEdge.neon
